import { Constants } from '../constants';
export function sliderValidator(inputValue, options) {
    const isRequired = options.required;
    const minValue = options.minValue;
    const maxValue = options.maxValue;
    const errorMsg = options.errorMessage;
    const mapValidation = {
        '{{minValue}}': minValue,
        '{{maxValue}}': maxValue
    };
    if (options.validator) {
        return options.validator(inputValue, options.editorArgs);
    }
    else if (isRequired && inputValue === '') {
        return {
            valid: false,
            msg: errorMsg || Constants.VALIDATION_REQUIRED_FIELD
        };
    }
    else if (minValue !== undefined && maxValue !== undefined && inputValue !== null && (inputValue < minValue || inputValue > maxValue)) {
        // when decimal value is bigger than 0, we only accept the decimal values as that value set
        // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals
        return {
            valid: false,
            msg: errorMsg || Constants.VALIDATION_EDITOR_NUMBER_BETWEEN.replace(/{{minValue}}|{{maxValue}}/gi, (matched) => {
                return mapValidation[matched];
            })
        };
    }
    return { valid: true, msg: null };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyVmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9lZGl0b3JWYWxpZGF0b3JzL3NsaWRlclZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBYXpDLE1BQU0sVUFBVSxlQUFlLENBQUMsVUFBZSxFQUFFLE9BQStCO0lBQzlFLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7SUFDcEMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztJQUNsQyxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO0lBQ2xDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7SUFDdEMsTUFBTSxhQUFhLEdBQUc7UUFDcEIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsY0FBYyxFQUFFLFFBQVE7S0FDekIsQ0FBQztJQUVGLElBQUksT0FBTyxDQUFDLFNBQVMsRUFBRTtRQUNyQixPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUMxRDtTQUFNLElBQUksVUFBVSxJQUFJLFVBQVUsS0FBSyxFQUFFLEVBQUU7UUFDMUMsT0FBTztZQUNMLEtBQUssRUFBRSxLQUFLO1lBQ1osR0FBRyxFQUFFLFFBQVEsSUFBSSxTQUFTLENBQUMseUJBQXlCO1NBQ3JELENBQUM7S0FDSDtTQUFNLElBQUksUUFBUSxLQUFLLFNBQVMsSUFBSSxRQUFRLEtBQUssU0FBUyxJQUFJLFVBQVUsS0FBSyxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUMsRUFBRTtRQUN0SSwyRkFBMkY7UUFDM0YsaUdBQWlHO1FBQ2pHLE9BQU87WUFDTCxLQUFLLEVBQUUsS0FBSztZQUNaLEdBQUcsRUFBRSxRQUFRLElBQUksU0FBUyxDQUFDLGdDQUFnQyxDQUFDLE9BQU8sQ0FBQyw2QkFBNkIsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFO2dCQUM3RyxPQUFPLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUM7U0FDSCxDQUFDO0tBQ0g7SUFFRCxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUM7QUFDcEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4uL2NvbnN0YW50cyc7XHJcbmltcG9ydCB7IEVkaXRvclZhbGlkYXRvck91dHB1dCB9IGZyb20gJy4uL21vZGVscy9lZGl0b3JWYWxpZGF0b3JPdXRwdXQuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgRWRpdG9yVmFsaWRhdG9yIH0gZnJvbSAnLi4vbW9kZWxzL2VkaXRvclZhbGlkYXRvci5pbnRlcmZhY2UnO1xyXG5cclxuaW50ZXJmYWNlIFNsaWRlclZhbGlkYXRvck9wdGlvbnMge1xyXG4gIGVkaXRvckFyZ3M6IGFueTtcclxuICBlcnJvck1lc3NhZ2U/OiBzdHJpbmc7XHJcbiAgbWluVmFsdWU/OiBzdHJpbmcgfCBudW1iZXI7XHJcbiAgbWF4VmFsdWU/OiBzdHJpbmcgfCBudW1iZXI7XHJcbiAgcmVxdWlyZWQ/OiBib29sZWFuO1xyXG4gIHZhbGlkYXRvcj86IEVkaXRvclZhbGlkYXRvcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNsaWRlclZhbGlkYXRvcihpbnB1dFZhbHVlOiBhbnksIG9wdGlvbnM6IFNsaWRlclZhbGlkYXRvck9wdGlvbnMpOiBFZGl0b3JWYWxpZGF0b3JPdXRwdXQge1xyXG4gIGNvbnN0IGlzUmVxdWlyZWQgPSBvcHRpb25zLnJlcXVpcmVkO1xyXG4gIGNvbnN0IG1pblZhbHVlID0gb3B0aW9ucy5taW5WYWx1ZTtcclxuICBjb25zdCBtYXhWYWx1ZSA9IG9wdGlvbnMubWF4VmFsdWU7XHJcbiAgY29uc3QgZXJyb3JNc2cgPSBvcHRpb25zLmVycm9yTWVzc2FnZTtcclxuICBjb25zdCBtYXBWYWxpZGF0aW9uID0ge1xyXG4gICAgJ3t7bWluVmFsdWV9fSc6IG1pblZhbHVlLFxyXG4gICAgJ3t7bWF4VmFsdWV9fSc6IG1heFZhbHVlXHJcbiAgfTtcclxuXHJcbiAgaWYgKG9wdGlvbnMudmFsaWRhdG9yKSB7XHJcbiAgICByZXR1cm4gb3B0aW9ucy52YWxpZGF0b3IoaW5wdXRWYWx1ZSwgb3B0aW9ucy5lZGl0b3JBcmdzKTtcclxuICB9IGVsc2UgaWYgKGlzUmVxdWlyZWQgJiYgaW5wdXRWYWx1ZSA9PT0gJycpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHZhbGlkOiBmYWxzZSxcclxuICAgICAgbXNnOiBlcnJvck1zZyB8fCBDb25zdGFudHMuVkFMSURBVElPTl9SRVFVSVJFRF9GSUVMRFxyXG4gICAgfTtcclxuICB9IGVsc2UgaWYgKG1pblZhbHVlICE9PSB1bmRlZmluZWQgJiYgbWF4VmFsdWUgIT09IHVuZGVmaW5lZCAmJiBpbnB1dFZhbHVlICE9PSBudWxsICYmIChpbnB1dFZhbHVlIDwgbWluVmFsdWUgfHwgaW5wdXRWYWx1ZSA+IG1heFZhbHVlKSkge1xyXG4gICAgLy8gd2hlbiBkZWNpbWFsIHZhbHVlIGlzIGJpZ2dlciB0aGFuIDAsIHdlIG9ubHkgYWNjZXB0IHRoZSBkZWNpbWFsIHZhbHVlcyBhcyB0aGF0IHZhbHVlIHNldFxyXG4gICAgLy8gZm9yIGV4YW1wbGUgaWYgd2Ugc2V0IGRlY2ltYWxQbGFjZXMgdG8gMiwgd2Ugd2lsbCBvbmx5IGFjY2VwdCBudW1iZXJzIGJldHdlZW4gMCBhbmQgMiBkZWNpbWFsc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdmFsaWQ6IGZhbHNlLFxyXG4gICAgICBtc2c6IGVycm9yTXNnIHx8IENvbnN0YW50cy5WQUxJREFUSU9OX0VESVRPUl9OVU1CRVJfQkVUV0VFTi5yZXBsYWNlKC97e21pblZhbHVlfX18e3ttYXhWYWx1ZX19L2dpLCAobWF0Y2hlZCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBtYXBWYWxpZGF0aW9uW21hdGNoZWRdO1xyXG4gICAgICB9KVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7IHZhbGlkOiB0cnVlLCBtc2c6IG51bGwgfTtcclxufVxyXG4iXX0=