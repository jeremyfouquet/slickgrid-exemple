import * as tslib_1 from "tslib";
import { Component, Input, Optional } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { Constants } from '../constants';
import { PaginationService } from '../services/pagination.service';
import { getTranslationPrefix, unsubscribeAllObservables } from '../services/utilities';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
import * as ɵngcc2 from '@angular/common';

function SlickPaginationComponent_option_24_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 19);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pageSize_r2 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("value", pageSize_r2);
    ɵngcc0.ɵɵproperty("selected", pageSize_r2 === ctx_r0.itemsPerPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(pageSize_r2);
} }
function SlickPaginationComponent_span_29_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 20);
    ɵngcc0.ɵɵelementStart(2, "span", 21);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, "-");
    ɵngcc0.ɵɵelementStart(5, "span", 22);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.dataFrom);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.dataTo);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.textOf, " ");
} }
let SlickPaginationComponent = class SlickPaginationComponent {
    /** Constructor */
    constructor(paginationService, translate) {
        this.paginationService = paginationService;
        this.translate = translate;
        this.subscriptions = [];
        this._enableTranslate = false;
        // text translations (handled by ngx-translate or by custom locale)
        this.textItemsPerPage = 'items per page';
        this.textItems = 'items';
        this.textOf = 'of';
        this.textPage = 'Page';
    }
    get availablePageSizes() {
        return this.paginationService.availablePageSizes;
    }
    get dataFrom() {
        return this.paginationService.dataFrom;
    }
    get dataTo() {
        return this.paginationService.dataTo;
    }
    /** is the left side pagination disabled? */
    get isLeftPaginationDisabled() {
        return this.pageNumber === 1 || this.totalItems === 0;
    }
    /** is the right side pagination disabled? */
    get isRightPaginationDisabled() {
        return this.pageNumber === this.pageCount || this.totalItems === 0;
    }
    get itemsPerPage() {
        return this.paginationService.itemsPerPage;
    }
    get pageCount() {
        return this.paginationService.pageCount;
    }
    get pageNumber() {
        return this.paginationService.pageNumber;
    }
    set pageNumber(page) {
        // the setter has to be declared but we won't use it, instead we will use the "changeToCurrentPage()" to only update the value after ENTER keydown event
    }
    get totalItems() {
        return this.paginationService.totalItems;
    }
    ngOnDestroy() {
        this.dispose();
    }
    ngOnInit() {
        this._gridOptions = this.gridOptions || {};
        this._enableTranslate = this._gridOptions && this._gridOptions.enableTranslate || false;
        this._locales = this._gridOptions && this._gridOptions.locales || Constants.locales;
        if (this._enableTranslate && !this.translate) {
            throw new Error('[Angular-Slickgrid] requires "ngx-translate" to be installed and configured when the grid option "enableTranslate" is enabled.');
        }
        this.translateAllUiTexts(this._locales);
        // translate all the text using ngx-translate or custom locales
        if (this._enableTranslate && this.translate && this.translate.onLangChange) {
            this.subscriptions.push(this.translate.onLangChange.subscribe(() => this.translateAllUiTexts(this._locales)));
        }
    }
    changeToFirstPage(event) {
        if (!this.isLeftPaginationDisabled) {
            this.paginationService.goToFirstPage(event);
        }
    }
    changeToLastPage(event) {
        if (!this.isRightPaginationDisabled) {
            this.paginationService.goToLastPage(event);
        }
    }
    changeToNextPage(event) {
        if (!this.isRightPaginationDisabled) {
            this.paginationService.goToNextPage(event);
        }
    }
    changeToPreviousPage(event) {
        if (!this.isLeftPaginationDisabled) {
            this.paginationService.goToPreviousPage(event);
        }
    }
    changeToCurrentPage(event) {
        let pageNumber = 1;
        if (event && event.currentTarget && event.currentTarget.value) {
            pageNumber = +(event.currentTarget.value);
        }
        this.paginationService.goToPageNumber(pageNumber, event);
    }
    changeItemPerPage(event) {
        let itemsPerPage = 1;
        if (event && event.currentTarget && event.currentTarget.value) {
            itemsPerPage = +(event.currentTarget.value);
        }
        this.paginationService.changeItemPerPage(itemsPerPage, event);
    }
    dispose() {
        this.paginationService.dispose();
        // also unsubscribe all Angular Subscriptions
        this.subscriptions = unsubscribeAllObservables(this.subscriptions);
    }
    // --
    // private functions
    // --------------------
    /** Translate all the texts shown in the UI, use ngx-translate service when available or custom locales when service is null */
    translateAllUiTexts(locales) {
        if (this._enableTranslate && this.translate && this.translate.instant && this.translate.currentLang) {
            const translationPrefix = getTranslationPrefix(this._gridOptions);
            this.textItemsPerPage = this.translate.instant(`${translationPrefix}ITEMS_PER_PAGE`);
            this.textItems = this.translate.instant(`${translationPrefix}ITEMS`);
            this.textOf = this.translate.instant(`${translationPrefix}OF`);
            this.textPage = this.translate.instant(`${translationPrefix}PAGE`);
        }
        else if (locales) {
            this.textItemsPerPage = locales.TEXT_ITEMS_PER_PAGE || 'TEXT_ITEMS_PER_PAGE';
            this.textItems = locales.TEXT_ITEMS || 'TEXT_ITEMS';
            this.textOf = locales.TEXT_OF || 'TEXT_OF';
            this.textPage = locales.TEXT_PAGE || 'TEXT_PAGE';
        }
    }
};
SlickPaginationComponent.ɵfac = function SlickPaginationComponent_Factory(t) { return new (t || SlickPaginationComponent)(ɵngcc0.ɵɵdirectiveInject(PaginationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslateService, 8)); };
SlickPaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SlickPaginationComponent, selectors: [["slick-pagination"]], inputs: { gridOptions: "gridOptions" }, decls: 34, vars: 14, consts: [[1, "slick-pagination"], [1, "slick-pagination-nav"], ["aria-label", "Page navigation"], [1, "pagination"], [1, "page-item", 3, "ngClass"], ["aria-label", "First", 1, "page-link", "icon-seek-first", "fa", "fa-angle-double-left", 3, "click"], ["aria-label", "Previous", 1, "page-link", "icon-seek-prev", "fa", "fa-angle-left", 3, "click"], [1, "slick-page-number"], ["type", "text", "data-test", "page-number-input", "size", "1", 1, "form-control", 3, "value", "readOnly", "change"], ["data-test", "page-count"], ["aria-label", "Next", 1, "page-link", "icon-seek-next", "text-center", "fa", "fa-lg", "fa-angle-right", 3, "click"], ["aria-label", "Last", 1, "page-link", "icon-seek-end", "fa", "fa-lg", "fa-angle-double-right", 3, "click"], [1, "slick-pagination-settings"], ["id", "items-per-page-label", 3, "change"], [3, "value", "selected", 4, "ngFor", "ngForOf"], [1, "slick-pagination-count"], [4, "ngIf"], [1, "page-info-total-items"], ["data-test", "total-items"], [3, "value", "selected"], [1, "page-info-from-to"], ["data-test", "item-from"], ["data-test", "item-to"]], template: function SlickPaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "nav", 2);
        ɵngcc0.ɵɵelementStart(3, "ul", 3);
        ɵngcc0.ɵɵelementStart(4, "li", 4);
        ɵngcc0.ɵɵelementStart(5, "a", 5);
        ɵngcc0.ɵɵlistener("click", function SlickPaginationComponent_Template_a_click_5_listener($event) { return ctx.changeToFirstPage($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "li", 4);
        ɵngcc0.ɵɵelementStart(7, "a", 6);
        ɵngcc0.ɵɵlistener("click", function SlickPaginationComponent_Template_a_click_7_listener($event) { return ctx.changeToPreviousPage($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 7);
        ɵngcc0.ɵɵelementStart(9, "span");
        ɵngcc0.ɵɵtext(10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "input", 8);
        ɵngcc0.ɵɵlistener("change", function SlickPaginationComponent_Template_input_change_11_listener($event) { return ctx.changeToCurrentPage($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "span");
        ɵngcc0.ɵɵtext(13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "span", 9);
        ɵngcc0.ɵɵtext(15);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "nav", 2);
        ɵngcc0.ɵɵelementStart(17, "ul", 3);
        ɵngcc0.ɵɵelementStart(18, "li", 4);
        ɵngcc0.ɵɵelementStart(19, "a", 10);
        ɵngcc0.ɵɵlistener("click", function SlickPaginationComponent_Template_a_click_19_listener($event) { return ctx.changeToNextPage($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(20, "li", 4);
        ɵngcc0.ɵɵelementStart(21, "a", 11);
        ɵngcc0.ɵɵlistener("click", function SlickPaginationComponent_Template_a_click_21_listener($event) { return ctx.changeToLastPage($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "span", 12);
        ɵngcc0.ɵɵelementStart(23, "select", 13);
        ɵngcc0.ɵɵlistener("change", function SlickPaginationComponent_Template_select_change_23_listener($event) { return ctx.changeItemPerPage($event); });
        ɵngcc0.ɵɵtemplate(24, SlickPaginationComponent_option_24_Template, 2, 3, "option", 14);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "span");
        ɵngcc0.ɵɵtext(26);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(27, ", ");
        ɵngcc0.ɵɵelementStart(28, "span", 15);
        ɵngcc0.ɵɵtemplate(29, SlickPaginationComponent_span_29_Template, 8, 3, "span", 16);
        ɵngcc0.ɵɵelementStart(30, "span", 17);
        ɵngcc0.ɵɵelementStart(31, "span", 18);
        ɵngcc0.ɵɵtext(32);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtext(33);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngClass", ctx.isLeftPaginationDisabled ? "disabled" : "");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.isLeftPaginationDisabled ? "disabled" : "");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ctx.textPage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("value", ctx.pageNumber)("readOnly", ctx.totalItems === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.textOf);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.pageCount, "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngClass", ctx.isRightPaginationDisabled ? "disabled" : "");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ctx.isRightPaginationDisabled ? "disabled" : "");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.availablePageSizes);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.textItemsPerPage);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.totalItems);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ctx.totalItems);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.textItems, " ");
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, ɵngcc2.NgIf], encapsulation: 2 });
SlickPaginationComponent.ctorParameters = () => [
    { type: PaginationService },
    { type: TranslateService, decorators: [{ type: Optional }] }
];
tslib_1.__decorate([
    Input()
], SlickPaginationComponent.prototype, "gridOptions", void 0);
SlickPaginationComponent = tslib_1.__decorate([ tslib_1.__param(1, Optional())
], SlickPaginationComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SlickPaginationComponent, [{
        type: Component,
        args: [{
                selector: 'slick-pagination',
                template: "<div class=\"slick-pagination\">\r\n  <div class=\"slick-pagination-nav\">\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" [ngClass]=\"isLeftPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-first fa fa-angle-double-left\" aria-label=\"First\"\r\n             (click)=\"changeToFirstPage($event)\">\r\n          </a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"isLeftPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-prev fa fa-angle-left\" aria-label=\"Previous\"\r\n             (click)=\"changeToPreviousPage($event)\">\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <div class=\"slick-page-number\">\r\n      <span>{{textPage}}</span>\r\n      <input type=\"text\" class=\"form-control\" data-test=\"page-number-input\" [value]=\"pageNumber\" size=\"1\"\r\n             [readOnly]=\"totalItems === 0\" (change)=\"changeToCurrentPage($event)\">\r\n      <span>{{textOf}}</span><span data-test=\"page-count\"> {{pageCount}}</span>\r\n    </div>\r\n\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" [ngClass]=\"isRightPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-next text-center fa fa-lg fa-angle-right\" aria-label=\"Next\"\r\n             (click)=\"changeToNextPage($event)\">\r\n          </a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"isRightPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-end fa fa-lg fa-angle-double-right\" aria-label=\"Last\"\r\n             (click)=\"changeToLastPage($event)\">\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n  <span class=\"slick-pagination-settings\">\r\n    <select id=\"items-per-page-label\" (change)=\"changeItemPerPage($event)\">\r\n      <option value=\"{{pageSize}}\" [selected]=\"pageSize === itemsPerPage\" *ngFor=\"let pageSize of availablePageSizes\">{{pageSize}}</option>\r\n    </select>\r\n    <span>{{textItemsPerPage}}</span>,\r\n    <span class=\"slick-pagination-count\">\r\n      <span *ngIf=\"totalItems\">\r\n        <span class=\"page-info-from-to\">\r\n          <span data-test=\"item-from\">{{dataFrom}}</span>-<span data-test=\"item-to\">{{dataTo}}</span>\r\n          {{textOf}}\r\n        </span>\r\n      </span>\r\n      <span class=\"page-info-total-items\">\r\n        <span data-test=\"total-items\">{{totalItems}}</span> {{textItems}}\r\n      </span>\r\n    </span>\r\n  </span>\r\n</div>\r\n"
            }]
    }], function () { return [{ type: PaginationService }, { type: ɵngcc1.TranslateService, decorators: [{
                type: Optional
            }] }]; }, { gridOptions: [{
            type: Input
        }] }); })();
export { SlickPaginationComponent };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,