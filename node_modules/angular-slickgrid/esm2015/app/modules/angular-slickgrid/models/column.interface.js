//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"column.interface.js","sourceRoot":"ng://angular-slickgrid/","sources":["app/modules/angular-slickgrid/models/column.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { CellMenu } from './cellMenu.interface';\r\nimport { ColumnEditor } from './columnEditor.interface';\r\nimport { ColumnFilter } from './columnFilter.interface';\r\nimport { Editor } from './editor.interface';\r\nimport { EditorValidator } from './editorValidator.interface';\r\nimport { FieldType } from './fieldType.enum';\r\nimport { Formatter } from './formatter.interface';\r\nimport { Grouping } from './grouping.interface';\r\nimport { GroupTotalsFormatter } from './groupTotalsFormatter.interface';\r\nimport { HeaderButtonItem } from './headerButtonItem.interface';\r\nimport { MenuCommandItem } from './menuCommandItem.interface';\r\nimport { OnEventArgs } from './onEventArgs.interface';\r\nimport { Sorter } from './sorter.interface';\r\n\r\nexport interface Column<T = any> {\r\n  /** async background post-rendering formatter */\r\n  asyncPostRender?: (domCellNode: any, row: number, dataContext: T, columnDef: Column) => void;\r\n\r\n  /** Row Move Behavior, used by the Row Move Manager Plugin */\r\n  behavior?: string;\r\n\r\n  /** Block event triggering of an insert? */\r\n  cannotTriggerInsert?: boolean;\r\n\r\n  /** Options that can be provide to the Cell Context Menu Plugin */\r\n  cellMenu?: CellMenu;\r\n\r\n  /** Column group name for grouping of column headers spanning accross multiple columns */\r\n  columnGroup?: string;\r\n\r\n  /** Column group name translation key that can be used by the Translate Service (i18n) for grouping of column headers spanning accross multiple columns */\r\n  columnGroupKey?: string;\r\n\r\n  /** CSS class to add to the column cell */\r\n  cssClass?: string;\r\n\r\n  /** Column span in pixels or `*`, only input the number value */\r\n  colspan?: number | '*';\r\n\r\n  /** Data key, for example this could be used as a property key for complex object comparison (e.g. dataKey: 'id') */\r\n  dataKey?: string;\r\n\r\n  /** Do we want default sort to be ascending? True by default */\r\n  defaultSortAsc?: boolean;\r\n\r\n  /** Any inline editor function that implements Editor for the cell value or ColumnEditor */\r\n  editor?: any | ColumnEditor;\r\n\r\n  /** Default to false, which leads to exclude the column title from the Column Picker. */\r\n  excludeFromColumnPicker?: boolean;\r\n\r\n  /** Default to false, which leads to exclude the column from the export. */\r\n  excludeFromExport?: boolean;\r\n\r\n  /** Default to false, which leads to exclude the column title from the Grid Menu. */\r\n  excludeFromGridMenu?: boolean;\r\n\r\n  /** Defaults to false, which leads to exclude the field from the query (typically a backend service query) */\r\n  excludeFromQuery?: boolean;\r\n\r\n  /** Defaults to false, which leads to exclude the column from getting a header menu. For example, the checkbox row selection should not have a header menu. */\r\n  excludeFromHeaderMenu?: boolean;\r\n\r\n  /** If defined this will be set as column width in Excel */\r\n  exportColumnWidth?: number;\r\n\r\n  /**\r\n   * Export with a Custom Formatter, useful when we want to use a different Formatter for the export.\r\n   * For example, we might have a boolean field with \"Formatters.checkmark\" but we would like see a translated value for (True/False).\r\n   */\r\n  exportCustomFormatter?: Formatter;\r\n\r\n  /**\r\n   * Export with a Custom Group Total Formatter, useful when we want to use a different Formatter for the export.\r\n   * For example, we might have a boolean field with \"Formatters.checkmark\" but we would like see a translated value for (True/False).\r\n   */\r\n  exportCustomGroupTotalsFormatter?: GroupTotalsFormatter;\r\n\r\n  /**\r\n   * Defaults to false, which leads to Formatters being evaluated on export.\r\n   * Most often used with dates that are stored as UTC but displayed as Date ISO (or any other format) with a Formatter.\r\n   */\r\n  exportWithFormatter?: boolean;\r\n\r\n  /**\r\n   * Do we want to force the cell value to be a string?\r\n   * When set to True, it will wrap the cell value in double quotes and add an equal sign (=) at the beginning of the cell to force Excel to evaluate it as a string and not change it's format.\r\n   * For example, without this flag a cell value with \"1E06\" would be interpreted as a number becoming (1.0E06) by Excel.\r\n   * When set this flag to True, the cell value will be wrapped with an equal sign and double quotes, which forces Excel to evaluate it as a string. The output will be:: =\"1E06\" */\r\n  exportCsvForceToKeepAsString?: boolean;\r\n\r\n  /**\r\n   * Field property name to use from the dataset that is used to display the column data.\r\n   * For example: { id: 'firstName', field: 'firstName' }\r\n   *\r\n   * NOTE: a field with dot notation (.) will be considered a complex object.\r\n   * For example: { id: 'Users', field: 'user.firstName' }\r\n   */\r\n  field: string;\r\n\r\n  /**\r\n   * Only used by Backend Services since the query is built using the column definitions, this is a way to pass extra properties to the backend query.\r\n   * It can help in getting more fields for a Formatter without adding a new column definition every time that we don't want to display.\r\n   * For example: { id: 'Users', field: 'user.firstName', fields: ['user.lastName', 'user.middleName'], formatter: fullNameFormatter }\r\n   */\r\n  fields?: string[];\r\n\r\n  /** Filter class to use when filtering this column */\r\n  filter?: ColumnFilter;\r\n\r\n  /** is the column filterable? Goes with grid option \"enableFiltering: true\". */\r\n  filterable?: boolean;\r\n\r\n  /** Extra option to filter more easily. For example, a \"UTC Date\" field can use a search format of US Format like \">02/28/2017\" */\r\n  filterSearchType?: FieldType;\r\n\r\n  /** are we allowed to focus on the column? */\r\n  focusable?: boolean;\r\n\r\n  /** Formatter function that can be used to change and format certain column(s) in the grid */\r\n  formatter?: Formatter;\r\n\r\n  /** Grouping option used by a Draggable Grouping Column */\r\n  grouping?: Grouping;\r\n\r\n  /** Group Totals Formatter function that can be used to add grouping totals in the grid */\r\n  groupTotalsFormatter?: GroupTotalsFormatter;\r\n\r\n  /** Options that can be provided to the Header Menu Plugin */\r\n  header?: {\r\n    /** list of Buttons to show in the header */\r\n    buttons?: Array<HeaderButtonItem | 'divider'>;\r\n    menu?: { items: Array<MenuCommandItem | 'divider'> };\r\n  };\r\n\r\n  /** CSS class that can be added to the column header */\r\n  headerCssClass?: string;\r\n\r\n  /** @deprecated (please use \"nameKey\" instead) Column header translation key that can be used by the Translate Service (i18n) */\r\n  headerKey?: string;\r\n\r\n  /** ID of the column, each row have to be unique or SlickGrid will throw an error. */\r\n  id: number | string;\r\n\r\n  /**\r\n   * @reserved This is a RESERVED property and is used internally by the library to copy over the Column Editor Options.\r\n   * You can read this property if you wish, but DO NOT override this property (unless you know what you're doing) as it will cause other issues with your editors.\r\n   */\r\n  internalColumnEditor?: ColumnEditor;\r\n\r\n  /** Label key, for example this could be used as a property key for complex object label display (e.g. dataKey: 'name') */\r\n  labelKey?: string;\r\n\r\n  /** Maximum Width of the column in pixels (number only). */\r\n  maxWidth?: number;\r\n\r\n  /** Minimum Width of the column in pixels (number only). */\r\n  minWidth?: number;\r\n\r\n  /** Field Name to be displayed in the Grid (UI) */\r\n  name?: string;\r\n\r\n  /** Field Name translation key that can be used by the translate Service (i18n) to display the text for each column header title */\r\n  nameKey?: string;\r\n\r\n  /** an event that can be used for triggering an action after a cell change */\r\n  onCellChange?: (e: KeyboardEvent | MouseEvent, args: OnEventArgs) => void;\r\n\r\n  /** an event that can be used for triggering an action after a cell click */\r\n  onCellClick?: (e: KeyboardEvent | MouseEvent, args: OnEventArgs) => void;\r\n\r\n  /**\r\n   * Column output type(e.g.Date Picker, the output format that we will see in the picker)\r\n   * NOTE: this is only currently used by the Editors / Filters with a Date Picker\r\n   */\r\n  outputType?: FieldType;\r\n\r\n  /**\r\n   * Column Editor save format type (e.g. which date format to use when saving after choosing a date from the Date Editor picker)\r\n   * NOTE: this is only currently used by the Date Editor (date picker)\r\n   */\r\n  saveOutputType?: FieldType;\r\n\r\n  /** if you want to pass custom paramaters to your Formatter/Editor or anything else */\r\n  params?: any | any[];\r\n\r\n  /** The previous column width in pixels (number only) */\r\n  previousWidth?: number;\r\n\r\n  /**\r\n   * Useful when you want to display a certain field to the UI, but you want to use another field to query when Filtering/Sorting.\r\n   * Please note that it has higher precendence over the \"field\" property.\r\n   */\r\n  queryField?: string;\r\n\r\n  /**\r\n   * When you do not know at hand the name of the Field to use for querying,\r\n   * the lib will run your callback to find out which Field name you want to use by the logic you defined.\r\n   * Useful when you only know the Field name by executing a certain logic in order to get the Field name to query from.\r\n   * @param {string} item data context\r\n   * @return {string} name of the Field that will end up being used to query\r\n   */\r\n  queryFieldNameGetterFn?: (dataContext: T) => string;\r\n\r\n  /**\r\n   * Similar to \"queryField\" but only used when Filtering (please note that it has higher precendence over \"queryField\").\r\n   * Useful when you want to display a certain field to the UI, but you want to use another field to query for Filtering.\r\n   */\r\n  queryFieldFilter?: string;\r\n\r\n  /**\r\n   * Similar to \"queryField\" but only used when Sorting (please note that it has higher precendence over \"queryField\").\r\n   * Useful when you want to display a certain field to the UI, but you want to use another field to query for Sorting.\r\n   */\r\n  queryFieldSorter?: string;\r\n\r\n  /** Is the column resizable, can we make it wider/thinner? A resize cursor will show on the right side of the column when enabled. */\r\n  resizable?: boolean;\r\n\r\n  /** Do we want to re-render the grid on a grid resize */\r\n  rerenderOnResize?: boolean;\r\n\r\n  /** Defaults to false, which leads to Sanitizing all data (striping out any HTML tags) when being evaluated on export. */\r\n  sanitizeDataExport?: boolean;\r\n\r\n  /** Is the column selectable? Goes with grid option \"enableCellNavigation: true\". */\r\n  selectable?: boolean;\r\n\r\n  /** Is the column sortable? Goes with grid option \"enableSorting: true\". */\r\n  sortable?: boolean;\r\n\r\n  /** Custom Sorter function that can be provided to the column */\r\n  sorter?: Sorter;\r\n\r\n  /** Custom Tooltip that can ben shown to the column */\r\n  toolTip?: string;\r\n\r\n  /** What is the Field Type, this can be used in the Formatters/Editors/... */\r\n  type?: FieldType;\r\n\r\n  /** Defaults to false, when set to True will lead to the column being unselected in the UI */\r\n  unselectable?: boolean;\r\n\r\n  /** Editor Validator */\r\n  validator?: EditorValidator;\r\n\r\n  /**\r\n   * Can the value be undefined? Typically undefined values are disregarded when sorting, when set this flag will adds extra logic to Sorting and also sort undefined value.\r\n   * This is an extra flag that user has to enable by themselve because Sorting undefined values has unwanted behavior in some use case\r\n   * (for example Row Detail has UI inconsistencies since undefined is used in the plugin's logic)\r\n   */\r\n  valueCouldBeUndefined?: boolean;\r\n\r\n  /** Width of the column in pixels (number only). */\r\n  width?: number;\r\n}\r\n"]}