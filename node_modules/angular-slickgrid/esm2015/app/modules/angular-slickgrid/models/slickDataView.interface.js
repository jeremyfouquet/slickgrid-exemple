//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"slickDataView.interface.js","sourceRoot":"ng://angular-slickgrid/","sources":["app/modules/angular-slickgrid/models/slickDataView.interface.ts"],"names":[],"mappings":"","sourcesContent":["import { Grouping } from './grouping.interface';\r\nimport { PagingInfo } from './pagingInfo.interface';\r\nimport { SlickEvent } from './slickEvent.interface';\r\nimport { SlickGrid } from './slickGrid.interface';\r\n\r\nexport interface SlickDataView {\r\n  // --\r\n  // Available Methods\r\n\r\n  /** Add an item to the dataset */\r\n  addItem(item: any): void;\r\n\r\n  /** Begin Data Update Transaction */\r\n  beginUpdate(): void;\r\n\r\n  /** Collapse all Groups, optionally pass a level number to only collapse that level */\r\n  collapseAllGroups(level?: number): void;\r\n\r\n  /**\r\n   * Collapse a Group by passing either a Slick.Group's \"groupingKey\" property, or a\r\n   * variable argument list of grouping values denoting a unique path to the row.\r\n   * For example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of the 'high' group.\r\n   */\r\n  collapseGroup(...args: any): void;\r\n\r\n  /** Delete an item from the dataset */\r\n  deleteItem(id: string | number): void;\r\n\r\n  /** End Data Update Transaction */\r\n  endUpdate(): void;\r\n\r\n  /** Expand all Groups, optionally pass a level number to only expand that level */\r\n  expandAllGroups(level?: number): void;\r\n\r\n  /** Expand or Collapse all Groups */\r\n  expandCollapseAllGroups(level: number, collapse: boolean): void;\r\n\r\n  /** Expand or Collapse a specific Group by its grouping key */\r\n  expandCollapseGroup(level: number, groupingKey: string | number, collapse: boolean): void;\r\n\r\n  /**\r\n   * Expand a Group by passing either a Slick.Group's \"groupingKey\" property, or a\r\n   * variable argument list of grouping values denoting a unique path to the row.\r\n   * For example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of the 'high' group.\r\n   */\r\n  expandGroup(...args: any): void;\r\n\r\n  /**\r\n   * Provides a workaround for the extremely slow sorting in IE.\r\n   * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\r\n   * to return the value of that field and then doing a native Array.sort().\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  fastSort(field: string | Function, ascending: boolean): void;\r\n\r\n  /** Get current Filter used by the DataView */\r\n  getFilter(): any;\r\n\r\n  /** Get only the dataset filtered items */\r\n  getFilteredItems: <T = any>() => T[];\r\n\r\n  /** Get current Grouping info */\r\n  getGrouping(): Grouping[];\r\n\r\n  /** Get current Grouping groups */\r\n  getGroups(): any[];\r\n\r\n  /** Get the DataView Id property name to use (defaults to \"Id\" but could be customized to something else when instantiating the DataView) */\r\n  getIdPropertyName(): string;\r\n\r\n  /** Get all Dataset Items */\r\n  getItems: <T = any>() => T[];\r\n\r\n  /** Get dataset item at specific index */\r\n  getItem: <T = any>(index: number) => T;\r\n\r\n  /** Get an item in the dataset by its Id */\r\n  getItemById: <T = any>(id: string | number) => T;\r\n\r\n  /** Get an item in the dataset by its row index */\r\n  getItemByIdx(idx: number): number;\r\n\r\n  /** Get row index in the dataset by its Id */\r\n  getIdxById(id: string | number): number | undefined;\r\n\r\n  /** Get item metadata at specific index */\r\n  getItemMetadata(index: number): any;\r\n\r\n  /** Get dataset length */\r\n  getLength(): number;\r\n\r\n  /** Get Paging Options */\r\n  getPagingInfo(): PagingInfo;\r\n\r\n  /** Get row number of an item in the dataset */\r\n  getRowByItem(item: any): number;\r\n\r\n  /** Get row number of an item in the dataset by its Id */\r\n  getRowById(id: string | number): number | undefined;\r\n\r\n  /** Insert an item to the dataset before a specific index */\r\n  insertItem(insertBefore: number, item: any): void;\r\n\r\n  /** From the items array provided, return the mapped rows */\r\n  mapItemsToRows(items: any[]): number[];\r\n\r\n  /** From the Ids array provided, return the mapped rows */\r\n  mapIdsToRows(ids: Array<number | string>): number[];\r\n\r\n  /** From the rows array provided, return the mapped Ids */\r\n  mapRowsToIds(rows: Array<number>): Array<number | string>;\r\n\r\n  /** Refresh the DataView */\r\n  refresh(): void;\r\n\r\n  /** Re-Sort the dataset */\r\n  reSort(): void;\r\n\r\n  /** Set some Grouping */\r\n  setGrouping(groupingInfo: Grouping | Grouping[]): void;\r\n\r\n  /** Set a Filter that:  will be used by the DataView */\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  setFilter(filterFn: Function): void;\r\n\r\n  /** Set the Items with a new Dataset and optionally pass a different Id property name */\r\n  setItems(data: any[], objectIdProperty?: string): void;\r\n\r\n  /** Set Paging Options */\r\n  setPagingOptions(args: PagingInfo): void;\r\n\r\n  setRefreshHints(hints: any): void;\r\n\r\n  /** Set extra Filter arguments which will be used by the Filter method */\r\n  setFilterArgs(args: any): void;\r\n\r\n  /** Sort Method to use by the DataView */\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  sort(comparer: Function, ascending?: boolean): void;\r\n\r\n  /** Add an item in a sorted dataset (a Sort function must be defined) */\r\n  sortedAddItem(item: any): void;\r\n\r\n  /** Update an item in a sorted dataset (a Sort function must be defined) */\r\n  sortedUpdateItem(id: string | number, item: number): void;\r\n\r\n  /** Get the sorted index of the item to search */\r\n  sortedIndex(searchItem: any): number;\r\n\r\n  /**\r\n   * Wires the grid and the DataView together to keep row selection tied to item ids.\r\n   * This is useful since, without it, the grid only knows about rows, so if the items\r\n   * move around, the same rows stay selected instead of the selection moving along\r\n   * with the items.\r\n   *\r\n   * NOTE:  This doesn't work with cell selection model.\r\n   *\r\n   * @param grid {Slick.Grid} The grid to sync selection with.\r\n   * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\r\n   *     view due to them getting filtered out.\r\n   * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\r\n   *     that are currently out of the view (see preserveHidden) as selected when selection\r\n   *     changes.\r\n   * @return {Slick.Event} An event that notifies when an internal list of selected row ids\r\n   *     changes.  This is useful since, in combination with the above two options, it allows\r\n   *     access to the full list selected row ids, and not just the ones visible to the grid.\r\n   */\r\n  syncGridSelection(grid: SlickGrid, preserveHidden: boolean, preserveHiddenOnSelectionChange?: boolean): SlickEvent;\r\n\r\n  syncGridCellCssStyles(grid: SlickGrid, key: string): void;\r\n\r\n  /** Update a specific Index */\r\n  updateIdxById(startingIndex: number): void;\r\n\r\n  /** Update an item in the dataset by its Id */\r\n  updateItem<T = any>(id: string | number, item: T): void;\r\n\r\n  // ---------------------------\r\n  // Available DataView Events\r\n  // ---------------------------\r\n\r\n  /** Event triggered when \"setItems\" function is called */\r\n  onSetItemsCalled: SlickEvent;\r\n\r\n  /** Event triggered when the dataset row count changes */\r\n  onRowCountChanged: SlickEvent;\r\n\r\n  /** Event triggered when any of the row got changed */\r\n  onRowsChanged: SlickEvent;\r\n\r\n  /** Event triggered when the  dataset row count changes OR any of the row got changed */\r\n  onRowsOrCountChanged: SlickEvent;\r\n\r\n  /** Event triggered when before Paging Info got changed */\r\n  onBeforePagingInfoChanged: SlickEvent;\r\n\r\n  /** Event triggered while Paging Info is getting changed */\r\n  onPagingInfoChanged: SlickEvent;\r\n\r\n  /** Event triggered while Grouping is Expanding */\r\n  onGroupExpanded: SlickEvent;\r\n\r\n  /** Event triggered while Grouping is Collapsing */\r\n  onGroupCollapsed: SlickEvent;\r\n}\r\n"]}