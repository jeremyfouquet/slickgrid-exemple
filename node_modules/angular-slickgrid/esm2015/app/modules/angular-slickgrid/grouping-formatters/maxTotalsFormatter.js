import { formatNumber } from '../services/utilities';
import { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';
export const maxTotalsFormatter = (totals, columnDef, grid) => {
    const field = columnDef.field || '';
    const val = totals.max && totals.max[field];
    const params = columnDef && columnDef.params;
    const prefix = params && params.groupFormatterPrefix || '';
    const suffix = params && params.groupFormatterSuffix || '';
    const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);
    const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);
    const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');
    const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');
    const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);
    if (val !== null && val !== undefined && !isNaN(+val)) {
        const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);
        return `${prefix}${formattedNumber}${suffix}`;
    }
    return '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4VG90YWxzRm9ybWF0dGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1zbGlja2dyaWQvIiwic291cmNlcyI6WyJhcHAvbW9kdWxlcy9hbmd1bGFyLXNsaWNrZ3JpZC9ncm91cGluZy1mb3JtYXR0ZXJzL21heFRvdGFsc0Zvcm1hdHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFFLG9DQUFvQyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFeEYsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQXlCLENBQUMsTUFBVyxFQUFFLFNBQWlCLEVBQUUsSUFBVSxFQUFFLEVBQUU7SUFDckcsTUFBTSxLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7SUFDcEMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUcsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzVDLE1BQU0sTUFBTSxHQUFHLFNBQVMsSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDO0lBQzdDLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxNQUFNLENBQUMsb0JBQW9CLElBQUksRUFBRSxDQUFDO0lBQzNELE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxNQUFNLENBQUMsb0JBQW9CLElBQUksRUFBRSxDQUFDO0lBQzNELE1BQU0sVUFBVSxHQUFHLG9DQUFvQyxDQUFDLFlBQVksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkYsTUFBTSxVQUFVLEdBQUcsb0NBQW9DLENBQUMsWUFBWSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN2RixNQUFNLGdCQUFnQixHQUFHLG9DQUFvQyxDQUFDLGtCQUFrQixFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEcsTUFBTSxpQkFBaUIsR0FBRyxvQ0FBb0MsQ0FBQyxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pHLE1BQU0sb0NBQW9DLEdBQUcsb0NBQW9DLENBQUMsc0NBQXNDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUVsSixJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3JELE1BQU0sZUFBZSxHQUFHLFlBQVksQ0FBQyxHQUFHLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxvQ0FBb0MsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDckosT0FBTyxHQUFHLE1BQU0sR0FBRyxlQUFlLEdBQUcsTUFBTSxFQUFFLENBQUM7S0FDL0M7SUFDRCxPQUFPLEVBQUUsQ0FBQztBQUNaLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiwgR3JvdXBUb3RhbHNGb3JtYXR0ZXIgfSBmcm9tICcuLy4uL21vZGVscy9pbmRleCc7XHJcbmltcG9ydCB7IGZvcm1hdE51bWJlciB9IGZyb20gJy4uL3NlcnZpY2VzL3V0aWxpdGllcyc7XHJcbmltcG9ydCB7IGdldFZhbHVlRnJvbVBhcmFtc09yRm9ybWF0dGVyT3B0aW9ucyB9IGZyb20gJy4uL2Zvcm1hdHRlcnMvZm9ybWF0dGVyVXRpbGl0aWVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBtYXhUb3RhbHNGb3JtYXR0ZXI6IEdyb3VwVG90YWxzRm9ybWF0dGVyID0gKHRvdGFsczogYW55LCBjb2x1bW5EZWY6IENvbHVtbiwgZ3JpZD86IGFueSkgPT4ge1xyXG4gIGNvbnN0IGZpZWxkID0gY29sdW1uRGVmLmZpZWxkIHx8ICcnO1xyXG4gIGNvbnN0IHZhbCA9IHRvdGFscy5tYXggJiYgdG90YWxzLm1heFtmaWVsZF07XHJcbiAgY29uc3QgcGFyYW1zID0gY29sdW1uRGVmICYmIGNvbHVtbkRlZi5wYXJhbXM7XHJcbiAgY29uc3QgcHJlZml4ID0gcGFyYW1zICYmIHBhcmFtcy5ncm91cEZvcm1hdHRlclByZWZpeCB8fCAnJztcclxuICBjb25zdCBzdWZmaXggPSBwYXJhbXMgJiYgcGFyYW1zLmdyb3VwRm9ybWF0dGVyU3VmZml4IHx8ICcnO1xyXG4gIGNvbnN0IG1pbkRlY2ltYWwgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ21pbkRlY2ltYWwnLCBjb2x1bW5EZWYsIGdyaWQpO1xyXG4gIGNvbnN0IG1heERlY2ltYWwgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ21heERlY2ltYWwnLCBjb2x1bW5EZWYsIGdyaWQpO1xyXG4gIGNvbnN0IGRlY2ltYWxTZXBhcmF0b3IgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ2RlY2ltYWxTZXBhcmF0b3InLCBjb2x1bW5EZWYsIGdyaWQsICcuJyk7XHJcbiAgY29uc3QgdGhvdXNhbmRTZXBhcmF0b3IgPSBnZXRWYWx1ZUZyb21QYXJhbXNPckZvcm1hdHRlck9wdGlvbnMoJ3Rob3VzYW5kU2VwYXJhdG9yJywgY29sdW1uRGVmLCBncmlkLCAnJyk7XHJcbiAgY29uc3QgZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCdkaXNwbGF5TmVnYXRpdmVOdW1iZXJXaXRoUGFyZW50aGVzZXMnLCBjb2x1bW5EZWYsIGdyaWQsIGZhbHNlKTtcclxuXHJcbiAgaWYgKHZhbCAhPT0gbnVsbCAmJiB2YWwgIT09IHVuZGVmaW5lZCAmJiAhaXNOYU4oK3ZhbCkpIHtcclxuICAgIGNvbnN0IGZvcm1hdHRlZE51bWJlciA9IGZvcm1hdE51bWJlcih2YWwsIG1pbkRlY2ltYWwsIG1heERlY2ltYWwsIGRpc3BsYXlOZWdhdGl2ZU51bWJlcldpdGhQYXJlbnRoZXNlcywgJycsICcnLCBkZWNpbWFsU2VwYXJhdG9yLCB0aG91c2FuZFNlcGFyYXRvcik7XHJcbiAgICByZXR1cm4gYCR7cHJlZml4fSR7Zm9ybWF0dGVkTnVtYmVyfSR7c3VmZml4fWA7XHJcbiAgfVxyXG4gIHJldHVybiAnJztcclxufTtcclxuIl19