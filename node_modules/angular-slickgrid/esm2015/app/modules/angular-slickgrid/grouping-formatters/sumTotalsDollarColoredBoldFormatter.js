import { formatNumber } from './../services/utilities';
import { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';
export const sumTotalsDollarColoredBoldFormatter = (totals, columnDef, grid) => {
    const field = columnDef.field || '';
    const val = totals.sum && totals.sum[field];
    const params = columnDef && columnDef.params;
    const prefix = params && params.groupFormatterPrefix || '';
    const suffix = params && params.groupFormatterSuffix || '';
    const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);
    const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);
    const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');
    const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');
    const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);
    if (val !== null && val !== undefined && !isNaN(+val)) {
        const colorStyle = (val >= 0) ? 'green' : 'red';
        const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);
        return `<span style="color:${colorStyle}; font-weight: bold;">${prefix}${formattedNumber}${suffix}</span>`;
    }
    return '';
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtVG90YWxzRG9sbGFyQ29sb3JlZEJvbGRGb3JtYXR0ZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLXNsaWNrZ3JpZC8iLCJzb3VyY2VzIjpbImFwcC9tb2R1bGVzL2FuZ3VsYXItc2xpY2tncmlkL2dyb3VwaW5nLWZvcm1hdHRlcnMvc3VtVG90YWxzRG9sbGFyQ29sb3JlZEJvbGRGb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRXhGLE1BQU0sQ0FBQyxNQUFNLG1DQUFtQyxHQUF5QixDQUFDLE1BQVcsRUFBRSxTQUFpQixFQUFFLElBQVUsRUFBRSxFQUFFO0lBQ3RILE1BQU0sS0FBSyxHQUFHLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO0lBQ3BDLE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM1QyxNQUFNLE1BQU0sR0FBRyxTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sQ0FBQztJQUM3QyxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLG9CQUFvQixJQUFJLEVBQUUsQ0FBQztJQUMzRCxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUksTUFBTSxDQUFDLG9CQUFvQixJQUFJLEVBQUUsQ0FBQztJQUMzRCxNQUFNLFVBQVUsR0FBRyxvQ0FBb0MsQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxRixNQUFNLFVBQVUsR0FBRyxvQ0FBb0MsQ0FBQyxZQUFZLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxRixNQUFNLGdCQUFnQixHQUFHLG9DQUFvQyxDQUFDLGtCQUFrQixFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEcsTUFBTSxpQkFBaUIsR0FBRyxvQ0FBb0MsQ0FBQyxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pHLE1BQU0sb0NBQW9DLEdBQUcsb0NBQW9DLENBQUMsc0NBQXNDLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUVsSixJQUFJLEdBQUcsS0FBSyxJQUFJLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1FBQ3JELE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNoRCxNQUFNLGVBQWUsR0FBRyxZQUFZLENBQUMsR0FBRyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsb0NBQW9DLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxnQkFBZ0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3RKLE9BQU8sc0JBQXNCLFVBQVUseUJBQXlCLE1BQU0sR0FBRyxlQUFlLEdBQUcsTUFBTSxTQUFTLENBQUM7S0FDNUc7SUFDRCxPQUFPLEVBQUUsQ0FBQztBQUNaLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiwgR3JvdXBUb3RhbHNGb3JtYXR0ZXIgfSBmcm9tICcuLy4uL21vZGVscy9pbmRleCc7XHJcbmltcG9ydCB7IGZvcm1hdE51bWJlciB9IGZyb20gJy4vLi4vc2VydmljZXMvdXRpbGl0aWVzJztcclxuaW1wb3J0IHsgZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zIH0gZnJvbSAnLi4vZm9ybWF0dGVycy9mb3JtYXR0ZXJVdGlsaXRpZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IHN1bVRvdGFsc0RvbGxhckNvbG9yZWRCb2xkRm9ybWF0dGVyOiBHcm91cFRvdGFsc0Zvcm1hdHRlciA9ICh0b3RhbHM6IGFueSwgY29sdW1uRGVmOiBDb2x1bW4sIGdyaWQ/OiBhbnkpID0+IHtcclxuICBjb25zdCBmaWVsZCA9IGNvbHVtbkRlZi5maWVsZCB8fCAnJztcclxuICBjb25zdCB2YWwgPSB0b3RhbHMuc3VtICYmIHRvdGFscy5zdW1bZmllbGRdO1xyXG4gIGNvbnN0IHBhcmFtcyA9IGNvbHVtbkRlZiAmJiBjb2x1bW5EZWYucGFyYW1zO1xyXG4gIGNvbnN0IHByZWZpeCA9IHBhcmFtcyAmJiBwYXJhbXMuZ3JvdXBGb3JtYXR0ZXJQcmVmaXggfHwgJyc7XHJcbiAgY29uc3Qgc3VmZml4ID0gcGFyYW1zICYmIHBhcmFtcy5ncm91cEZvcm1hdHRlclN1ZmZpeCB8fCAnJztcclxuICBjb25zdCBtaW5EZWNpbWFsID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCdtaW5EZWNpbWFsJywgY29sdW1uRGVmLCBncmlkLCAyKTtcclxuICBjb25zdCBtYXhEZWNpbWFsID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCdtYXhEZWNpbWFsJywgY29sdW1uRGVmLCBncmlkLCA0KTtcclxuICBjb25zdCBkZWNpbWFsU2VwYXJhdG9yID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCdkZWNpbWFsU2VwYXJhdG9yJywgY29sdW1uRGVmLCBncmlkLCAnLicpO1xyXG4gIGNvbnN0IHRob3VzYW5kU2VwYXJhdG9yID0gZ2V0VmFsdWVGcm9tUGFyYW1zT3JGb3JtYXR0ZXJPcHRpb25zKCd0aG91c2FuZFNlcGFyYXRvcicsIGNvbHVtbkRlZiwgZ3JpZCwgJycpO1xyXG4gIGNvbnN0IGRpc3BsYXlOZWdhdGl2ZU51bWJlcldpdGhQYXJlbnRoZXNlcyA9IGdldFZhbHVlRnJvbVBhcmFtc09yRm9ybWF0dGVyT3B0aW9ucygnZGlzcGxheU5lZ2F0aXZlTnVtYmVyV2l0aFBhcmVudGhlc2VzJywgY29sdW1uRGVmLCBncmlkLCBmYWxzZSk7XHJcblxyXG4gIGlmICh2YWwgIT09IG51bGwgJiYgdmFsICE9PSB1bmRlZmluZWQgJiYgIWlzTmFOKCt2YWwpKSB7XHJcbiAgICBjb25zdCBjb2xvclN0eWxlID0gKHZhbCA+PSAwKSA/ICdncmVlbicgOiAncmVkJztcclxuICAgIGNvbnN0IGZvcm1hdHRlZE51bWJlciA9IGZvcm1hdE51bWJlcih2YWwsIG1pbkRlY2ltYWwsIG1heERlY2ltYWwsIGRpc3BsYXlOZWdhdGl2ZU51bWJlcldpdGhQYXJlbnRoZXNlcywgJyQnLCAnJywgZGVjaW1hbFNlcGFyYXRvciwgdGhvdXNhbmRTZXBhcmF0b3IpO1xyXG4gICAgcmV0dXJuIGA8c3BhbiBzdHlsZT1cImNvbG9yOiR7Y29sb3JTdHlsZX07IGZvbnQtd2VpZ2h0OiBib2xkO1wiPiR7cHJlZml4fSR7Zm9ybWF0dGVkTnVtYmVyfSR7c3VmZml4fTwvc3Bhbj5gO1xyXG4gIH1cclxuICByZXR1cm4gJyc7XHJcbn07XHJcbiJdfQ==