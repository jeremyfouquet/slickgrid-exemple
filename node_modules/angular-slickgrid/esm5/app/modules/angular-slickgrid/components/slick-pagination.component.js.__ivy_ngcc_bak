import * as tslib_1 from "tslib";
import { Component, Input, Optional } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { Constants } from '../constants';
import { PaginationService } from '../services/pagination.service';
import { getTranslationPrefix, unsubscribeAllObservables } from '../services/utilities';
var SlickPaginationComponent = /** @class */ (function () {
    /** Constructor */
    function SlickPaginationComponent(paginationService, translate) {
        this.paginationService = paginationService;
        this.translate = translate;
        this.subscriptions = [];
        this._enableTranslate = false;
        // text translations (handled by ngx-translate or by custom locale)
        this.textItemsPerPage = 'items per page';
        this.textItems = 'items';
        this.textOf = 'of';
        this.textPage = 'Page';
    }
    Object.defineProperty(SlickPaginationComponent.prototype, "availablePageSizes", {
        get: function () {
            return this.paginationService.availablePageSizes;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "dataFrom", {
        get: function () {
            return this.paginationService.dataFrom;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "dataTo", {
        get: function () {
            return this.paginationService.dataTo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "isLeftPaginationDisabled", {
        /** is the left side pagination disabled? */
        get: function () {
            return this.pageNumber === 1 || this.totalItems === 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "isRightPaginationDisabled", {
        /** is the right side pagination disabled? */
        get: function () {
            return this.pageNumber === this.pageCount || this.totalItems === 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "itemsPerPage", {
        get: function () {
            return this.paginationService.itemsPerPage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "pageCount", {
        get: function () {
            return this.paginationService.pageCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "pageNumber", {
        get: function () {
            return this.paginationService.pageNumber;
        },
        set: function (page) {
            // the setter has to be declared but we won't use it, instead we will use the "changeToCurrentPage()" to only update the value after ENTER keydown event
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SlickPaginationComponent.prototype, "totalItems", {
        get: function () {
            return this.paginationService.totalItems;
        },
        enumerable: true,
        configurable: true
    });
    SlickPaginationComponent.prototype.ngOnDestroy = function () {
        this.dispose();
    };
    SlickPaginationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._gridOptions = this.gridOptions || {};
        this._enableTranslate = this._gridOptions && this._gridOptions.enableTranslate || false;
        this._locales = this._gridOptions && this._gridOptions.locales || Constants.locales;
        if (this._enableTranslate && !this.translate) {
            throw new Error('[Angular-Slickgrid] requires "ngx-translate" to be installed and configured when the grid option "enableTranslate" is enabled.');
        }
        this.translateAllUiTexts(this._locales);
        // translate all the text using ngx-translate or custom locales
        if (this._enableTranslate && this.translate && this.translate.onLangChange) {
            this.subscriptions.push(this.translate.onLangChange.subscribe(function () { return _this.translateAllUiTexts(_this._locales); }));
        }
    };
    SlickPaginationComponent.prototype.changeToFirstPage = function (event) {
        if (!this.isLeftPaginationDisabled) {
            this.paginationService.goToFirstPage(event);
        }
    };
    SlickPaginationComponent.prototype.changeToLastPage = function (event) {
        if (!this.isRightPaginationDisabled) {
            this.paginationService.goToLastPage(event);
        }
    };
    SlickPaginationComponent.prototype.changeToNextPage = function (event) {
        if (!this.isRightPaginationDisabled) {
            this.paginationService.goToNextPage(event);
        }
    };
    SlickPaginationComponent.prototype.changeToPreviousPage = function (event) {
        if (!this.isLeftPaginationDisabled) {
            this.paginationService.goToPreviousPage(event);
        }
    };
    SlickPaginationComponent.prototype.changeToCurrentPage = function (event) {
        var pageNumber = 1;
        if (event && event.currentTarget && event.currentTarget.value) {
            pageNumber = +(event.currentTarget.value);
        }
        this.paginationService.goToPageNumber(pageNumber, event);
    };
    SlickPaginationComponent.prototype.changeItemPerPage = function (event) {
        var itemsPerPage = 1;
        if (event && event.currentTarget && event.currentTarget.value) {
            itemsPerPage = +(event.currentTarget.value);
        }
        this.paginationService.changeItemPerPage(itemsPerPage, event);
    };
    SlickPaginationComponent.prototype.dispose = function () {
        this.paginationService.dispose();
        // also unsubscribe all Angular Subscriptions
        this.subscriptions = unsubscribeAllObservables(this.subscriptions);
    };
    // --
    // private functions
    // --------------------
    /** Translate all the texts shown in the UI, use ngx-translate service when available or custom locales when service is null */
    SlickPaginationComponent.prototype.translateAllUiTexts = function (locales) {
        if (this._enableTranslate && this.translate && this.translate.instant && this.translate.currentLang) {
            var translationPrefix = getTranslationPrefix(this._gridOptions);
            this.textItemsPerPage = this.translate.instant(translationPrefix + "ITEMS_PER_PAGE");
            this.textItems = this.translate.instant(translationPrefix + "ITEMS");
            this.textOf = this.translate.instant(translationPrefix + "OF");
            this.textPage = this.translate.instant(translationPrefix + "PAGE");
        }
        else if (locales) {
            this.textItemsPerPage = locales.TEXT_ITEMS_PER_PAGE || 'TEXT_ITEMS_PER_PAGE';
            this.textItems = locales.TEXT_ITEMS || 'TEXT_ITEMS';
            this.textOf = locales.TEXT_OF || 'TEXT_OF';
            this.textPage = locales.TEXT_PAGE || 'TEXT_PAGE';
        }
    };
    SlickPaginationComponent.ctorParameters = function () { return [
        { type: PaginationService },
        { type: TranslateService, decorators: [{ type: Optional }] }
    ]; };
    tslib_1.__decorate([
        Input()
    ], SlickPaginationComponent.prototype, "gridOptions", void 0);
    SlickPaginationComponent = tslib_1.__decorate([
        Component({
            selector: 'slick-pagination',
            template: "<div class=\"slick-pagination\">\r\n  <div class=\"slick-pagination-nav\">\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" [ngClass]=\"isLeftPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-first fa fa-angle-double-left\" aria-label=\"First\"\r\n             (click)=\"changeToFirstPage($event)\">\r\n          </a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"isLeftPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-prev fa fa-angle-left\" aria-label=\"Previous\"\r\n             (click)=\"changeToPreviousPage($event)\">\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n\r\n    <div class=\"slick-page-number\">\r\n      <span>{{textPage}}</span>\r\n      <input type=\"text\" class=\"form-control\" data-test=\"page-number-input\" [value]=\"pageNumber\" size=\"1\"\r\n             [readOnly]=\"totalItems === 0\" (change)=\"changeToCurrentPage($event)\">\r\n      <span>{{textOf}}</span><span data-test=\"page-count\"> {{pageCount}}</span>\r\n    </div>\r\n\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" [ngClass]=\"isRightPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-next text-center fa fa-lg fa-angle-right\" aria-label=\"Next\"\r\n             (click)=\"changeToNextPage($event)\">\r\n          </a>\r\n        </li>\r\n        <li class=\"page-item\" [ngClass]=\"isRightPaginationDisabled ? 'disabled' : ''\">\r\n          <a class=\"page-link icon-seek-end fa fa-lg fa-angle-double-right\" aria-label=\"Last\"\r\n             (click)=\"changeToLastPage($event)\">\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n  <span class=\"slick-pagination-settings\">\r\n    <select id=\"items-per-page-label\" (change)=\"changeItemPerPage($event)\">\r\n      <option value=\"{{pageSize}}\" [selected]=\"pageSize === itemsPerPage\" *ngFor=\"let pageSize of availablePageSizes\">{{pageSize}}</option>\r\n    </select>\r\n    <span>{{textItemsPerPage}}</span>,\r\n    <span class=\"slick-pagination-count\">\r\n      <span *ngIf=\"totalItems\">\r\n        <span class=\"page-info-from-to\">\r\n          <span data-test=\"item-from\">{{dataFrom}}</span>-<span data-test=\"item-to\">{{dataTo}}</span>\r\n          {{textOf}}\r\n        </span>\r\n      </span>\r\n      <span class=\"page-info-total-items\">\r\n        <span data-test=\"total-items\">{{totalItems}}</span> {{textItems}}\r\n      </span>\r\n    </span>\r\n  </span>\r\n</div>\r\n"
        }),
        tslib_1.__param(1, Optional())
    ], SlickPaginationComponent);
    return SlickPaginationComponent;
}());
export { SlickPaginationComponent };
//# sourceMappingURL=data:application/json;base64,