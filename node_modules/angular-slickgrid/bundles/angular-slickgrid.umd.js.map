{"version":3,"file":"angular-slickgrid.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/caseType.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/delimiterType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/emitterType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/extensionName.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/fieldType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/fileType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/filterMultiplePassType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/gridStateType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/keyCode.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/operatorType.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/sortDirection.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/models/sortDirectionNumber.enum.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/angularUtil.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/backend-utilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/bindingEvent.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/bsDropdown.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/numericSorter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/objectStringSorter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/stringSorter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/utilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/dateUtilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/sorters/sorterUtilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/collection.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/constants.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/export-utilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/excelExport.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/export.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/shared.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/extensionUtility.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/autoTooltipExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/cellExternalCopyManagerExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/cellMenuExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/checkboxSelectorExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/columnPickerExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/treeData.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/contextMenuExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/draggableGroupingExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/booleanFilterCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/filterUtilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/collectionSearchFilterCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/numberFilterCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/objectFilterCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/stringFilterCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/executeMappedCondition.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filter-conditions/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/autoCompleteFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/filterUtilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/compoundDateFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/compoundInputFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/compoundInputNumberFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/compoundInputPasswordFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/compoundSliderFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/inputFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/inputMaskFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/inputNumberFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/inputPasswordFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/selectFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/multipleSelectFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/nativeSelectFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/dateRangeFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/singleSelectFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/sliderFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/sliderRangeFilter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/global-grid-options.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/slickgrid-config.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/filters/filterFactory.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/filter.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/sort.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/gridMenuExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/groupItemMetaProviderExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/headerButtonExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/headerMenuExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/rowDetailViewExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/rowMoveManagerExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/extensions/rowSelectionExtension.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/extension.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/graphqlQueryBuilder.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/graphql.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/odataQueryBuilder.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/grid-odata.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/gridState.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/grid.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/gridEvent.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/resizer.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/groupingAndColspan.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/services/pagination.service.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/aggregators/avgAggregator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/aggregators/minAggregator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/aggregators/maxAggregator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/aggregators/sumAggregator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/aggregators/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editorValidators/textValidator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/autoCompleteEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/checkboxEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/dateEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editorValidators/floatValidator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editorValidators/integerValidator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editorValidators/sliderValidator.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/dualInputEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/floatEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/integerEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/longTextEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/selectEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/multipleSelectEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/singleSelectEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/sliderEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/textEditor.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/editors/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/formatterUtilities.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/alignRightFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/arrayObjectToCsvFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/arrayToCsvFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/boldFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/centerFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/checkboxFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/checkmarkFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/collectionFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/collectionEditorFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/complexObjectFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/decimalFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/deleteIconFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/dollarColoredBoldFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/dollarColoredFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/dollarFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/editIconFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/fakeHyperlinkFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/hyperlinkFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/iconFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/infoIconFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/italicFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/lowercaseFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/maskFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/multipleFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/percentFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/percentCompleteBarFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/percentCompleteFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/percentSymbolFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/progressBarFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/translateFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/translateBooleanFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/treeFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/uppercaseFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/yesNoFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/bsDropdownFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/formatters/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/avgTotalsPercentageFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/avgTotalsDollarFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/avgTotalsFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/minTotalsFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/maxTotalsFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsColoredFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsDollarColoredBoldFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsDollarColoredFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsDollarBoldFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsDollarFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/sumTotalsBoldFormatter.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/grouping-formatters/index.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/components/slick-pagination.component.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/components/slick-empty-warning.component.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/components/angular-slickgrid.component.ts","ng:/angular-slickgrid/app/modules/angular-slickgrid/modules/angular-slickgrid.module.ts"],"names":["CaseType","DelimiterType","EmitterType","ExtensionName","FieldType","FileType","FilterMultiplePassType","GridStateType","KeyCode","OperatorType","SortDirection","SortDirectionNumber","ComponentFactoryResolver","ApplicationRef","Injector","Injectable","isObservable","takeUntil","iif","EMPTY","tslib_1.__values","Observable","first","moment","TranslateService","Optional","tslib_1.__param","Subject","ExcelBuilder.Workbook","ExcelBuilder.Worksheet","ExcelBuilder.Builder","TextEncoder","tslib_1.__assign","Flatpickr","tslib_1.__extends","DOMPurify","DEFAULT_MIN_VALUE","DEFAULT_MAX_VALUE","DEFAULT_STEP","QueryBuilder","DEFAULT_ITEMS_PER_PAGE","DEFAULT_PAGE_SIZE","isequal","_flatpickr","tslib_1.__decorate","Input","Component","DOMPurify.sanitize","EventEmitter","ChangeDetectorRef","ElementRef","Inject","Output","NgModule","CommonModule","TranslateModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum CaseType {\r\n  /** For example: camelCase */\r\n  camelCase,\r\n\r\n  /** For example: PascalCase */\r\n  pascalCase,\r\n\r\n  /** For example: snake_case */\r\n  snakeCase,\r\n\r\n  /** For example: kebab-case */\r\n  kebabCase,\r\n}\r\n","export enum DelimiterType {\r\n  colon = ':',\r\n  comma = ',',\r\n  equalSign = '=',\r\n  pipe = '|',\r\n  semicolon = ';',\r\n  space = ' ',\r\n  tab = '\\t',\r\n\r\n  doubleColon = '::',\r\n  doublePipe = '||',\r\n  doubleSemicolon = ';;',\r\n}\r\n\r\n","export enum EmitterType {\r\n  local = 'local',\r\n  remote = 'remote'\r\n}\r\n\r\n","/** List of available SlickGrid Extensions (Controls & Plugins) */\r\nexport enum ExtensionName {\r\n  autoTooltip = 'autoTooltip',\r\n  cellExternalCopyManager = 'cellExternalCopyManager',\r\n  cellMenu = 'cellMenu',\r\n  checkboxSelector = 'checkboxSelector',\r\n  columnPicker = 'columnPicker',\r\n  contextMenu = 'contextMenu',\r\n  draggableGrouping = 'draggableGrouping',\r\n  groupItemMetaProvider = 'groupItemMetaProvider',\r\n  gridMenu = 'gridMenu',\r\n  headerButton = 'headerButton',\r\n  headerMenu = 'headerMenu',\r\n  noname = 'noname',\r\n  rowDetailView = 'rowDetailView',\r\n  rowMoveManager = 'rowMoveManager',\r\n  rowSelection = 'rowSelection',\r\n}\r\n","export enum FieldType {\r\n  /** unknown type */\r\n  unknown = 'unknown',\r\n\r\n  /** string type */\r\n  string = 'string',\r\n\r\n  /** boolean type (true/false) */\r\n  boolean = 'boolean',\r\n\r\n  /** integer number type (1,2,99) */\r\n  integer = 'integer',\r\n\r\n  /** float number (with decimal) type */\r\n  float = 'float',\r\n\r\n  /** number includes Integer and Float */\r\n  number = 'number',\r\n\r\n  /** new Date(), javascript Date object */\r\n  date = 'date',\r\n\r\n  /** Format: 'YYYY-MM-DD' => 2001-02-28 */\r\n  dateIso = 'dateIso',\r\n\r\n  /** Format: 'YYYY-MM-DDTHH:mm:ss.SSSZ' => 2001-02-28T14:00:00.123Z */\r\n  dateUtc = 'dateUtc',\r\n\r\n  /** new Date(), javacript Date Object with Time */\r\n  dateTime = 'dateTime',\r\n\r\n  /** Format: 'YYYY-MM-DD HH:mm:ss' => 2001-02-28 14:01:01 */\r\n  dateTimeIso = 'dateTimeIso',\r\n\r\n  /** Format: 'YYYY-MM-DD h:mm:ss a' => 2001-02-28 11:01:01 pm */\r\n  dateTimeIsoAmPm = 'dateTimeIsoAmPm',\r\n\r\n  /** Format: 'YYYY-MM-DD h:mm:ss A' => 2001-02-28 11:01:01 PM */\r\n  dateTimeIsoAM_PM = 'dateTimeIsoAM_PM',\r\n\r\n  /** Format: 'YYYY-MM-DD HH:mm' => 2001-02-28 14:01 */\r\n  dateTimeShortIso = 'dateTimeShortIso',\r\n\r\n  /** Format (Euro): 'DD/MM/YYYY' => 28/02/2001 */\r\n  dateEuro = 'dateEuro',\r\n\r\n  /** Format (Euro): 'D/M/YY' => 28/2/12 */\r\n  dateEuroShort = 'dateEuroShort',\r\n\r\n  /** Format (Euro): 'DD/MM/YYYY HH:mm' => 28/02/2001 13:01 */\r\n  dateTimeShortEuro = 'dateTimeShortEuro',\r\n\r\n  /** Format (Euro): 'DD/MM/YYYY HH:mm:ss' => 02/28/2001 13:01:01 */\r\n  dateTimeEuro = 'dateTimeEuro',\r\n\r\n  /** Format (Euro): 'DD/MM/YYYY hh:mm:ss a' => 28/02/2001 11:01:01 pm */\r\n  dateTimeEuroAmPm = 'dateTimeEuroAmPm',\r\n\r\n  /** Format (Euro): 'DD/MM/YYYY hh:mm:ss A' => 28/02/2001 11:01:01 PM */\r\n  dateTimeEuroAM_PM = 'dateTimeEuroAM_PM',\r\n\r\n  /** Format (Euro): 'D/M/YY H:m:s' => 28/2/14 14:1:2 */\r\n  dateTimeEuroShort = 'dateTimeEuroShort',\r\n\r\n  /** Format (Euro): 'D/M/YY h:m:s a' => 28/2/14 1:2:10 pm */\r\n  dateTimeEuroShortAmPm = 'dateTimeEuroShortAmPm',\r\n\r\n  /** Format (Euro): 'D/M/YY h:m:s A' => 28/2/14 14:1:1 PM */\r\n  dateTimeEuroShortAM_PM = 'dateTimeEuroShortAM_PM',\r\n\r\n  /** Format: 'MM/DD/YYYY' => 02/28/2001 */\r\n  dateUs = 'dateUs',\r\n\r\n  /** Format: 'M/D/YY' => 2/28/12 */\r\n  dateUsShort = 'dateUsShort',\r\n\r\n  /** Format: 'MM/DD/YYYY HH:mm' => 02/28/2001 13:01 */\r\n  dateTimeShortUs = 'dateTimeShortUs',\r\n\r\n  /** Format: 'MM/DD/YYYY HH:mm:ss' => 02/28/2001 13:01:01 */\r\n  dateTimeUs = 'dateTimeUs',\r\n\r\n  /** Format: 'MM/DD/YYYY hh:mm:ss a' => 02/28/2001 11:01:01 pm */\r\n  dateTimeUsAmPm = 'dateTimeUsAmPm',\r\n\r\n  /** Format: 'MM/DD/YYYY hh:mm:ss A' => 02/28/2001 11:01:01 PM */\r\n  dateTimeUsAM_PM = 'dateTimeUsAM_PM',\r\n\r\n  /** Format: 'M/D/YY H:m:s' => 2/28/14 14:1:2 */\r\n  dateTimeUsShort = 'dateTimeUsShort',\r\n\r\n  /** Format: 'M/D/YY h:m:s a' => 2/28/14 1:2:10 pm */\r\n  dateTimeUsShortAmPm = 'dateTimeUsShortAmPm',\r\n\r\n  /** Format: 'M/D/YY h:m:s A' => 2/28/14 14:1:1 PM */\r\n  dateTimeUsShortAM_PM = 'dateTimeUsShortAM_PM',\r\n\r\n  /** complex object with various properties */\r\n  object = 'object',\r\n\r\n  /** password text string */\r\n  password = 'password',\r\n\r\n  /** alias to string */\r\n  text = 'text',\r\n\r\n  /** readonly text string */\r\n  readonly = 'readonly',\r\n}\r\n","export enum FileType {\r\n  csv = 'csv',\r\n  txt = 'txt',\r\n  xls = 'xls',\r\n  xlsx = 'xlsx'\r\n}\r\n","export enum FilterMultiplePassType {\r\n  merge = 'merge',\r\n  chain = 'chain'\r\n}\r\n","export enum GridStateType {\r\n  columns = 'columns',\r\n  filter = 'filter',\r\n  pagination = 'pagination',\r\n  sorter = 'sorter',\r\n  rowSelection = 'rowSelection',\r\n}\r\n","export enum KeyCode {\r\n  BACKSPACE = 8,\r\n  DELETE = 46,\r\n  DOWN = 40,\r\n  END = 35,\r\n  ENTER = 13,\r\n  ESCAPE = 27,\r\n  HOME = 36,\r\n  INSERT = 45,\r\n  LEFT = 37,\r\n  PAGE_DOWN = 34,\r\n  PAGE_UP = 33,\r\n  RIGHT = 39,\r\n  TAB = 9,\r\n  UP = 38,\r\n  SPACE = 32,\r\n}\r\n","export enum OperatorType {\r\n  /** value is empty */\r\n  empty = '',\r\n\r\n  /** value contains x */\r\n  contains = 'Contains',\r\n\r\n  /** value not contains x (inversed of contains) */\r\n  notContains = 'Not_Contains',\r\n\r\n  /** value less than x */\r\n  lessThan = 'LT',\r\n\r\n  /** value less than or equal to x */\r\n  lessThanOrEqual = 'LE',\r\n\r\n  /** value greater than x */\r\n  greaterThan = 'GT',\r\n\r\n  /** value great than or equal to x */\r\n  greaterThanOrEqual = 'GE',\r\n\r\n  /** value not equal to x */\r\n  notEqual = 'NE',\r\n\r\n  /** value equal to x */\r\n  equal = 'EQ',\r\n\r\n  /** String ends with value */\r\n  endsWith = 'EndsWith',\r\n\r\n  /**\r\n   * Search in an inclusive range of values that is greater or equal to search value 1 and is smaller or equal to value 2\r\n   * For example the search term of \"5..10\" will return any values that are greater or equal to 5 and smaller or equal to 10\r\n   */\r\n  rangeInclusive = 'RangeInclusive',\r\n\r\n  /**\r\n   * Search in an inclusive range of values that is greater then search value 1 and is smaller then value 2\r\n   * For example the search term of \"5..10\" will return any values that is greater then 5 and smaller then 10\r\n   */\r\n  rangeExclusive = 'RangeExclusive',\r\n\r\n  /** String starts with value */\r\n  startsWith = 'StartsWith',\r\n\r\n  /** Find an equal match inside a collection */\r\n  in = 'IN',\r\n\r\n  /** Inverse (Not In) of an equal match inside a collection */\r\n  notIn = 'NOT_IN',\r\n\r\n  /**\r\n   * Find a substring contained inside a collection\r\n   * For example, this condition would return True with \"IN_CONTAINS\":: value='Task2,Task3', collection=['Task2','Task3']\r\n   * This would have returned False with \"IN\" because 'Task2' does not equal 'Task2,Task3'. However 'Task2' is contained in 'Task2,Task3'\r\n   */\r\n  inContains = 'IN_CONTAINS',\r\n\r\n  /** Inversed (Not In) of substring contained inside a collection */\r\n  notInContains = 'NOT_IN_CONTAINS',\r\n}\r\n","export enum SortDirection {\r\n  asc = 'asc',\r\n  ASC = 'ASC',\r\n  desc = 'desc',\r\n  DESC = 'DESC'\r\n}\r\n","export enum SortDirectionNumber {\r\n  asc = 1,\r\n  desc = -1,\r\n  neutral = 0,\r\n}\r\n","import { AngularComponentOutput } from '../models/angularComponentOutput.interface';\r\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injectable, Injector } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AngularUtilService {\r\n  constructor(\r\n    private compFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector,\r\n  ) { }\r\n\r\n  // ref https://hackernoon.com/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\r\n  createAngularComponent(component: any): AngularComponentOutput {\r\n    // Create a component reference from the component\r\n    const componentRef = this.compFactoryResolver\r\n      .resolveComponentFactory(component)\r\n      .create(this.injector);\r\n\r\n    // Attach component to the appRef so that it's inside the ng component tree\r\n    this.appRef.attachView(componentRef.hostView);\r\n\r\n    // Get DOM element from component\r\n    let domElem;\r\n    const viewRef = (componentRef.hostView as EmbeddedViewRef<any>);\r\n    if (viewRef && Array.isArray(viewRef.rootNodes) && viewRef.rootNodes[0]) {\r\n      domElem = viewRef.rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    return { componentRef, domElement: domElem };\r\n  }\r\n\r\n  // ref https://hackernoon.com/angular-pro-tip-how-to-dynamically-create-components-in-body-ba200cc289e6\r\n  createAngularComponentAppendToDom(component: any, targetElement?: HTMLElement | Element, clearTargetContent = false): AngularComponentOutput {\r\n    const componentOutput = this.createAngularComponent(component);\r\n\r\n    // Append DOM element to the HTML element specified\r\n    if (targetElement && targetElement.appendChild) {\r\n      if (clearTargetContent && targetElement.innerHTML) {\r\n        targetElement.innerHTML = '';\r\n      }\r\n      targetElement.appendChild(componentOutput.domElement);\r\n    } else {\r\n      document.body.appendChild(componentOutput.domElement); // when no target provided, we'll simply add it to the HTML Body\r\n    }\r\n\r\n    return componentOutput;\r\n  }\r\n}\r\n","import { EMPTY, iif, isObservable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { BackendServiceApi, EmitterType, GraphqlResult, GraphqlPaginatedResult, GridOption } from '../models';\r\n\r\nconst main: any = {};\r\n\r\n/** Execute the Backend Processes Callback, that could come from an Observable or a Promise callback */\r\nmain.executeBackendProcessesCallback = function exeBackendProcessesCallback(startTime: Date, processResult: GraphqlResult | GraphqlPaginatedResult | any, backendApi: BackendServiceApi, totalItems: number): GraphqlResult | GraphqlPaginatedResult | any {\r\n  const endTime = new Date();\r\n\r\n  // define what our internal Post Process callback, only available for GraphQL Service for now\r\n  // it will basically refresh the Dataset & Pagination removing the need for the user to always create his own PostProcess every time\r\n  if (processResult && backendApi && backendApi.internalPostProcess) {\r\n    backendApi.internalPostProcess(processResult);\r\n  }\r\n\r\n  // send the response process to the postProcess callback\r\n  if (backendApi.postProcess) {\r\n    if (processResult instanceof Object) {\r\n      processResult.metrics = {\r\n        startTime,\r\n        endTime,\r\n        executionTime: endTime.valueOf() - startTime.valueOf(),\r\n        itemCount: totalItems,\r\n        totalItemCount: totalItems\r\n      };\r\n      // @deprecated\r\n      processResult.statistics = processResult.metrics;\r\n    }\r\n    backendApi.postProcess(processResult);\r\n  }\r\n};\r\n\r\n/** On a backend service api error, we will run the \"onError\" if there is 1 provided or just throw back the error when nothing is provided */\r\nmain.onBackendError = function backendError(e: any, backendApi: BackendServiceApi) {\r\n  if (backendApi && backendApi.onError) {\r\n    backendApi.onError(e);\r\n  } else {\r\n    throw e;\r\n  }\r\n};\r\n\r\n/**\r\n * Execute the backend callback, which are mainly the \"process\" & \"postProcess\" methods.\r\n * Also note that \"preProcess\" was executed prior to this callback\r\n */\r\nmain.executeBackendCallback = function exeBackendCallback(backendServiceApi: BackendServiceApi, query: string, args: any, startTime: Date, totalItems: number, emitActionChangedCallback?: (type: EmitterType) => void, httpCancelRequests$?: Subject<void>) {\r\n  if (backendServiceApi) {\r\n    // emit an onFilterChanged event when it's not called by a clear filter\r\n    if (args && !args.clearFilterTriggered && !args.clearSortTriggered) {\r\n      emitActionChangedCallback(EmitterType.remote);\r\n    }\r\n\r\n    // the processes can be Observables (like HttpClient) or Promises\r\n    const process = backendServiceApi.process(query);\r\n    if (process instanceof Promise && process.then) {\r\n      process.then((processResult: GraphqlResult | GraphqlPaginatedResult | any) => main.executeBackendProcessesCallback(startTime, processResult, backendServiceApi, totalItems))\r\n        .catch((error: any) => main.onBackendError(error, backendServiceApi));\r\n    } else if (isObservable(process)) {\r\n      // this will abort any previous HTTP requests, that were previously hooked in the takeUntil, before sending a new request\r\n      if (isObservable(httpCancelRequests$)) {\r\n        httpCancelRequests$.next();\r\n      }\r\n\r\n      process\r\n        // the following takeUntil, will potentially be used later to cancel any pending http request (takeUntil another rx, that would be httpCancelRequests$, completes)\r\n        // but make sure the observable is actually defined with the iif condition check before piping it to the takeUntil\r\n        .pipe(takeUntil(iif(() => isObservable(httpCancelRequests$), httpCancelRequests$, EMPTY)))\r\n        .subscribe(\r\n          (processResult: GraphqlResult | GraphqlPaginatedResult | any) => main.executeBackendProcessesCallback(startTime, processResult, backendServiceApi, totalItems),\r\n          (error: any) => main.onBackendError(error, backendServiceApi)\r\n        );\r\n    }\r\n  }\r\n};\r\n\r\n/** Refresh the dataset through the Backend Service */\r\nmain.refreshBackendDataset = function refreshBackend(gridOptions: GridOption) {\r\n  let query = '';\r\n  const backendApi = gridOptions && gridOptions.backendServiceApi;\r\n\r\n  if (!backendApi || !backendApi.service || !backendApi.process) {\r\n    throw new Error(`BackendServiceApi requires at least a \"process\" function and a \"service\" defined`);\r\n  }\r\n\r\n  if (backendApi.service) {\r\n    query = backendApi.service.buildQuery();\r\n  }\r\n\r\n  if (query && query !== '') {\r\n    // keep start time & end timestamps & return it after process execution\r\n    const startTime = new Date();\r\n\r\n    if (backendApi.preProcess) {\r\n      backendApi.preProcess();\r\n    }\r\n\r\n    const totalItems = gridOptions && gridOptions.pagination && gridOptions.pagination.totalItems;\r\n    main.executeBackendCallback(backendApi, query, null, startTime, totalItems);\r\n  }\r\n};\r\n\r\n// export all methods & the main so that it works in all modules but also in Jest unit test\r\n// export every method as independent constant so that it still works whenever this is used in other modules\r\nexport const executeBackendProcessesCallback = main.executeBackendProcessesCallback;\r\nexport const onBackendError = main.onBackendError;\r\nexport const executeBackendCallback = main.executeBackendCallback;\r\nexport const refreshBackendDataset = main.refreshBackendDataset;\r\n\r\nexport default main;\r\n","import { ElementEventListener } from '../models/elementEventListener.interface';\r\n\r\nexport class BindingEventService {\r\n  private _boundedEvents: ElementEventListener[] = [];\r\n\r\n  /** Bind an event listener to any element */\r\n  bind(element: Element, eventName: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions) {\r\n    element.addEventListener(eventName, listener, options);\r\n    this._boundedEvents.push({ element, eventName, listener });\r\n  }\r\n\r\n  /** Unbind all will remove every every event handlers that were bounded earlier */\r\n  unbindAll() {\r\n    while (this._boundedEvents.length > 0) {\r\n      const boundedEvent = this._boundedEvents.pop() as ElementEventListener;\r\n      const { element, eventName, listener } = boundedEvent;\r\n      if (element && element.removeEventListener) {\r\n        element.removeEventListener(eventName, listener);\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularUtilService } from './angularUtil.service';\r\n\r\ninterface DropDownServiceParams {\r\n  /** the custom action formatter component that contains the dropdown */\r\n  component: any;\r\n\r\n  /** help to get the data context */\r\n  args: any;\r\n\r\n  /** parent container */\r\n  parent: any;\r\n\r\n  /** Offset bottom when using a Drop Up, if we need to reposition the dropdown component */\r\n  offsetDropupBottom?: number;\r\n\r\n  /** Offset left if we need to reposition the dropdown component */\r\n  offsetLeft?: number;\r\n\r\n  /** Offset top if we need to reposition the dropdown component */\r\n  offsetTop?: number;\r\n}\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n// Boostrap dropdown service\r\n@Injectable()\r\nexport class BsDropDownService {\r\n  private _domContainerElement: any;\r\n  private _domElement: any;\r\n\r\n  constructor(private angularUtilService: AngularUtilService) { }\r\n\r\n  get domElement() {\r\n    return this._domElement;\r\n  }\r\n\r\n  get domContainerElement() {\r\n    return this._domContainerElement;\r\n  }\r\n\r\n  get gridViewport() {\r\n    return $('.slick-viewport');\r\n  }\r\n\r\n  dispose() {\r\n    if (this._domElement && this._domElement.remove) {\r\n      this._domElement.remove();\r\n    }\r\n  }\r\n\r\n  dropContainerShow() {\r\n    if (this._domContainerElement && this._domContainerElement.show) {\r\n      this._domContainerElement.show();\r\n    }\r\n  }\r\n\r\n  render(dropdownParams: DropDownServiceParams) {\r\n    return new Promise((resolve) => {\r\n      const { component, args, parent, offsetTop, offsetLeft, offsetDropupBottom } = dropdownParams;\r\n\r\n      const cell = args.cell;\r\n      const row = args.row;\r\n\r\n      this._domContainerElement = $(`#myDrop-r${row}-c${cell}`);\r\n\r\n      if (this._domContainerElement) {\r\n        // hide the dropdown we created as a formatter Component, we'll redisplay it later\r\n        const cellPos = this._domContainerElement.offset();\r\n\r\n        const componentOutput = this.angularUtilService.createAngularComponent(component);\r\n        const componentInstance = componentOutput && componentOutput.componentRef && componentOutput.componentRef.instance;\r\n\r\n        if (componentInstance) {\r\n          const myDropId = componentInstance.dropdownId || 'myDrop';\r\n          const dropDownToggleId = componentInstance.dropDownToggleId || 'dropdownMenu1';\r\n          this._domElement = $(`#${myDropId}`);\r\n\r\n          if (this._domElement) {\r\n            // make sure to remove any previous Action dropdown elements, to avoid having multiple element of the same on top of each other\r\n            this.dispose();\r\n\r\n            // assign the row data to the dropdown component instance\r\n            Object.assign(componentInstance, { parent, row: args.row, dataContext: args.grid.getDataItem(args.row) });\r\n\r\n            // use a delay to make sure Angular ran at least a full cycle and make sure it finished rendering the Component before using it\r\n            setTimeout(() => {\r\n              // create a new dropdown element\r\n              this._domElement = $(componentOutput.domElement);\r\n              const topPos = (cellPos && cellPos.top || 0) + 30 + (offsetTop || 0);\r\n              const leftPos = (cellPos && cellPos.left || 0) + (offsetLeft || 0);\r\n              this._domElement.appendTo('body');\r\n              this._domElement.css('position', 'absolute');\r\n              this._domElement.css('top', topPos);\r\n              this._domElement.css('left', leftPos);\r\n              $(`#${myDropId}`).addClass('open');\r\n              $(`#${dropDownToggleId}`).hide();\r\n\r\n              // check if it should drop Up or Down\r\n              const offset = 35;\r\n              const iElement = $('.dropdown-menu');\r\n              const iElementWrapper = iElement.parent();\r\n              const iElementWrapperOffset = iElementWrapper.offset() || {};\r\n              const iElementWrapperOffsetTop = iElementWrapperOffset.top || iElementWrapper && iElementWrapper.length > 0 && iElementWrapper[0].offsetTop;\r\n              const iElementHeight = iElement.height();\r\n              const windowHeight = window.innerHeight;\r\n              const shouldDropUp = (windowHeight - iElementHeight - offset) < iElementWrapperOffsetTop;\r\n              let menuMarginTop = '0px';\r\n              if (shouldDropUp) {\r\n                const offsetBottom = offsetDropupBottom || 0;\r\n                menuMarginTop = '-'.concat(`${iElementHeight + offset + offsetBottom + 5}`, 'px');\r\n              }\r\n              this._domElement.css({ 'margin-top': menuMarginTop });\r\n\r\n              // set dropdown margin left according to the document width\r\n              const parentOffset = iElementWrapperOffset.left;\r\n              const leftMargin = parentOffset - $(document).width();\r\n              this._domElement.css({ 'margin-left': (this._domElement.width() + leftMargin + 60) + 'px' });\r\n\r\n              try {\r\n                this._domElement.dropdown('show'); // required for Bootstrap 4 only\r\n              } catch (e) {\r\n                // Bootstrap 3 wil throw an error since that method doesn't exist, we can safely disregard it\r\n              }\r\n\r\n              this._domElement.on('hidden.bs.dropdown', () => this.dropContainerShow());\r\n\r\n              // hide dropdown menu on grid scroll\r\n              this.gridViewport.on('scroll', () => this.dispose());\r\n\r\n              // hide on dropdown click\r\n              this._domElement.on('click', () => this.dispose());\r\n              resolve(true);\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Column, Sorter } from './../models/index';\r\n\r\nexport const numericSorter: Sorter = (value1: any, value2: any, sortDirection: number, sortColumn?: Column) => {\r\n  const checkForUndefinedValues = sortColumn && sortColumn.valueCouldBeUndefined || false;\r\n  const x = (isNaN(value1) || value1 === '' || value1 === null || (checkForUndefinedValues && value1 === undefined)) ? -99e+10 : parseFloat(value1);\r\n  const y = (isNaN(value2) || value2 === '' || value2 === null || (checkForUndefinedValues && value2 === undefined)) ? -99e+10 : parseFloat(value2);\r\n  return sortDirection * (x === y ? 0 : (x > y ? 1 : -1));\r\n};\r\n","import { Column, Sorter, SortDirectionNumber } from './../models/index';\r\n\r\nexport const objectStringSorter: Sorter = (value1: any, value2: any, sortDirection: number | SortDirectionNumber, sortColumn: Column) => {\r\n  if (!sortColumn || !sortColumn.dataKey) {\r\n    throw new Error('Sorting a \"FieldType.object\" requires you to provide the \"dataKey\" (object property name) of the object so that we can use it to sort correctly');\r\n  }\r\n\r\n  const stringValue1 = (value1 && value1.hasOwnProperty(sortColumn.dataKey)) ? value1[sortColumn.dataKey] : value1;\r\n  const stringValue2 = (value2 && value2.hasOwnProperty(sortColumn.dataKey)) ? value2[sortColumn.dataKey] : value2;\r\n  if (sortDirection === undefined || sortDirection === null) {\r\n    sortDirection = SortDirectionNumber.neutral;\r\n  }\r\n\r\n  let position = 0;\r\n  if (typeof value1 !== 'object') {\r\n    position = -99e+10;\r\n  } else if (typeof value2 !== 'object') {\r\n    position = 99e+10;\r\n  } else if (!stringValue1) {\r\n    position = -1;\r\n  } else if (!stringValue2) {\r\n    position = 1;\r\n  } else if (stringValue1 === stringValue2) {\r\n    position = 0;\r\n  } else if (sortDirection) {\r\n    position = stringValue1 < stringValue2 ? -1 : 1;\r\n  } else {\r\n    position = stringValue1 < stringValue2 ? 1 : -1;\r\n  }\r\n\r\n  return sortDirection * position;\r\n};\r\n","import { Column, Sorter, SortDirectionNumber } from './../models/index';\r\n\r\nexport const stringSorter: Sorter = (value1: any, value2: any, sortDirection: number | SortDirectionNumber, sortColumn?: Column) => {\r\n  if (sortDirection === undefined || sortDirection === null) {\r\n    sortDirection = SortDirectionNumber.neutral;\r\n  }\r\n  let position = 0;\r\n  const checkForUndefinedValues = sortColumn && sortColumn.valueCouldBeUndefined || false;\r\n\r\n  if (value1 === value2) {\r\n    position = 0;\r\n  } else if (value1 === null || (checkForUndefinedValues && value1 === undefined)) {\r\n    position = -1;\r\n  } else if (value2 === null || (checkForUndefinedValues && value2 === undefined)) {\r\n    position = 1;\r\n  } else if (sortDirection) {\r\n    position = value1 < value2 ? -1 : 1;\r\n  } else {\r\n    position = value1 < value2 ? 1 : -1;\r\n  }\r\n  return sortDirection * position;\r\n};\r\n","import { Observable, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport * as moment_ from 'moment-mini';\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\nimport { FieldType, GridOption, OperatorString, OperatorType } from '../models/index';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/**\r\n * Add an item to an array only when the item does not exists, when the item is an object we will be using their \"id\" to compare\r\n * @param inputArray\r\n * @param inputItem\r\n * @param itemIdPropName\r\n */\r\nexport function addToArrayWhenNotExists<T = any>(inputArray: T[], inputItem: T, itemIdPropName = 'id') {\r\n  let arrayRowIndex = -1;\r\n  if (typeof inputItem === 'object' && inputItem.hasOwnProperty(itemIdPropName)) {\r\n    arrayRowIndex = inputArray.findIndex((item) => item[itemIdPropName] === inputItem[itemIdPropName]);\r\n  } else {\r\n    arrayRowIndex = inputArray.findIndex((item) => item === inputItem);\r\n  }\r\n\r\n  if (arrayRowIndex < 0) {\r\n    inputArray.push(inputItem);\r\n  }\r\n}\r\n\r\n/**\r\n * Simple function to which will loop and create as demanded the number of white spaces,\r\n * this is used in the CSV export\r\n * @param int nbSpaces: number of white spaces to create\r\n */\r\nexport function addWhiteSpaces(nbSpaces: number): string {\r\n  let result = '';\r\n\r\n  for (let i = 0; i < nbSpaces; i++) {\r\n    result += ' ';\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Remove a column from the grid by it's index in the grid\r\n * @param array input\r\n * @param index\r\n */\r\nexport function arrayRemoveItemByIndex<T>(array: T[], index: number): T[] {\r\n  return array.filter((_el: T, i: number) => index !== i);\r\n}\r\n\r\n/**\r\n * Convert a flat array (with \"parentId\" references) into a hierarchical dataset structure (where children are array(s) inside their parent objects)\r\n * @param flatArray input array (flat dataset)\r\n * @param options you can provide the following options:: \"parentPropName\" (defaults to \"parent\"), \"childrenPropName\" (defaults to \"children\") and \"identifierPropName\" (defaults to \"id\")\r\n * @return roots - hierarchical data view array\r\n */\r\nexport function convertParentChildArrayToHierarchicalView<T = any>(flatArray: T[], options?: { parentPropName?: string; childrenPropName?: string; identifierPropName?: string; }): T[] {\r\n  const childrenPropName = options && options.childrenPropName || 'children';\r\n  const parentPropName = options && options.parentPropName || '__parentId';\r\n  const identifierPropName = options && options.identifierPropName || 'id';\r\n  const hasChildrenFlagPropName = '__hasChildren';\r\n  const treeLevelPropName = '__treeLevel';\r\n  const inputArray: T[] = $.extend(true, [], flatArray);\r\n\r\n  const roots: T[] = []; // things without parent\r\n\r\n  // make them accessible by guid on this map\r\n  const all = {};\r\n\r\n  inputArray.forEach((item) => all[item[identifierPropName]] = item);\r\n\r\n  // connect childrens to its parent, and split roots apart\r\n  Object.keys(all).forEach((id) => {\r\n    const item = all[id];\r\n    if (item[parentPropName] === null || !item.hasOwnProperty(parentPropName)) {\r\n      delete item[parentPropName];\r\n      roots.push(item);\r\n    } else if (item[parentPropName] in all) {\r\n      const p = all[item[parentPropName]];\r\n      if (!(childrenPropName in p)) {\r\n        p[childrenPropName] = [];\r\n      }\r\n      delete item[parentPropName];\r\n      p[childrenPropName].push(item);\r\n    }\r\n\r\n    // delete any unnecessary properties that were possibly created in the flat array but shouldn't be part of the tree data\r\n    delete item[treeLevelPropName];\r\n    delete item[hasChildrenFlagPropName];\r\n  });\r\n\r\n  return roots;\r\n}\r\n\r\n/**\r\n * Convert a hierarchical array (with children) into a flat array structure array (where the children are pushed as next indexed item in the array)\r\n * @param hierarchicalArray - input hierarchical array\r\n * @param options - you can provide \"childrenPropName\" (defaults to \"children\")\r\n * @return output - Parent/Child array\r\n */\r\nexport function convertHierarchicalViewToParentChildArray<T = any>(hierarchicalArray: T[], options?: { parentPropName?: string; childrenPropName?: string; identifierPropName?: string; }): T[] {\r\n  const outputArray: T[] = [];\r\n  convertHierarchicalViewToParentChildArrayByReference($.extend(true, [], hierarchicalArray), outputArray, options, 0);\r\n\r\n  // the output array is the one passed as reference\r\n  return outputArray;\r\n}\r\n\r\n/**\r\n * Convert a hierarchical array (with children) into a flat array structure array but using the array as the output (the array is the pointer reference)\r\n * @param hierarchicalArray - input hierarchical array\r\n * @param outputArrayRef - output array passed (and modified) by reference\r\n * @param options - you can provide \"childrenPropName\" (defaults to \"children\")\r\n * @param treeLevel - tree level number\r\n * @param parentId - parent ID\r\n */\r\nexport function convertHierarchicalViewToParentChildArrayByReference<T = any>(hierarchicalArray: T[], outputArrayRef: T[], options?: { childrenPropName?: string; parentPropName?: string; hasChildrenFlagPropName?: string; treeLevelPropName?: string; identifierPropName?: string; }, treeLevel = 0, parentId?: string) {\r\n  const childrenPropName = options && options.childrenPropName || 'children';\r\n  const identifierPropName = options && options.identifierPropName || 'id';\r\n  const hasChildrenFlagPropName = options && options.hasChildrenFlagPropName || '__hasChildren';\r\n  const treeLevelPropName = options && options.treeLevelPropName || '__treeLevel';\r\n  const parentPropName = options && options.parentPropName || '__parentId';\r\n\r\n  if (Array.isArray(hierarchicalArray)) {\r\n    for (const item of hierarchicalArray) {\r\n      if (item) {\r\n        const itemExist = outputArrayRef.find((itm: T) => itm[identifierPropName] === item[identifierPropName]);\r\n        if (!itemExist) {\r\n          item[treeLevelPropName] = treeLevel; // save tree level ref\r\n          item[parentPropName] = parentId || null;\r\n          outputArrayRef.push(item);\r\n        }\r\n        if (Array.isArray(item[childrenPropName])) {\r\n          treeLevel++;\r\n          convertHierarchicalViewToParentChildArrayByReference(item[childrenPropName], outputArrayRef, options, treeLevel, item[identifierPropName]);\r\n          treeLevel--;\r\n          item[hasChildrenFlagPropName] = true;\r\n          delete item[childrenPropName]; // remove the children property\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Create an immutable clone of an array or object\r\n * (c) 2019 Chris Ferdinandi, MIT License, https://gomakethings.com\r\n * @param  {Array|Object} obj The array or object to copy\r\n * @return {Array|Object}     The clone of the array or object\r\n */\r\nexport function deepCopy(obj: any) {\r\n  /**\r\n   * Create an immutable copy of an object\r\n   * @return {Object}\r\n   */\r\n  const cloneObj = () => {\r\n    // Create new object\r\n    const clone = {};\r\n\r\n    // Loop through each item in the original\r\n    // Recursively copy it's value and add to the clone\r\n    for (const key in obj) {\r\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        clone[key] = deepCopy(obj[key]);\r\n      }\r\n    }\r\n    return clone;\r\n  };\r\n\r\n  /**\r\n   * Create an immutable copy of an array\r\n   * @return {Array}\r\n   */\r\n  const cloneArr = () => {\r\n    return obj.map((item: any) => deepCopy(item));\r\n  };\r\n\r\n  // -- init --//\r\n  // Get object type\r\n  const type = Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\r\n\r\n  // If an object\r\n  if (type === 'object') {\r\n    return cloneObj();\r\n  }\r\n  // If an array\r\n  if (type === 'array') {\r\n    return cloneArr();\r\n  }\r\n  // Otherwise, return it as-is\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Find an item from a hierarchical view structure (a parent that can have children array which themseleves can children and so on)\r\n * @param hierarchicalArray\r\n * @param predicate\r\n * @param childrenPropertyName\r\n */\r\nexport function findItemInHierarchicalStructure<T = any>(hierarchicalArray: T[], predicate: (item: T) => boolean, childrenPropertyName: string): T {\r\n  if (!childrenPropertyName) {\r\n    throw new Error('findRecursive requires parameter \"childrenPropertyName\"');\r\n  }\r\n  const initialFind = hierarchicalArray.find(predicate);\r\n  const elementsWithChildren = hierarchicalArray.filter((x: T) => x.hasOwnProperty(childrenPropertyName) && x[childrenPropertyName]);\r\n  if (initialFind) {\r\n    return initialFind;\r\n  } else if (elementsWithChildren.length) {\r\n    const childElements: T[] = [];\r\n    elementsWithChildren.forEach((item: T) => {\r\n      if (item.hasOwnProperty(childrenPropertyName)) {\r\n        childElements.push(...item[childrenPropertyName]);\r\n      }\r\n    });\r\n    return findItemInHierarchicalStructure<T>(childElements, predicate, childrenPropertyName);\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * HTML decode using jQuery with a <div>\r\n * Create a in-memory div, set it's inner text(which jQuery automatically encodes)\r\n * then grab the encoded contents back out.  The div never exists on the page.\r\n*/\r\nexport function htmlDecode(encodedStr: string): string {\r\n  const parser = DOMParser && new DOMParser;\r\n  if (parser && parser.parseFromString) {\r\n    const dom = parser.parseFromString(\r\n      '<!doctype html><body>' + encodedStr,\r\n      'text/html');\r\n    return dom && dom.body && dom.body.textContent;\r\n  } else {\r\n    // for some browsers that might not support DOMParser, use jQuery instead\r\n    return $('<div/>').html(encodedStr).text();\r\n  }\r\n}\r\n\r\n/**\r\n * HTML encode using jQuery with a <div>\r\n * Create a in-memory div, set it's inner text(which jQuery automatically encodes)\r\n * then grab the encoded contents back out.  The div never exists on the page.\r\n*/\r\nexport function htmlEncode(inputValue: string): string {\r\n  const entityMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    '\"': '&quot;',\r\n    '\\'': '&#39;'\r\n  };\r\n  // all symbols::  /[&<>\"'`=\\/]/g\r\n  return (inputValue || '').toString().replace(/[&<>\"']/g, (s) => entityMap[s]);\r\n}\r\n\r\n/**\r\n * Decode text into html entity\r\n * @param string text: input text\r\n * @param string text: output text\r\n */\r\nexport function htmlEntityDecode(input: string): string {\r\n  return input.replace(/&#(\\d+);/g, function (_match, dec) {\r\n    return String.fromCharCode(dec);\r\n  });\r\n}\r\n\r\n/**\r\n * Decode text into html entity\r\n * @param string text: input text\r\n * @param string text: output text\r\n */\r\nexport function htmlEntityEncode(input: any): string {\r\n  const buf = [];\r\n  for (let i = input.length - 1; i >= 0; i--) {\r\n    buf.unshift(['&#', input[i].charCodeAt(), ';'].join(''));\r\n  }\r\n  return buf.join('');\r\n}\r\n\r\n/**\r\n * Compares two arrays of characters to determine if all the items are equal\r\n * @param a first array\r\n * @param b second array to compare with a\r\n * @param [orderMatters=false] flag if the order matters, if not arrays will be sorted before comparison\r\n * @return boolean true if equal, else false\r\n */\r\nexport function charArraysEqual<T = any>(a: T[], b: T[], orderMatters: boolean = false): boolean {\r\n  if (!a || !b || !Array.isArray(a) || !Array.isArray(a)) {\r\n    return false;\r\n  }\r\n\r\n  if (a.length !== b.length) {\r\n    return false;\r\n  }\r\n\r\n  if (!orderMatters && a.sort && b.sort) {\r\n    a.sort();\r\n    b.sort();\r\n  }\r\n\r\n  for (let i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Try casting an input of type Promise | Observable into a Promise type.\r\n * @param object which could be of type Promise or Observable\r\n * @param fromServiceName string representing the caller service name and will be used if we throw a casting problem error\r\n */\r\nexport function castToPromise<T>(input: Promise<T> | Observable<T>, fromServiceName: string = ''): Promise<T> {\r\n  let promise: any = input;\r\n\r\n  if (input instanceof Promise) {\r\n    // if it's already a Promise then return it\r\n    return input;\r\n  } else if (input instanceof Observable) {\r\n    promise = input.pipe(first()).toPromise();\r\n  }\r\n\r\n  if (!(promise instanceof Promise)) {\r\n    throw new Error(\r\n      `Something went wrong, Angular-Slickgrid ${fromServiceName} is not able to convert the Observable into a Promise.\r\n      If you are using Angular HttpClient, you could try converting your http call to a Promise with \".toPromise()\"\r\n      for example::  this.http.post('graphql', { query: graphqlQuery }).toPromise()\r\n      `);\r\n  }\r\n\r\n  return promise;\r\n}\r\n\r\n/**\r\n * Uses the logic function to find an item in an array or returns the default\r\n * value provided (empty object by default)\r\n * @param any[] array the array to filter\r\n * @param function logic the logic to find the item\r\n * @param any [defaultVal={}] the default value to return\r\n * @return object the found object or default value\r\n */\r\nexport function findOrDefault<T = any>(array: any[], logic: (item: any) => boolean, defaultVal = {}): any {\r\n  return array.find(logic) || defaultVal;\r\n}\r\n\r\n/**\r\n * Encode string to html special char and add html space padding defined\r\n * @param {string} inputStr - input string\r\n * @param {number} paddingLength - padding to add\r\n */\r\nexport function htmlEncodedStringWithPadding(inputStr: string, paddingLength: number): string {\r\n  const inputStrLn = inputStr.length;\r\n  let outputStr = htmlEncode(inputStr);\r\n\r\n  if (inputStrLn < paddingLength) {\r\n    for (let i = inputStrLn; i < paddingLength; i++) {\r\n      outputStr += `&nbsp;`;\r\n    }\r\n  }\r\n  return outputStr;\r\n}\r\n\r\n/**\r\n  * Take a number (or a string) and display it as a formatted decimal string with defined minimum and maximum decimals\r\n  * @param input\r\n  * @param minDecimal\r\n  * @param maxDecimal\r\n  */\r\nexport function decimalFormatted(input: number | string, minDecimal?: number, maxDecimal?: number, decimalSeparator: '.' | ',' = '.', thousandSeparator: ',' | '_' | '.' | ' ' | '' = ''): string {\r\n  if (isNaN(+input)) {\r\n    return input as string;\r\n  }\r\n\r\n  const minDec = (minDecimal === undefined) ? 2 : minDecimal;\r\n  const maxDec = (maxDecimal === undefined) ? 2 : maxDecimal;\r\n  let amount = String(Math.round(+input * Math.pow(10, maxDec)) / Math.pow(10, maxDec));\r\n\r\n  if ((amount.indexOf('.') < 0) && (minDec > 0)) {\r\n    amount += '.';\r\n  }\r\n  while ((amount.length - amount.indexOf('.')) <= minDec) {\r\n    amount += '0';\r\n  }\r\n\r\n  const decimalSplit = amount.split('.');\r\n  let integerNumber;\r\n  let decimalNumber;\r\n\r\n  // do we want to display our number with a custom separator in each thousand position\r\n  if (thousandSeparator) {\r\n    integerNumber = decimalSplit.length >= 1 ? thousandSeparatorFormatted(decimalSplit[0], thousandSeparator) : undefined;\r\n  } else {\r\n    integerNumber = decimalSplit.length >= 1 ? decimalSplit[0] : amount;\r\n  }\r\n\r\n  // when using a separator that is not a dot, replace it with the new separator\r\n  if (decimalSplit.length > 1) {\r\n    decimalNumber = decimalSplit[1];\r\n  }\r\n\r\n  let output = '';\r\n  if (integerNumber !== undefined && decimalNumber !== undefined) {\r\n    output = `${integerNumber}${decimalSeparator}${decimalNumber}`;\r\n  } else if (integerNumber !== undefined && integerNumber !== null) {\r\n    output = integerNumber;\r\n  }\r\n  return output;\r\n}\r\n\r\n/**\r\n * Loop through all properties of an object and nullify any properties that are instanceof HTMLElement,\r\n * if we detect an array then use recursion to go inside it and apply same logic\r\n * @param obj - object containing 1 or more properties with DOM Elements\r\n */\r\nexport function destroyObjectDomElementProps(obj: any) {\r\n  if (obj) {\r\n    for (const key of Object.keys(obj)) {\r\n      if (Array.isArray(obj[key])) {\r\n        destroyObjectDomElementProps(obj[key]);\r\n      }\r\n      if (obj[key] instanceof HTMLElement) {\r\n        obj[key] = null;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Format a number following options passed as arguments (decimals, separator, ...)\r\n * @param input\r\n * @param minDecimal\r\n * @param maxDecimal\r\n * @param displayNegativeNumberWithParentheses\r\n * @param symbolPrefix\r\n * @param symbolSuffix\r\n * @param decimalSeparator\r\n * @param thousandSeparator\r\n */\r\nexport function formatNumber(input: number | string, minDecimal?: number, maxDecimal?: number, displayNegativeNumberWithParentheses?: boolean, symbolPrefix = '', symbolSuffix = '', decimalSeparator: '.' | ',' = '.', thousandSeparator: ',' | '_' | '.' | ' ' | '' = ''): string {\r\n  if (isNaN(+input)) {\r\n    return input as string;\r\n  }\r\n\r\n  const calculatedValue = ((Math.round(parseFloat(input as string) * 1000000) / 1000000));\r\n\r\n  if (calculatedValue < 0) {\r\n    const absValue = Math.abs(calculatedValue);\r\n    if (displayNegativeNumberWithParentheses) {\r\n      if (!isNaN(minDecimal) || !isNaN(maxDecimal)) {\r\n        return `(${symbolPrefix}${decimalFormatted(absValue, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}${symbolSuffix})`;\r\n      }\r\n      const formattedValue = thousandSeparatorFormatted(`${absValue}`, thousandSeparator);\r\n      return `(${symbolPrefix}${formattedValue}${symbolSuffix})`;\r\n    } else {\r\n      if (!isNaN(minDecimal) || !isNaN(maxDecimal)) {\r\n        return `-${symbolPrefix}${decimalFormatted(absValue, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}${symbolSuffix}`;\r\n      }\r\n      const formattedValue = thousandSeparatorFormatted(`${absValue}`, thousandSeparator);\r\n      return `-${symbolPrefix}${formattedValue}${symbolSuffix}`;\r\n    }\r\n  } else {\r\n    if (!isNaN(minDecimal) || !isNaN(maxDecimal)) {\r\n      return `${symbolPrefix}${decimalFormatted(input, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}${symbolSuffix}`;\r\n    }\r\n    const formattedValue = thousandSeparatorFormatted(`${input}`, thousandSeparator);\r\n    return `${symbolPrefix}${formattedValue}${symbolSuffix}`;\r\n  }\r\n}\r\n\r\n/** From a dot (.) notation path, find and return a property within an object given a path */\r\nexport function getDescendantProperty<T = any>(obj: T, path: string): any {\r\n  return path.split('.').reduce((acc, part) => acc && acc[part], obj);\r\n}\r\n\r\n/** Get HTML Element position offset (without jQuery) */\r\nexport function getHtmlElementOffset(element: HTMLElement): { top: number; left: number; } {\r\n  const rect = element.getBoundingClientRect();\r\n  let top = 0;\r\n  let left = 0;\r\n\r\n  if (rect && rect.top !== undefined && rect.left !== undefined) {\r\n    top = rect.top + window.pageYOffset;\r\n    left = rect.left + window.pageXOffset;\r\n  }\r\n  return { top, left };\r\n}\r\n\r\n/** Get Translation Prefix, defaults to an empty string */\r\nexport function getTranslationPrefix(gridOptions?: GridOption): string {\r\n  if (gridOptions && gridOptions.translationNamespace) {\r\n    return gridOptions.translationNamespace + (gridOptions.translationNamespaceSeparator || '');\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * From a Date FieldType, return it's equivalent moment.js format\r\n * refer to moment.js for the format standard used: https://momentjs.com/docs/#/parsing/string-format/\r\n * @param fieldType\r\n */\r\nexport function mapMomentDateFormatWithFieldType(fieldType: FieldType): string {\r\n  let map: string;\r\n  switch (fieldType) {\r\n    case FieldType.dateTime:\r\n    case FieldType.dateTimeIso:\r\n      map = 'YYYY-MM-DD HH:mm:ss';\r\n      break;\r\n    case FieldType.dateTimeShortIso:\r\n      map = 'YYYY-MM-DD HH:mm';\r\n      break;\r\n    case FieldType.dateTimeIsoAmPm:\r\n      map = 'YYYY-MM-DD hh:mm:ss a';\r\n      break;\r\n    case FieldType.dateTimeIsoAM_PM:\r\n      map = 'YYYY-MM-DD hh:mm:ss A';\r\n      break;\r\n    // all Euro Formats (date/month/year)\r\n    case FieldType.dateEuro:\r\n      map = 'DD/MM/YYYY';\r\n      break;\r\n    case FieldType.dateEuroShort:\r\n      map = 'D/M/YY';\r\n      break;\r\n    case FieldType.dateTimeEuro:\r\n      map = 'DD/MM/YYYY HH:mm:ss';\r\n      break;\r\n    case FieldType.dateTimeShortEuro:\r\n      map = 'DD/MM/YYYY HH:mm';\r\n      break;\r\n    case FieldType.dateTimeEuroAmPm:\r\n      map = 'DD/MM/YYYY hh:mm:ss a';\r\n      break;\r\n    case FieldType.dateTimeEuroAM_PM:\r\n      map = 'DD/MM/YYYY hh:mm:ss A';\r\n      break;\r\n    case FieldType.dateTimeEuroShort:\r\n      map = 'D/M/YY H:m:s';\r\n      break;\r\n    case FieldType.dateTimeEuroShortAmPm:\r\n      map = 'D/M/YY h:m:s a';\r\n      break;\r\n    // all US Formats (month/date/year)\r\n    case FieldType.dateUs:\r\n      map = 'MM/DD/YYYY';\r\n      break;\r\n    case FieldType.dateUsShort:\r\n      map = 'M/D/YY';\r\n      break;\r\n    case FieldType.dateTimeUs:\r\n      map = 'MM/DD/YYYY HH:mm:ss';\r\n      break;\r\n    case FieldType.dateTimeShortUs:\r\n      map = 'MM/DD/YYYY HH:mm';\r\n      break;\r\n    case FieldType.dateTimeUsAmPm:\r\n      map = 'MM/DD/YYYY hh:mm:ss a';\r\n      break;\r\n    case FieldType.dateTimeUsAM_PM:\r\n      map = 'MM/DD/YYYY hh:mm:ss A';\r\n      break;\r\n    case FieldType.dateTimeUsShort:\r\n      map = 'M/D/YY H:m:s';\r\n      break;\r\n    case FieldType.dateTimeUsShortAmPm:\r\n      map = 'M/D/YY h:m:s a';\r\n      break;\r\n    case FieldType.dateUtc:\r\n      map = 'YYYY-MM-DDTHH:mm:ss.SSSZ';\r\n      break;\r\n    case FieldType.date:\r\n    case FieldType.dateIso:\r\n    default:\r\n      map = 'YYYY-MM-DD';\r\n      break;\r\n  }\r\n  return map;\r\n}\r\n\r\n/**\r\n * From a Date FieldType, return it's equivalent Flatpickr format\r\n * refer to Flatpickr for the format standard used: https://chmln.github.io/flatpickr/formatting/#date-formatting-tokens\r\n * also note that they seem very similar to PHP format (except for am/pm): http://php.net/manual/en/function.date.php\r\n * @param fieldType\r\n */\r\nexport function mapFlatpickrDateFormatWithFieldType(fieldType: FieldType): string {\r\n  /*\r\n    d: Day of the month, 2 digits with leading zeros\t01 to 31\r\n    D: A textual representation of a day\tMon through Sun\r\n    l: (lowercase 'L')\tA full textual representation of the day of the week\tSunday through Saturday\r\n    j: Day of the month without leading zeros\t1 to 31\r\n    J: Day of the month without leading zeros and ordinal suffix\t1st, 2nd, to 31st\r\n    w: Numeric representation of the day of the week\t0 (for Sunday) through 6 (for Saturday)\r\n    F: A full textual representation of a month\tJanuary through December\r\n    m: Numeric representation of a month, with leading zero\t01 through 12\r\n    n: Numeric representation of a month, without leading zeros\t1 through 12\r\n    M: A short textual representation of a month\tJan through Dec\r\n    U: The number of seconds since the Unix Epoch\t1413704993\r\n    y: A two digit representation of a year\t99 or 03\r\n    Y: A full numeric representation of a year, 4 digits\t1999 or 2003\r\n    H: Hours (24 hours)\t00 to 23\r\n    h: Hours\t1 to 12\r\n    i: Minutes\t00 to 59\r\n    S: Seconds, 2 digits\t00 to 59\r\n    s: Seconds\t0, 1 to 59\r\n    K: AM/PM\tAM or PM\r\n  */\r\n  let map: string;\r\n  switch (fieldType) {\r\n    case FieldType.dateTime:\r\n    case FieldType.dateTimeIso:\r\n      map = 'Y-m-d H:i:S';\r\n      break;\r\n    case FieldType.dateTimeShortIso:\r\n      map = 'Y-m-d H:i';\r\n      break;\r\n    case FieldType.dateTimeIsoAmPm:\r\n    case FieldType.dateTimeIsoAM_PM:\r\n      map = 'Y-m-d h:i:S K'; // there is no lowercase in Flatpickr :(\r\n      break;\r\n    // all Euro Formats (date/month/year)\r\n    case FieldType.dateEuro:\r\n      map = 'd/m/Y';\r\n      break;\r\n    case FieldType.dateEuroShort:\r\n      map = 'd/m/y';\r\n      break;\r\n    case FieldType.dateTimeEuro:\r\n      map = 'd/m/Y H:i:S';\r\n      break;\r\n    case FieldType.dateTimeShortEuro:\r\n      map = 'd/m/y H:i';\r\n      break;\r\n    case FieldType.dateTimeEuroAmPm:\r\n      map = 'd/m/Y h:i:S K'; // there is no lowercase in Flatpickr :(\r\n      break;\r\n    case FieldType.dateTimeEuroAM_PM:\r\n      map = 'd/m/Y h:i:s K';\r\n      break;\r\n    case FieldType.dateTimeEuroShort:\r\n      map = 'd/m/y H:i:s';\r\n      break;\r\n    case FieldType.dateTimeEuroShortAmPm:\r\n      map = 'd/m/y h:i:s K'; // there is no lowercase in Flatpickr :(\r\n      break;\r\n    // all US Formats (month/date/year)\r\n    case FieldType.dateUs:\r\n      map = 'm/d/Y';\r\n      break;\r\n    case FieldType.dateUsShort:\r\n      map = 'm/d/y';\r\n      break;\r\n    case FieldType.dateTimeUs:\r\n      map = 'm/d/Y H:i:S';\r\n      break;\r\n    case FieldType.dateTimeShortUs:\r\n      map = 'm/d/y H:i';\r\n      break;\r\n    case FieldType.dateTimeUsAmPm:\r\n      map = 'm/d/Y h:i:S K'; // there is no lowercase in Flatpickr :(\r\n      break;\r\n    case FieldType.dateTimeUsAM_PM:\r\n      map = 'm/d/Y h:i:s K';\r\n      break;\r\n    case FieldType.dateTimeUsShort:\r\n      map = 'm/d/y H:i:s';\r\n      break;\r\n    case FieldType.dateTimeUsShortAmPm:\r\n      map = 'm/d/y h:i:s K'; // there is no lowercase in Flatpickr :(\r\n      break;\r\n    case FieldType.dateUtc:\r\n      map = 'Z';\r\n      break;\r\n    case FieldType.date:\r\n    case FieldType.dateIso:\r\n    default:\r\n      map = 'Y-m-d';\r\n      break;\r\n  }\r\n  return map;\r\n}\r\n\r\n/**\r\n * Mapper for query operators (ex.: <= is \"le\", > is \"gt\")\r\n * @param string operator\r\n * @returns string map\r\n */\r\nexport function mapOperatorType(operator: OperatorType | OperatorString): OperatorType {\r\n  let map: OperatorType;\r\n\r\n  switch (operator) {\r\n    case '<':\r\n    case 'LT':\r\n      map = OperatorType.lessThan;\r\n      break;\r\n    case '<=':\r\n    case 'LE':\r\n      map = OperatorType.lessThanOrEqual;\r\n      break;\r\n    case '>':\r\n    case 'GT':\r\n      map = OperatorType.greaterThan;\r\n      break;\r\n    case '>=':\r\n    case 'GE':\r\n      map = OperatorType.greaterThanOrEqual;\r\n      break;\r\n    case '<>':\r\n    case '!=':\r\n    case 'NE':\r\n      map = OperatorType.notEqual;\r\n      break;\r\n    case '*':\r\n    case 'a*':\r\n    case 'StartsWith':\r\n      map = OperatorType.startsWith;\r\n      break;\r\n    case '*z':\r\n    case 'EndsWith':\r\n      map = OperatorType.endsWith;\r\n      break;\r\n    case '=':\r\n    case '==':\r\n    case 'EQ':\r\n      map = OperatorType.equal;\r\n      break;\r\n    case 'IN':\r\n      map = OperatorType.in;\r\n      break;\r\n    case 'NIN':\r\n    case 'NOT_IN':\r\n      map = OperatorType.notIn;\r\n      break;\r\n    case 'Not_Contains':\r\n    case 'NOT_CONTAINS':\r\n      map = OperatorType.notContains;\r\n      break;\r\n    case 'Contains':\r\n    case 'CONTAINS':\r\n    default:\r\n      map = OperatorType.contains;\r\n      break;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\n/**\r\n * Find equivalent short designation of an Operator Type or Operator String.\r\n * When using a Compound Filter, we use the short designation and so we need the mapped value.\r\n * For example OperatorType.startsWith short designation is \"a*\", while OperatorType.greaterThanOrEqual is \">=\"\r\n */\r\nexport function mapOperatorToShorthandDesignation(operator: OperatorType | OperatorString): OperatorString {\r\n  let shortOperator: OperatorString = '';\r\n\r\n  switch (operator) {\r\n    case OperatorType.greaterThan:\r\n    case '>':\r\n      shortOperator = '>';\r\n      break;\r\n    case OperatorType.greaterThanOrEqual:\r\n    case '>=':\r\n      shortOperator = '>=';\r\n      break;\r\n    case OperatorType.lessThan:\r\n    case '<':\r\n      shortOperator = '<';\r\n      break;\r\n    case OperatorType.lessThanOrEqual:\r\n    case '<=':\r\n      shortOperator = '<=';\r\n      break;\r\n    case OperatorType.notEqual:\r\n    case '<>':\r\n      shortOperator = '<>';\r\n      break;\r\n    case OperatorType.equal:\r\n    case '=':\r\n    case '==':\r\n    case 'EQ':\r\n      shortOperator = '=';\r\n      break;\r\n    case OperatorType.startsWith:\r\n    case 'a*':\r\n    case '*':\r\n      shortOperator = 'a*';\r\n      break;\r\n    case OperatorType.endsWith:\r\n    case '*z':\r\n      shortOperator = '*z';\r\n      break;\r\n    default:\r\n      // any other operator will be considered as already a short expression, so we can return same input operator\r\n      shortOperator = operator;\r\n      break;\r\n  }\r\n\r\n  return shortOperator;\r\n}\r\n\r\n/**\r\n * Mapper for query operator by a Filter Type\r\n * For example a multiple-select typically uses 'IN' operator\r\n * @param operator\r\n * @returns string map\r\n */\r\nexport function mapOperatorByFieldType(fieldType: FieldType | string): OperatorType {\r\n  let map: OperatorType;\r\n\r\n  switch (fieldType) {\r\n    case FieldType.unknown:\r\n    case FieldType.string:\r\n    case FieldType.text:\r\n    case FieldType.password:\r\n    case FieldType.readonly:\r\n      map = OperatorType.contains;\r\n      break;\r\n    case FieldType.float:\r\n    case FieldType.number:\r\n    case FieldType.date:\r\n    case FieldType.dateIso:\r\n    case FieldType.dateUtc:\r\n    case FieldType.dateTime:\r\n    case FieldType.dateTimeIso:\r\n    case FieldType.dateTimeIsoAmPm:\r\n    case FieldType.dateTimeIsoAM_PM:\r\n    case FieldType.dateEuro:\r\n    case FieldType.dateEuroShort:\r\n    case FieldType.dateTimeEuro:\r\n    case FieldType.dateTimeEuroAmPm:\r\n    case FieldType.dateTimeEuroAM_PM:\r\n    case FieldType.dateTimeEuroShort:\r\n    case FieldType.dateTimeEuroShortAmPm:\r\n    case FieldType.dateTimeEuroShortAM_PM:\r\n    case FieldType.dateUs:\r\n    case FieldType.dateUsShort:\r\n    case FieldType.dateTimeUs:\r\n    case FieldType.dateTimeUsAmPm:\r\n    case FieldType.dateTimeUsAM_PM:\r\n    case FieldType.dateTimeUsShort:\r\n    case FieldType.dateTimeUsShortAmPm:\r\n    case FieldType.dateTimeUsShortAM_PM:\r\n    default:\r\n      map = OperatorType.equal;\r\n      break;\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\n/** Parse any input (bool, number, string) and return a boolean or False when not possible */\r\nexport function parseBoolean(input: any): boolean {\r\n  return /(true|1)/i.test(input + '');\r\n}\r\n\r\n/**\r\n * Parse a date passed as a string (Date only, without time) and return a Date object (if valid)\r\n * @param inputDateString\r\n * @returns string date formatted\r\n */\r\nexport function parseUtcDate(inputDateString: string, useUtc?: boolean): string | null {\r\n  let date = null;\r\n\r\n  if (/^[0-9\\-\\/]*$/.test(inputDateString)) {\r\n    // get the UTC datetime with moment.js but we need to decode the value so that it's valid text\r\n    const dateString = decodeURIComponent(inputDateString);\r\n    const dateMoment = moment(new Date(dateString));\r\n    if (dateMoment.isValid() && dateMoment.year().toString().length === 4) {\r\n      date = (useUtc) ? dateMoment.utc().format() : dateMoment.format();\r\n    }\r\n  }\r\n\r\n  return date;\r\n}\r\n\r\n/**\r\n * Sanitize, return only the text without HTML tags\r\n * @input htmlString\r\n * @return text\r\n */\r\nexport function sanitizeHtmlToText(htmlString: string) {\r\n  const temp = document.createElement('div');\r\n  temp.innerHTML = htmlString;\r\n  return temp.textContent || temp.innerText || '';\r\n}\r\n\r\n/** Set the object value of deeper node from a given dot (.) notation path (e.g.: \"user.firstName\") */\r\nexport function setDeepValue<T = any>(obj: T, path: string | string[], value: any) {\r\n  if (typeof path === 'string') {\r\n    path = path.split('.');\r\n  }\r\n\r\n  if (path.length > 1) {\r\n    const e = path.shift();\r\n    if (obj && e !== undefined) {\r\n      setDeepValue(\r\n        obj[e] = Object.prototype.toString.call(obj[e]) === '[object Object]' ? obj[e] : {},\r\n        path,\r\n        value\r\n      );\r\n    }\r\n  } else if (obj && path[0]) {\r\n    obj[path[0]] = value;\r\n  }\r\n}\r\n\r\n/**\r\n * Format a number or a string into a string that is separated every thousand,\r\n * the default separator is a comma but user can optionally pass a different one\r\n * @param inputValue\r\n * @param separator default to comma \",\"\r\n * @returns string\r\n */\r\nexport function thousandSeparatorFormatted(inputValue: string | number | null, separator: ',' | '_' | '.' | ' ' | '' = ','): string | null {\r\n  if (inputValue !== null && inputValue !== undefined) {\r\n    const stringValue = `${inputValue}`;\r\n    const decimalSplit = stringValue.split('.');\r\n    if (decimalSplit.length === 2) {\r\n      return `${decimalSplit[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator)}.${decimalSplit[1]}`;\r\n    }\r\n    return stringValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\r\n  }\r\n  return inputValue as null;\r\n}\r\n\r\n/**\r\n * Title case (or capitalize) first char of a string, for example \"hello world\" will become \"Hello world\"\r\n * Change the string to be title case on the complete sentence (upper case first char of each word while changing everything else to lower case)\r\n * @param inputStr\r\n * @returns string\r\n */\r\nexport function titleCase(inputStr: string, caseEveryWords = false): string {\r\n  if (typeof inputStr === 'string') {\r\n    if (caseEveryWords) {\r\n      return inputStr.replace(/\\w\\S*/g, (outputStr) => {\r\n        return outputStr.charAt(0).toUpperCase() + outputStr.substr(1).toLowerCase();\r\n      });\r\n    }\r\n    return inputStr.charAt(0).toUpperCase() + inputStr.slice(1);\r\n  }\r\n  return inputStr;\r\n}\r\n\r\n/**\r\n * Converts a string to camel case (camelCase), for example \"hello-world\" (or \"hellow world\") will become \"helloWorld\"\r\n * @param inputStr the string to convert\r\n * @return the string in camel case\r\n */\r\nexport function toCamelCase(inputStr: string): string {\r\n  if (typeof inputStr === 'string') {\r\n    return inputStr.replace(/(?:^\\w|[A-Z]|\\b\\w|[\\s+\\-_\\/])/g, (match: string, offset: number) => {\r\n      // remove white space or hypens or underscores\r\n      if (/[\\s+\\-_\\/]/.test(match)) {\r\n        return '';\r\n      }\r\n\r\n      return offset === 0 ? match.toLowerCase() : match.toUpperCase();\r\n    });\r\n  }\r\n  return inputStr;\r\n}\r\n\r\n/**\r\n * Converts a string to kebab (hypen) case, for example \"helloWorld\" will become \"hello-world\"\r\n * @param str the string to convert\r\n * @return the string in kebab case\r\n */\r\nexport function toKebabCase(inputStr: string): string {\r\n  if (typeof inputStr === 'string') {\r\n    return toCamelCase(inputStr).replace(/([A-Z])/g, '-$1').toLowerCase();\r\n  }\r\n  return inputStr;\r\n}\r\n\r\n/**\r\n * Converts a string from camelCase to snake_case (underscore) case, for example \"helloWorld\" will become \"hello_world\"\r\n * @param str the string to convert\r\n * @return the string in kebab case\r\n */\r\nexport function toSnakeCase(inputStr: string): string {\r\n  if (typeof inputStr === 'string') {\r\n    return toCamelCase(inputStr).replace(/([A-Z])/g, '_$1').toLowerCase();\r\n  }\r\n  return inputStr;\r\n}\r\n\r\n/**\r\n * Takes an input array and makes sure the array has unique values by removing duplicates\r\n * @param array input with possible duplicates\r\n * @param objectProperty optionally provide an object property to compare (example: 'id')\r\n * @return array output without duplicates\r\n */\r\nexport function uniqueArray<T = any>(arr: T[]): T[] {\r\n  if (Array.isArray(arr) && arr.length > 0) {\r\n    return arr.filter((item: T, index: number) => {\r\n      return arr.indexOf(item) >= index;\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Takes an input array of objects and makes sure the array has unique object values by removing duplicates\r\n * it will loop through the array using a property name (or \"id\" when is not provided) to compare uniqueness\r\n * @param array input with possible duplicates\r\n * @param propertyName defaults to \"id\"\r\n * @return array output without duplicates\r\n */\r\nexport function uniqueObjectArray(arr: any[], propertyName = 'id'): any[] {\r\n  if (Array.isArray(arr) && arr.length > 0) {\r\n    const result = [];\r\n    const map = new Map();\r\n\r\n    for (const item of arr) {\r\n      if (!map.has(item[propertyName])) {\r\n        map.set(item[propertyName], true);    // set any value to Map\r\n        result.push({\r\n          id: item[propertyName],\r\n          name: item.name\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Unsubscribe all Observables Subscriptions\r\n * It will return an empty array if it all went well\r\n * @param subscriptions\r\n */\r\nexport function unsubscribeAllObservables(subscriptions: Subscription[]): Subscription[] {\r\n  if (Array.isArray(subscriptions)) {\r\n    subscriptions.forEach((subscription: Subscription) => {\r\n      if (subscription && subscription.unsubscribe) {\r\n        subscription.unsubscribe();\r\n      }\r\n    });\r\n    subscriptions = [];\r\n  }\r\n\r\n  return subscriptions;\r\n}\r\n","import { mapMomentDateFormatWithFieldType } from '../services/utilities';\r\nimport { Column, FieldType, Sorter } from '../models/index';\r\nimport * as moment_ from 'moment-mini';\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\nexport function compareDates(value1: any, value2: any, sortDirection: number, sortColumn: Column, format: string | moment_.MomentBuiltinFormat, strict?: boolean) {\r\n  let diff = 0;\r\n  const checkForUndefinedValues = sortColumn && sortColumn.valueCouldBeUndefined || false;\r\n\r\n  if (value1 === null || value1 === '' || (checkForUndefinedValues && value1 === undefined) || !moment(value1, format, strict).isValid()) {\r\n    diff = -1;\r\n  } else if (value2 === null || value2 === '' || (checkForUndefinedValues && value2 === undefined) || !moment(value2, format, strict).isValid()) {\r\n    diff = 1;\r\n  } else {\r\n    const date1 = moment(value1, format, strict);\r\n    const date2 = moment(value2, format, strict);\r\n    diff = parseInt(date1.format('X'), 10) - parseInt(date2.format('X'), 10);\r\n  }\r\n\r\n  return sortDirection * (diff === 0 ? 0 : (diff > 0 ? 1 : -1));\r\n}\r\n\r\n/** From a FieldType, return the associated date Sorter */\r\nexport function getAssociatedDateSorter(fieldType: FieldType): Sorter {\r\n  const FORMAT = (fieldType === FieldType.date) ? moment.ISO_8601 : mapMomentDateFormatWithFieldType(fieldType);\r\n\r\n  return (value1: any, value2: any, sortDirection: number, sortColumn: Column) => {\r\n    if (FORMAT === moment.ISO_8601) {\r\n      return compareDates(value1, value2, sortDirection, sortColumn, FORMAT, false);\r\n    }\r\n    return compareDates(value1, value2, sortDirection, sortColumn, FORMAT, true);\r\n  };\r\n}\r\n","import { numericSorter } from './numericSorter';\r\nimport { objectStringSorter } from './objectStringSorter';\r\nimport { stringSorter } from './stringSorter';\r\nimport { getAssociatedDateSorter } from './dateUtilities';\r\nimport { FieldType } from '../models/index';\r\n\r\nexport const Sorters = {\r\n  /** Sorter method to sort values by Date object type (uses Moment.js ISO_8601 standard format, optionally include time) */\r\n  date: getAssociatedDateSorter(FieldType.date),\r\n\r\n  /**\r\n   * Sorter method to sort values by Date formatted as ISO date (excluding time),\r\n   * If you wish to optionally include time simply use the \"Sorters.date\" which work with/without time\r\n   */\r\n  dateIso: getAssociatedDateSorter(FieldType.dateIso),\r\n\r\n  /** Sorter method to sort values by Date formatted as (YYYY-MM-DDTHH:mm:ss.SSSZ) */\r\n  dateUtc: getAssociatedDateSorter(FieldType.dateUtc),\r\n\r\n  /** Sorter method to sort values by Date and Time (native Date object) */\r\n  dateTime: getAssociatedDateSorter(FieldType.dateTime),\r\n\r\n  /** Sorter method to sort values by Date formatted as (YYYY-MM-DD HH:mm:ss) */\r\n  dateTimeIso: getAssociatedDateSorter(FieldType.dateTimeIso),\r\n\r\n  /** Sorter method to sort values by Date formatted as (YYYY-MM-DD h:mm:ss a) */\r\n  dateTimeIsoAmPm: getAssociatedDateSorter(FieldType.dateTimeIsoAmPm),\r\n\r\n  /** Sorter method to sort values by Date formatted as (YYYY-MM-DD h:mm:ss A) */\r\n  dateTimeIsoAM_PM: getAssociatedDateSorter(FieldType.dateTimeIsoAM_PM),\r\n\r\n  /** Sorter method to sort values by Date formatted as (YYYY-MM-DD HH:mm) */\r\n  dateTimeShortIso: getAssociatedDateSorter(FieldType.dateTimeShortIso),\r\n\r\n  /** Sorter method to sort values by Date formatted as Euro date (DD/MM/YYYY) */\r\n  dateEuro: getAssociatedDateSorter(FieldType.dateEuro),\r\n\r\n  /** Sorter method to sort values by Date formatted as Euro short date (D/M/YY) */\r\n  dateEuroShort: getAssociatedDateSorter(FieldType.dateEuroShort),\r\n\r\n  /** Sorter method to sort values by Date formatted as (DD/MM/YYYY HH:mm) */\r\n  dateTimeShortEuro: getAssociatedDateSorter(FieldType.dateTimeShortEuro),\r\n\r\n  /** Sorter method to sort values by Date formatted as (DD/MM/YYYY HH:mm:ss) */\r\n  dateTimeEuro: getAssociatedDateSorter(FieldType.dateTimeEuro),\r\n\r\n  /** Sorter method to sort values by Date formatted as (DD/MM/YYYY hh:mm:ss a) */\r\n  dateTimeEuroAmPm: getAssociatedDateSorter(FieldType.dateTimeEuroAmPm),\r\n\r\n  /** Sorter method to sort values by Date formatted as (DD/MM/YYYY hh:mm:ss A) */\r\n  dateTimeEuroAM_PM: getAssociatedDateSorter(FieldType.dateTimeEuroAM_PM),\r\n\r\n  /** Sorter method to sort values by Date formatted as (D/M/YY H:m:s) */\r\n  dateTimeEuroShort: getAssociatedDateSorter(FieldType.dateTimeEuroShort),\r\n\r\n  /** Sorter method to sort values by Date formatted as (D/M/YY h:m:s a) */\r\n  dateTimeEuroShortAmPm: getAssociatedDateSorter(FieldType.dateTimeEuroShortAmPm),\r\n\r\n  /** Sorter method to sort values by Date formatted as (D/M/YY h:m:s A) */\r\n  dateTimeEuroShortAM_PM: getAssociatedDateSorter(FieldType.dateTimeEuroShortAM_PM),\r\n\r\n  /** Sorter method to sort values by Date formatted as US date (MM/DD/YYYY) */\r\n  dateUs: getAssociatedDateSorter(FieldType.dateUs),\r\n\r\n  /** Sorter method to sort values by Date formatted as US short date (M/D/YY) */\r\n  dateUsShort: getAssociatedDateSorter(FieldType.dateUsShort),\r\n\r\n  /** Sorter method to sort values by Date formatted as (MM/DD/YYYY HH:mm) */\r\n  dateTimeShortUs: getAssociatedDateSorter(FieldType.dateTimeShortUs),\r\n\r\n  /** Sorter method to sort values by Date formatted as (MM/DD/YYYY HH:mm:s) */\r\n  dateTimeUs: getAssociatedDateSorter(FieldType.dateTimeUs),\r\n\r\n  /** Sorter method to sort values by Date formatted as (MM/DD/YYYY hh:mm:ss a) */\r\n  dateTimeUsAmPm: getAssociatedDateSorter(FieldType.dateTimeUsAmPm),\r\n\r\n  /** Sorter method to sort values by Date formatted as (MM/DD/YYYY hh:mm:ss A) */\r\n  dateTimeUsAM_PM: getAssociatedDateSorter(FieldType.dateTimeUsAM_PM),\r\n\r\n  /** Sorter method to sort values by Date formatted as (M/D/YY H:m:s) */\r\n  dateTimeUsShort: getAssociatedDateSorter(FieldType.dateTimeUsShort),\r\n\r\n  /** Sorter method to sort values by Date formatted as (M/D/YY h:m:s a) */\r\n  dateTimeUsShortAmPm: getAssociatedDateSorter(FieldType.dateTimeUsShortAmPm),\r\n\r\n  /** Sorter method to sort values by Date formatted as (M/D/YY h:m:s A) */\r\n  dateTimeUsShortAM_PM: getAssociatedDateSorter(FieldType.dateTimeUsShortAM_PM),\r\n\r\n  /** Sorter method to sort values as numeric fields */\r\n  numeric: numericSorter,\r\n\r\n  /**\r\n   * Sorter method to sort object values with a \"dataKey\" provided in your column definition, it's data content must be of type string\r\n   * Example:\r\n   * columnDef = { id='user', field: 'user', ..., dataKey: 'firstName', sorter: Sorters.objectString }\r\n   * collection = [{ firstName: 'John', lastName: 'Doe' }, { firstName: 'Bob', lastName: 'Cash' }]\r\n   */\r\n  objectString: objectStringSorter,\r\n\r\n  /** Sorter method to sort values as regular strings */\r\n  string: stringSorter\r\n};\r\n","import { Column, FieldType, SortDirectionNumber, Sorter } from './../models/index';\r\nimport { Sorters } from './index';\r\nimport { getAssociatedDateSorter } from './dateUtilities';\r\n\r\nexport function sortByFieldType(fieldType: FieldType, value1: any, value2: any, sortDirection: number | SortDirectionNumber, sortColumn?: Column) {\r\n  let sortResult = 0;\r\n\r\n  switch (fieldType) {\r\n    case FieldType.float:\r\n    case FieldType.integer:\r\n    case FieldType.number:\r\n      sortResult = Sorters.numeric(value1, value2, sortDirection, sortColumn);\r\n      break;\r\n    case FieldType.date:\r\n    case FieldType.dateIso:\r\n    case FieldType.dateUtc:\r\n    case FieldType.dateTime:\r\n    case FieldType.dateTimeIso:\r\n    case FieldType.dateTimeIsoAmPm:\r\n    case FieldType.dateTimeIsoAM_PM:\r\n    case FieldType.dateTimeShortIso:\r\n    case FieldType.dateEuro:\r\n    case FieldType.dateEuroShort:\r\n    case FieldType.dateTimeShortEuro:\r\n    case FieldType.dateTimeEuro:\r\n    case FieldType.dateTimeEuroAmPm:\r\n    case FieldType.dateTimeEuroAM_PM:\r\n    case FieldType.dateTimeEuroShort:\r\n    case FieldType.dateTimeEuroShortAmPm:\r\n    case FieldType.dateTimeEuroShortAM_PM:\r\n    case FieldType.dateUs:\r\n    case FieldType.dateUsShort:\r\n    case FieldType.dateTimeShortUs:\r\n    case FieldType.dateTimeUs:\r\n    case FieldType.dateTimeUsAmPm:\r\n    case FieldType.dateTimeUsAM_PM:\r\n    case FieldType.dateTimeUsShort:\r\n    case FieldType.dateTimeUsShortAmPm:\r\n    case FieldType.dateTimeUsShortAM_PM:\r\n      sortResult = getAssociatedDateSorter(fieldType).call(this, value1, value2, sortDirection, sortColumn);\r\n      break;\r\n    case FieldType.object:\r\n      sortResult = Sorters.objectString(value1, value2, sortDirection, sortColumn);\r\n      break;\r\n    case FieldType.string:\r\n    case FieldType.text:\r\n    case FieldType.password:\r\n    case FieldType.readonly:\r\n    default:\r\n      sortResult = Sorters.string(value1, value2, sortDirection, sortColumn);\r\n      break;\r\n  }\r\n\r\n  return sortResult;\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  CollectionFilterBy,\r\n  CollectionSortBy,\r\n  Column,\r\n  FilterMultiplePassType,\r\n  FilterMultiplePassTypeString,\r\n  FieldType,\r\n  OperatorType,\r\n  SortDirectionNumber,\r\n} from './../models/index';\r\nimport { sortByFieldType } from '../sorters/sorterUtilities';\r\nimport { uniqueArray } from './utilities';\r\n\r\n@Injectable()\r\nexport class CollectionService<T = any> {\r\n  constructor(@Optional() private translate: TranslateService) { }\r\n\r\n  /**\r\n   * Filter 1 or more items from a collection\r\n   * @param collection\r\n   * @param filterByOptions\r\n   */\r\n  filterCollection(collection: T[], filterByOptions: CollectionFilterBy | CollectionFilterBy[], filterResultBy: FilterMultiplePassType | FilterMultiplePassTypeString | null = FilterMultiplePassType.chain): T[] {\r\n    let filteredCollection: T[] = [];\r\n\r\n    // when it's array, we will use the new filtered collection after every pass\r\n    // basically if input collection has 10 items on 1st pass and 1 item is filtered out, then on 2nd pass the input collection will be 9 items\r\n    if (Array.isArray(filterByOptions)) {\r\n      filteredCollection = (filterResultBy === FilterMultiplePassType.merge) ? [] : collection;\r\n\r\n      for (const filter of filterByOptions) {\r\n        if (filterResultBy === FilterMultiplePassType.merge) {\r\n          const filteredPass = this.singleFilterCollection(collection, filter);\r\n          filteredCollection = uniqueArray([...filteredCollection, ...filteredPass]);\r\n        } else {\r\n          filteredCollection = this.singleFilterCollection(filteredCollection, filter);\r\n        }\r\n      }\r\n    } else {\r\n      filteredCollection = this.singleFilterCollection(collection, filterByOptions);\r\n    }\r\n\r\n    return filteredCollection;\r\n  }\r\n\r\n  /**\r\n   * Filter an item from a collection\r\n   * @param collection\r\n   * @param filterBy\r\n   */\r\n  singleFilterCollection(collection: T[], filterBy: CollectionFilterBy): T[] {\r\n    let filteredCollection: T[] = [];\r\n\r\n    if (filterBy) {\r\n      const objectProperty = filterBy.property;\r\n      const operator = filterBy.operator || OperatorType.equal;\r\n      // just check for undefined since the filter value could be null, 0, '', false etc\r\n      const value = typeof filterBy.value === 'undefined' ? '' : filterBy.value;\r\n\r\n      switch (operator) {\r\n        case OperatorType.equal:\r\n          if (objectProperty) {\r\n            filteredCollection = collection.filter((item) => item[objectProperty] === value);\r\n          } else {\r\n            filteredCollection = collection.filter((item) => item === value);\r\n          }\r\n          break;\r\n        case OperatorType.contains:\r\n          if (objectProperty) {\r\n            filteredCollection = collection.filter((item) => item[objectProperty].toString().indexOf(value.toString()) !== -1);\r\n          } else {\r\n            filteredCollection = collection.filter((item: any) => (item !== null && item !== undefined) && item.toString().indexOf(value.toString()) !== -1);\r\n          }\r\n          break;\r\n        case OperatorType.notContains:\r\n          if (objectProperty) {\r\n            filteredCollection = collection.filter((item) => item[objectProperty].toString().indexOf(value.toString()) === -1);\r\n          } else {\r\n            filteredCollection = collection.filter((item: any) => (item !== null && item !== undefined) && item.toString().indexOf(value.toString()) === -1);\r\n          }\r\n          break;\r\n        case OperatorType.notEqual:\r\n        default:\r\n          if (objectProperty) {\r\n            filteredCollection = collection.filter((item) => item[objectProperty] !== value);\r\n          } else {\r\n            filteredCollection = collection.filter((item) => item !== value);\r\n          }\r\n      }\r\n    }\r\n\r\n    return filteredCollection;\r\n  }\r\n\r\n  /**\r\n   * Sort 1 or more items in a collection\r\n   * @param column definition\r\n   * @param collection\r\n   * @param sortByOptions\r\n   * @param enableTranslateLabel\r\n   */\r\n  sortCollection(columnDef: Column, collection: T[], sortByOptions: CollectionSortBy | CollectionSortBy[], enableTranslateLabel?: boolean): T[] {\r\n    if (enableTranslateLabel && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    let sortedCollection: T[] = [];\r\n\r\n    if (sortByOptions) {\r\n      if (Array.isArray(sortByOptions)) {\r\n        // multi-sort\r\n        sortedCollection = collection.sort((dataRow1: any, dataRow2: any) => {\r\n          for (let i = 0, l = sortByOptions.length; i < l; i++) {\r\n            const sortBy = sortByOptions[i];\r\n\r\n            if (sortBy && sortBy.property) {\r\n              // collection of objects with a property name provided\r\n              const sortDirection = sortBy.sortDesc ? SortDirectionNumber.desc : SortDirectionNumber.asc;\r\n              const objectProperty = sortBy.property;\r\n              const fieldType = sortBy.fieldType || FieldType.string;\r\n              const value1 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow1[objectProperty] || ' ') : dataRow1[objectProperty];\r\n              const value2 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow2[objectProperty] || ' ') : dataRow2[objectProperty];\r\n\r\n              const sortResult = sortByFieldType(fieldType, value1, value2, sortDirection, columnDef);\r\n              if (sortResult !== SortDirectionNumber.neutral) {\r\n                return sortResult;\r\n              }\r\n            }\r\n          }\r\n          return SortDirectionNumber.neutral;\r\n        });\r\n      } else if (sortByOptions && sortByOptions.property) {\r\n        // single sort\r\n        // collection of objects with a property name provided\r\n        const objectProperty = sortByOptions.property;\r\n        const sortDirection = sortByOptions.sortDesc ? SortDirectionNumber.desc : SortDirectionNumber.asc;\r\n        const fieldType = sortByOptions.fieldType || FieldType.string;\r\n\r\n        if (objectProperty) {\r\n          sortedCollection = collection.sort((dataRow1: any, dataRow2: any) => {\r\n            const value1 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow1[objectProperty] || ' ') : dataRow1[objectProperty];\r\n            const value2 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow2[objectProperty] || ' ') : dataRow2[objectProperty];\r\n            const sortResult = sortByFieldType(fieldType, value1, value2, sortDirection, columnDef);\r\n            if (sortResult !== SortDirectionNumber.neutral) {\r\n              return sortResult;\r\n            }\r\n            return SortDirectionNumber.neutral;\r\n          });\r\n        }\r\n      } else if (sortByOptions && !sortByOptions.property) {\r\n        const sortDirection = sortByOptions.sortDesc ? SortDirectionNumber.desc : SortDirectionNumber.asc;\r\n        const fieldType = sortByOptions.fieldType || FieldType.string;\r\n\r\n        sortedCollection = collection.sort((dataRow1: any, dataRow2: any) => {\r\n          const value1 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow1 || ' ') : dataRow1;\r\n          const value2 = (enableTranslateLabel) ? this.translate && this.translate.currentLang && this.translate.instant(dataRow2 || ' ') : dataRow2;\r\n          const sortResult = sortByFieldType(fieldType, value1, value2, sortDirection, columnDef);\r\n          if (sortResult !== SortDirectionNumber.neutral) {\r\n            return sortResult;\r\n          }\r\n          return SortDirectionNumber.neutral;\r\n        });\r\n      }\r\n    }\r\n\r\n    return sortedCollection;\r\n  }\r\n}\r\n","import { Locale } from './models/locale.interface';\r\n\r\nexport class Constants {\r\n  // English Locale texts when using only 1 Locale instead of I18N\r\n  static readonly locales: Locale = {\r\n    TEXT_ALL_SELECTED: 'All Selected',\r\n    TEXT_CANCEL: 'Cancel',\r\n    TEXT_CLEAR_ALL_FILTERS: 'Clear all Filters',\r\n    TEXT_CLEAR_ALL_GROUPING: 'Clear all Grouping',\r\n    TEXT_CLEAR_ALL_SORTING: 'Clear all Sorting',\r\n    TEXT_CLEAR_FROZEN_COLUMNS: 'Clear Frozen Columns',\r\n    TEXT_COLLAPSE_ALL_GROUPS: 'Collapse all Groups',\r\n    TEXT_CONTAINS: 'Contains',\r\n    TEXT_COLUMNS: 'Columns',\r\n    TEXT_COMMANDS: 'Commands',\r\n    TEXT_COPY: 'Copy',\r\n    TEXT_EQUALS: 'Equals',\r\n    TEXT_EQUAL_TO: 'Equal to',\r\n    TEXT_ENDS_WITH: 'Ends With',\r\n    TEXT_EXPAND_ALL_GROUPS: 'Expand all Groups',\r\n    TEXT_EXPORT_TO_CSV: 'Export in CSV format',\r\n    TEXT_EXPORT_TO_TEXT_FORMAT: 'Export in Text format (Tab delimited)',\r\n    TEXT_EXPORT_TO_EXCEL: 'Export to Excel',\r\n    TEXT_FORCE_FIT_COLUMNS: 'Force fit columns',\r\n    TEXT_FREEZE_COLUMNS: 'Freeze Columns',\r\n    TEXT_GREATER_THAN: 'Greater than',\r\n    TEXT_GREATER_THAN_OR_EQUAL_TO: 'Greater than or equal to',\r\n    TEXT_GROUP_BY: 'Group By',\r\n    TEXT_HIDE_COLUMN: 'Hide Column',\r\n    TEXT_ITEMS: 'items',\r\n    TEXT_ITEMS_PER_PAGE: 'items per page',\r\n    TEXT_OF: 'of',\r\n    TEXT_OK: 'OK',\r\n    TEXT_LAST_UPDATE: 'Last Update',\r\n    TEXT_LESS_THAN: 'Less than',\r\n    TEXT_LESS_THAN_OR_EQUAL_TO: 'Less than or equal to',\r\n    TEXT_NOT_EQUAL_TO: 'Not equal to',\r\n    TEXT_PAGE: 'Page',\r\n    TEXT_REFRESH_DATASET: 'Refresh Dataset',\r\n    TEXT_REMOVE_FILTER: 'Remove Filter',\r\n    TEXT_REMOVE_SORT: 'Remove Sort',\r\n    TEXT_SAVE: 'Save',\r\n    TEXT_SELECT_ALL: 'Select All',\r\n    TEXT_SYNCHRONOUS_RESIZE: 'Synchronous resize',\r\n    TEXT_SORT_ASCENDING: 'Sort Ascending',\r\n    TEXT_SORT_DESCENDING: 'Sort Descending',\r\n    TEXT_STARTS_WITH: 'Starts With',\r\n    TEXT_TOGGLE_FILTER_ROW: 'Toggle Filter Row',\r\n    TEXT_TOGGLE_PRE_HEADER_ROW: 'Toggle Pre-Header Row',\r\n    TEXT_X_OF_Y_SELECTED: '# of % selected',\r\n  };\r\n\r\n  // some Validation default texts\r\n  static readonly VALIDATION_REQUIRED_FIELD = 'Field is required';\r\n  static readonly VALIDATION_EDITOR_VALID_NUMBER = 'Please enter a valid number';\r\n  static readonly VALIDATION_EDITOR_VALID_INTEGER = 'Please enter a valid integer number';\r\n  static readonly VALIDATION_EDITOR_INTEGER_BETWEEN = 'Please enter a valid integer number between {{minValue}} and {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_INTEGER_MAX = 'Please enter a valid integer number that is lower than {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_INTEGER_MAX_INCLUSIVE = 'Please enter a valid integer number that is lower than or equal to {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_INTEGER_MIN = 'Please enter a valid integer number that is greater than {{minValue}}';\r\n  static readonly VALIDATION_EDITOR_INTEGER_MIN_INCLUSIVE = 'Please enter a valid integer number that is greater than or equal to {{minValue}}';\r\n  static readonly VALIDATION_EDITOR_NUMBER_BETWEEN = 'Please enter a valid number between {{minValue}} and {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_NUMBER_MAX = 'Please enter a valid number that is lower than {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_NUMBER_MAX_INCLUSIVE = 'Please enter a valid number that is lower than or equal to {{maxValue}}';\r\n  static readonly VALIDATION_EDITOR_NUMBER_MIN = 'Please enter a valid number that is greater than {{minValue}}';\r\n  static readonly VALIDATION_EDITOR_NUMBER_MIN_INCLUSIVE = 'Please enter a valid number that is greater than or equal to {{minValue}}';\r\n  static readonly VALIDATION_EDITOR_DECIMAL_BETWEEN = 'Please enter a valid number with a maximum of {{maxDecimal}} decimals';\r\n  static readonly VALIDATION_EDITOR_TEXT_LENGTH_BETWEEN = 'Please make sure your text length is between {{minLength}} and {{maxLength}} characters';\r\n  static readonly VALIDATION_EDITOR_TEXT_MAX_LENGTH = 'Please make sure your text is less than {{maxLength}} characters';\r\n  static readonly VALIDATION_EDITOR_TEXT_MAX_LENGTH_INCLUSIVE = 'Please make sure your text is less than or equal to {{maxLength}} characters';\r\n  static readonly VALIDATION_EDITOR_TEXT_MIN_LENGTH = 'Please make sure your text is more than {{minLength}} character(s)';\r\n  static readonly VALIDATION_EDITOR_TEXT_MIN_LENGTH_INCLUSIVE = 'Please make sure your text is at least {{minLength}} character(s)';\r\n}\r\n","import { Column, ExportOption, ExcelExportOption, Formatter } from '../models/index';\r\n\r\nexport function exportWithFormatterWhenDefined(row: number, col: number, dataContext: any, columnDef: Column, grid: any, exportOptions?: ExportOption | ExcelExportOption) {\r\n  let output = '';\r\n  let isEvaluatingFormatter = false;\r\n\r\n  // first check if there are any export options provided (as Grid Options)\r\n  if (exportOptions && exportOptions.hasOwnProperty('exportWithFormatter')) {\r\n    isEvaluatingFormatter = !!exportOptions.exportWithFormatter;\r\n  }\r\n\r\n  // second check if \"exportWithFormatter\" is provided in the column definition, if so it will have precendence over the Grid Options exportOptions\r\n  if (columnDef && columnDef.hasOwnProperty('exportWithFormatter')) {\r\n    isEvaluatingFormatter = !!columnDef.exportWithFormatter;\r\n  }\r\n\r\n  // did the user provide a Custom Formatter for the export\r\n  const exportCustomFormatter: Formatter | undefined = (columnDef.exportCustomFormatter !== undefined) ? columnDef.exportCustomFormatter : undefined;\r\n\r\n  // does the field have the dot (.) notation and is a complex object? if so pull the first property name\r\n  const fieldId = columnDef.field || columnDef.id || '';\r\n  let fieldProperty = fieldId;\r\n  if (typeof columnDef.field === 'string' && columnDef.field.indexOf('.') > 0) {\r\n    const props = columnDef.field.split('.');\r\n    fieldProperty = (props.length > 0) ? props[0] : columnDef.field;\r\n  }\r\n\r\n  const cellValue = dataContext.hasOwnProperty(fieldProperty) ? dataContext[fieldProperty] : null;\r\n\r\n  if (dataContext && exportCustomFormatter !== undefined) {\r\n    const formattedData = exportCustomFormatter(row, col, cellValue, columnDef, dataContext, grid);\r\n    output = formattedData as string;\r\n    if (formattedData && typeof formattedData === 'object' && formattedData.hasOwnProperty('text')) {\r\n      output = formattedData.text;\r\n    }\r\n    if (output === null || output === undefined) {\r\n      output = '';\r\n    }\r\n  } else if (isEvaluatingFormatter && columnDef.formatter) {\r\n    const formattedData = columnDef.formatter(row, col, cellValue, columnDef, dataContext, grid);\r\n    output = formattedData as string;\r\n    if (formattedData && typeof formattedData === 'object' && formattedData.hasOwnProperty('text')) {\r\n      output = formattedData.text;\r\n    }\r\n    if (output === null || output === undefined) {\r\n      output = '';\r\n    }\r\n  } else {\r\n    output = (!dataContext.hasOwnProperty(fieldProperty)) ? '' : cellValue;\r\n    if (output === null || output === undefined) {\r\n      output = '';\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as ExcelBuilder from 'excel-builder-webpacker';\nimport { Subject } from 'rxjs';\nimport * as moment_ from 'moment-mini';\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\n\nimport { ExcelWorkbook } from './../models/excelWorkbook.interface';\nimport { ExcelStylesheet } from './../models/excelStylesheet.interface';\nimport {\n  Column,\n  ExcelCellFormat,\n  ExcelExportOption,\n  ExcelMetadata,\n  FileType,\n  GridOption,\n  KeyTitlePair,\n  Locale,\n  FieldType,\n  ExcelWorksheet,\n} from '../models/index';\nimport { Constants } from '../constants';\nimport { exportWithFormatterWhenDefined } from './export-utilities';\nimport { addWhiteSpaces, getTranslationPrefix, mapMomentDateFormatWithFieldType, sanitizeHtmlToText, titleCase } from './utilities';\n\n// using external non-typed js libraries\ndeclare let $: any;\n\n@Injectable()\nexport class ExcelExportService {\n  private _fileFormat = FileType.xlsx;\n  private _dataView: any;\n  private _grid: any;\n  private _locales: Locale;\n  private _columnHeaders: Array<KeyTitlePair>;\n  private _groupedColumnHeaders: Array<KeyTitlePair>;\n  private _hasGroupedItems = false;\n  private _excelExportOptions: ExcelExportOption;\n  private _sheet: ExcelWorksheet;\n  private _stylesheet: ExcelStylesheet;\n  private _stylesheetFormats: any;\n  private _workbook: ExcelWorkbook;\n  onGridBeforeExportToExcel = new Subject<boolean>();\n  onGridAfterExportToExcel = new Subject<{ blob?: Blob; filename: string; format?: string; }>();\n\n  constructor(@Optional() private translate: TranslateService) { }\n\n  private get datasetIdName(): string {\n    return this._gridOptions && this._gridOptions.datasetIdPropertyName || 'id';\n  }\n\n  /** Getter for the Grid Options pulled through the Grid Object */\n  private get _gridOptions(): GridOption {\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\n  }\n\n  /**\n   * Initialize the Export Service\n   * @param grid\n   * @param dataView\n   */\n  init(grid: any, dataView: any): void {\n    this._grid = grid;\n    this._dataView = dataView;\n\n    // get locales provided by user in forRoot or else use default English locales via the Constants\n    this._locales = this._gridOptions && this._gridOptions.locales || Constants.locales;\n\n    if (this._gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\n    }\n  }\n\n  /**\n   * Function to export the Grid result to an Excel CSV format using javascript for it to produce the CSV file.\n   * This is a WYSIWYG export to file output (What You See is What You Get)\n   *\n   * NOTES: The column position needs to match perfectly the JSON Object position because of the way we are pulling the data,\n   * which means that if any column(s) got moved in the UI, it has to be reflected in the JSON array output as well\n   *\n   * Example: exportToExcel({ format: FileType.csv, delimiter: DelimiterType.comma })\n   */\n  exportToExcel(options: ExcelExportOption): Promise<boolean> {\n    if (!this._grid || !this._dataView) {\n      throw new Error('[Angular-Slickgrid] it seems that the SlickGrid & DataView objects are not initialized did you forget to enable the grid option flag \"enableExcelExport\"?');\n    }\n\n    return new Promise((resolve, reject) => {\n      this.onGridBeforeExportToExcel.next(true);\n      this._excelExportOptions = $.extend(true, {}, this._gridOptions.excelExportOptions, options);\n      this._fileFormat = this._excelExportOptions.format || FileType.xlsx;\n\n      // prepare the Excel Workbook & Sheet\n      this._workbook = new ExcelBuilder.Workbook();\n      this._sheet = new ExcelBuilder.Worksheet({ name: this._excelExportOptions.sheetName || 'Sheet1' });\n\n      // add any Excel Format/Stylesheet to current Workbook\n      this._stylesheet = this._workbook.getStyleSheet();\n      const boldFormatter = this._stylesheet.createFormat({ font: { bold: true } });\n      const stringFormatter = this._stylesheet.createFormat({ format: '@' });\n      const numberFormatter = this._stylesheet.createFormat({ format: '0' });\n      const usdFormatter = this._stylesheet.createFormat({ format: '$#,##0.00' });\n      this._stylesheetFormats = {\n        boldFormatter,\n        dollarFormatter: usdFormatter,\n        numberFormatter,\n        stringFormatter,\n      };\n\n      // get the CSV output from the grid data\n      const dataOutput = this.getDataOutput();\n\n      // trigger a download file\n      // wrap it into a setTimeout so that the EventAggregator has enough time to start a pre-process like showing a spinner\n      setTimeout(async () => {\n        try {\n          if (this._gridOptions && this._gridOptions.excelExportOptions && this._gridOptions.excelExportOptions.customExcelHeader) {\n            this._gridOptions.excelExportOptions.customExcelHeader(this._workbook, this._sheet);\n          }\n\n          const columns = this._grid && this._grid.getColumns && this._grid.getColumns() || [];\n          this._sheet.setColumns(this.getColumnStyles(columns));\n\n          const currentSheetData = this._sheet.data;\n          let finalOutput = currentSheetData;\n          if (Array.isArray(currentSheetData) && Array.isArray(dataOutput)) {\n            finalOutput = this._sheet.data.concat(dataOutput);\n          }\n\n          this._sheet.setData(finalOutput);\n          this._workbook.addWorksheet(this._sheet);\n\n          const mimeType = this._fileFormat === FileType.xls ? 'application/vnd.ms-excel' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet ';\n          const excelBlob = await ExcelBuilder.Builder.createFile(this._workbook, { type: 'blob', mimeType });\n          const downloadOptions = {\n            filename: `${this._excelExportOptions.filename}.${this._fileFormat}`,\n            format: this._fileFormat\n          };\n\n          // start downloading but add the Blob property only on the start download not on the event itself\n          this.startDownloadFile({ ...downloadOptions, blob: excelBlob, data: this._sheet.data });\n          this.onGridAfterExportToExcel.next(downloadOptions);\n          resolve(true);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n\n  /**\n   * Triggers download file with file format.\n   * IE(6-10) are not supported\n   * All other browsers will use plain javascript on client side to produce a file download.\n   * @param options\n   */\n  startDownloadFile(options: { filename: string, blob: Blob, data: any[] }) {\n    // IE(6-10) don't support javascript download and our service doesn't support either so throw an error, we have to make a round trip to the Web Server for exporting\n    if (navigator.appName === 'Microsoft Internet Explorer') {\n      throw new Error('Microsoft Internet Explorer 6 to 10 do not support javascript export to Excel. Please upgrade your browser.');\n    }\n\n    // when using IE/Edge, then use different download call\n    if (typeof navigator.msSaveOrOpenBlob === 'function') {\n      navigator.msSaveOrOpenBlob(options.blob, options.filename);\n    } else {\n      // this trick will generate a temp <a /> tag\n      // the code will then trigger a hidden click for it to start downloading\n      const link = document && document.createElement('a');\n      const url = URL.createObjectURL(options.blob);\n\n      if (link && document) {\n        link.textContent = 'download';\n        link.href = url;\n        link.setAttribute('download', options.filename);\n\n        // set the visibility to hidden so there is no effect on your web-layout\n        link.style.visibility = 'hidden';\n\n        // this part will append the anchor tag, trigger a click (for download to start) and finally remove the tag once completed\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  }\n\n  /** use different Excel Stylesheet Format as per the Field Type */\n  useCellFormatByFieldType(data: string | Date | moment_.Moment, fieldType: FieldType): ExcelCellFormat | string {\n    let outputData: ExcelCellFormat | string | Date | moment_.Moment = data;\n    switch (fieldType) {\n      case FieldType.dateTime:\n      case FieldType.dateTimeIso:\n      case FieldType.dateTimeShortIso:\n      case FieldType.dateTimeIsoAmPm:\n      case FieldType.dateTimeIsoAM_PM:\n      case FieldType.dateEuro:\n      case FieldType.dateEuroShort:\n      case FieldType.dateTimeEuro:\n      case FieldType.dateTimeShortEuro:\n      case FieldType.dateTimeEuroAmPm:\n      case FieldType.dateTimeEuroAM_PM:\n      case FieldType.dateTimeEuroShort:\n      case FieldType.dateTimeEuroShortAmPm:\n      case FieldType.dateUs:\n      case FieldType.dateUsShort:\n      case FieldType.dateTimeUs:\n      case FieldType.dateTimeShortUs:\n      case FieldType.dateTimeUsAmPm:\n      case FieldType.dateTimeUsAM_PM:\n      case FieldType.dateTimeUsShort:\n      case FieldType.dateTimeUsShortAmPm:\n      case FieldType.dateUtc:\n      case FieldType.date:\n      case FieldType.dateIso:\n        outputData = data;\n        if (data) {\n          const defaultDateFormat = mapMomentDateFormatWithFieldType(fieldType);\n          const isDateValid = moment(data as string, defaultDateFormat, false).isValid();\n          const outputDate = (data && isDateValid) ? moment(data as string).format(defaultDateFormat) : data;\n          const dateFormatter = this._stylesheet.createFormat({ format: defaultDateFormat });\n          outputData = { value: outputDate, metadata: { style: dateFormatter.id } };\n        }\n        break;\n      case FieldType.number:\n        const val = isNaN(+data) ? null : data;\n        outputData = { value: val, metadata: { style: this._stylesheetFormats.numberFormatter.id } };\n        break;\n      default:\n        outputData = data;\n    }\n    return outputData as string;\n  }\n\n  // -----------------------\n  // Private functions\n  // -----------------------\n\n  private getDataOutput(): string[][] | ExcelCellFormat[][] {\n    const columns = this._grid && this._grid.getColumns && this._grid.getColumns() || [];\n\n    // data variable which will hold all the fields data of a row\n    const outputData = [];\n    const columnHeaderStyle = this._gridOptions && this._gridOptions.excelExportOptions && this._gridOptions.excelExportOptions.columnHeaderStyle;\n    let columnHeaderStyleId = this._stylesheetFormats.boldFormatter.id;\n    if (columnHeaderStyle) {\n      columnHeaderStyleId = this._stylesheet.createFormat(columnHeaderStyle).id;\n    }\n\n    // get all Grouped Column Header Titles when defined (from pre-header row)\n    if (this._gridOptions.createPreHeaderPanel && this._gridOptions.showPreHeaderPanel && !this._gridOptions.enableDraggableGrouping) {\n      // when having Grouped Header Titles (in the pre-header), then make the cell Bold & Aligned Center\n      const boldCenterAlign = this._stylesheet.createFormat({ alignment: { horizontal: 'center' }, font: { bold: true } });\n      outputData.push(this.getColumnGroupedHeaderTitlesData(columns, { style: boldCenterAlign && boldCenterAlign.id }));\n    }\n\n    // get all Column Header Titles (it might include a \"Group by\" title at A1 cell)\n    // also style the headers, defaults to Bold but user could pass his own style\n    outputData.push(this.getColumnHeaderData(columns, { style: columnHeaderStyleId }));\n\n    // Populate the rest of the Grid Data\n    this.pushAllGridRowDataToArray(outputData, columns);\n\n    return outputData;\n  }\n\n  /** Get each column style including a style for the width of each column */\n  private getColumnStyles(columns: Column[]): any[] {\n    const grouping = this._dataView && this._dataView.getGrouping && this._dataView.getGrouping();\n    const columnStyles = [];\n    if (grouping) {\n      columnStyles.push({\n        bestFit: true,\n        columnStyles: (this._gridOptions && this._gridOptions.excelExportOptions && this._gridOptions.excelExportOptions.customColumnWidth) || 10\n      });\n    }\n\n    columns.forEach((columnDef: Column) => {\n      const skippedField = columnDef.excludeFromExport || false;\n      // if column width is 0, then we consider that field as a hidden field and should not be part of the export\n      if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n        columnStyles.push({\n          bestFit: true,\n          width: columnDef.exportColumnWidth || (this._gridOptions && this._gridOptions.excelExportOptions && this._gridOptions.excelExportOptions.customColumnWidth) || 10\n        });\n      }\n    });\n    return columnStyles;\n  }\n\n  /**\n   * Get all Grouped Header Titles and their keys, translate the title when required, and format them in Bold\n   * @param {Array<object>} columns of the grid\n   */\n  private getColumnGroupedHeaderTitlesData(columns: Column[], metadata: ExcelMetadata): Array<ExcelCellFormat> {\n    let outputGroupedHeaderTitles: Array<ExcelCellFormat> = [];\n\n    // get all Column Header Titles\n    this._groupedColumnHeaders = this.getColumnGroupedHeaderTitles(columns) || [];\n    if (this._groupedColumnHeaders && Array.isArray(this._groupedColumnHeaders) && this._groupedColumnHeaders.length > 0) {\n      // add the header row + add a new line at the end of the row\n      outputGroupedHeaderTitles = this._groupedColumnHeaders.map((header) => ({ value: header.title, metadata }));\n    }\n\n    // merge necessary cells (any grouped header titles)\n    // dealing with the Excel column position is a bit tricky since the first 26 columns are single char (A,B,...) but after that it becomes double char (AA,AB,...)\n    // so we must first see if we are in the first section of 26 chars, if that is the case we just concatenate 1 (1st row) so it becomes (A1, B1, ...)\n    // but if we are over enumarating passed 26, we need an extra prefix (AA1, AB1, ...)\n    const charA = 'A'.charCodeAt(0);\n    let cellPositionStart = 'A';\n    let cellPositionEnd = '';\n    let lastIndex = 0;\n    const headersLn = this._groupedColumnHeaders.length;\n    for (let cellIndex = 0; cellIndex < headersLn; cellIndex++) {\n      // if we reached the last indenx, we are considered at the end\n      // else we check if next title is equal to current title, if so then we know it's a grouped header\n      // and we include it and continue looping until we reach the end\n      if ((cellIndex + 1) === headersLn || ((cellIndex + 1) < headersLn && this._groupedColumnHeaders[cellIndex].title !== this._groupedColumnHeaders[cellIndex + 1].title)) {\n        // calculate left prefix, divide by 26 and use modulo to find out what number add to A\n        // for example if we have cell index 54, we will do ((54/26) %26) => 2.0769, Math.floor is 2, then we do A which is 65 + 2 gives us B so final cell will be AB1\n        const leftCellCharCodePrefix = Math.floor((lastIndex / 26) % 26);\n        const leftCellCharacterPrefix = String.fromCharCode(charA + leftCellCharCodePrefix - 1);\n\n        const rightCellCharCodePrefix = Math.floor((cellIndex / 26) % 26);\n        const rightCellCharacterPrefix = String.fromCharCode(charA + rightCellCharCodePrefix - 1);\n\n        cellPositionEnd = String.fromCharCode(charA + (cellIndex % 26));\n        const leftCell = `${lastIndex > 26 ? leftCellCharacterPrefix : ''}${cellPositionStart}1`;\n        const rightCell = `${cellIndex > 26 ? rightCellCharacterPrefix : ''}${cellPositionEnd}1`;\n        this._sheet.mergeCells(leftCell, rightCell);\n\n        cellPositionStart = String.fromCharCode(cellPositionEnd.charCodeAt(0) + 1);\n        lastIndex = cellIndex;\n      }\n    }\n\n    return outputGroupedHeaderTitles;\n  }\n\n  /** Get all column headers and format them in Bold */\n  private getColumnHeaderData(columns: Column[], metadata: ExcelMetadata): Array<string | ExcelCellFormat> {\n    let outputHeaderTitles: ExcelCellFormat[] = [];\n\n    // get all Column Header Titles\n    this._columnHeaders = this.getColumnHeaders(columns) || [];\n    if (this._columnHeaders && Array.isArray(this._columnHeaders) && this._columnHeaders.length > 0) {\n      // add the header row + add a new line at the end of the row\n      outputHeaderTitles = this._columnHeaders.map((header) => ({ value: header.title, metadata }));\n    }\n\n    // do we have a Group by title?\n    const groupTitle = this.getGroupColumnTitle();\n    if (groupTitle) {\n      outputHeaderTitles.unshift({ value: groupTitle, metadata });\n    }\n\n    return outputHeaderTitles;\n  }\n\n  private getGroupColumnTitle(): string | null {\n    // Group By text, it could be set in the export options or from translation or if nothing is found then use the English constant text\n    let groupByColumnHeader = this._excelExportOptions.groupingColumnHeaderTitle;\n    if (!groupByColumnHeader && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n      groupByColumnHeader = this.translate.instant(`${getTranslationPrefix(this._gridOptions)}GROUP_BY`);\n    } else if (!groupByColumnHeader) {\n      groupByColumnHeader = this._locales && this._locales.TEXT_GROUP_BY;\n    }\n\n    // get grouped column titles and if found, we will add a \"Group by\" column at the first column index\n    // if it's a CSV format, we'll escape the text in double quotes\n    const grouping = this._dataView && this._dataView.getGrouping && this._dataView.getGrouping();\n    if (grouping && Array.isArray(grouping) && grouping.length > 0) {\n      this._hasGroupedItems = true;\n      return groupByColumnHeader;\n    } else {\n      this._hasGroupedItems = false;\n    }\n    return null;\n  }\n\n  /**\n   * Get all Grouped Header Titles and their keys, translate the title when required.\n   * @param {Array<object>} columns of the grid\n   */\n  private getColumnGroupedHeaderTitles(columns: Column[]): Array<KeyTitlePair> {\n    const groupedColumnHeaders: Array<KeyTitlePair> = [];\n\n    if (columns && Array.isArray(columns)) {\n      // Populate the Grouped Column Header, pull the columnGroup(Key) defined\n      columns.forEach((columnDef: Column) => {\n        let groupedHeaderTitle = '';\n        if (columnDef.columnGroupKey && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n          groupedHeaderTitle = this.translate.instant(columnDef.columnGroupKey);\n        } else {\n          groupedHeaderTitle = columnDef.columnGroup;\n        }\n        const skippedField = columnDef.excludeFromExport || false;\n\n        // if column width is 0px, then we consider that field as a hidden field and should not be part of the export\n        if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n          groupedColumnHeaders.push({\n            key: (columnDef.field || columnDef.id) as string,\n            title: groupedHeaderTitle || '',\n          });\n        }\n      });\n    }\n    return groupedColumnHeaders;\n  }\n\n  /**\n   * Get all header titles and their keys, translate the title when required.\n   * @param columns of the grid\n   */\n  private getColumnHeaders(columns: Column[]): Array<KeyTitlePair> {\n    const columnHeaders = [];\n\n    if (columns && Array.isArray(columns)) {\n      // Populate the Column Header, pull the name defined\n      columns.forEach((columnDef) => {\n        let headerTitle = '';\n        if ((columnDef.headerKey || columnDef.nameKey) && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n          headerTitle = this.translate.instant((columnDef.headerKey || columnDef.nameKey));\n        } else {\n          headerTitle = columnDef.name || titleCase(columnDef.field);\n        }\n        const skippedField = columnDef.excludeFromExport || false;\n\n        // if column width is 0, then we consider that field as a hidden field and should not be part of the export\n        if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n          columnHeaders.push({\n            key: columnDef.field || columnDef.id,\n            title: headerTitle\n          });\n        }\n      });\n    }\n    return columnHeaders;\n  }\n\n  /**\n   * Get all the grid row data and return that as an output string\n   */\n  private pushAllGridRowDataToArray(originalDaraArray: string[][], columns: Column[]): string[][] | ExcelCellFormat[][] {\n    const lineCount = this._dataView && this._dataView.getLength && this._dataView.getLength();\n\n    // loop through all the grid rows of data\n    for (let rowNumber = 0; rowNumber < lineCount; rowNumber++) {\n      const itemObj = this._dataView.getItem(rowNumber);\n      if (itemObj) {\n        // Normal row (not grouped by anything) would have an ID which was predefined in the Grid Columns definition\n        if (itemObj[this.datasetIdName] !== null && itemObj[this.datasetIdName] !== undefined) {\n          // get regular row item data\n          originalDaraArray.push(this.readRegularRowData(columns, rowNumber, itemObj));\n        } else if (this._hasGroupedItems && itemObj.__groupTotals === undefined) {\n          // get the group row\n          originalDaraArray.push([this.readGroupedTitleRow(itemObj)]);\n        } else if (itemObj.__groupTotals) {\n          // else if the row is a Group By and we have agreggators, then a property of '__groupTotals' would exist under that object\n          originalDaraArray.push(this.readGroupedTotalRow(columns, itemObj));\n        }\n      }\n    }\n    return originalDaraArray;\n  }\n\n  /**\n   * Get the data of a regular row (a row without grouping)\n   * @param row\n   * @param itemObj\n   */\n  private readRegularRowData(columns: Column[], row: number, itemObj: any): string[] {\n    let idx = 0;\n    const rowOutputStrings = [];\n\n    for (let col = 0, ln = columns.length; col < ln; col++) {\n      const columnDef = columns[col];\n      const fieldType = columnDef.outputType || columnDef.type || FieldType.string;\n\n      // skip excluded column\n      if (columnDef.excludeFromExport) {\n        continue;\n      }\n\n      // if we are grouping and are on 1st column index, we need to skip this column since it will be used later by the grouping text:: Group by [columnX]\n      if (this._hasGroupedItems && idx === 0) {\n        rowOutputStrings.push('');\n      }\n\n      // get the output by analyzing if we'll pull the value from the cell or from a formatter\n      let itemData: ExcelCellFormat | string = exportWithFormatterWhenDefined(row, col, itemObj, columnDef, this._grid, this._excelExportOptions);\n\n      // does the user want to sanitize the output data (remove HTML tags)?\n      if (columnDef.sanitizeDataExport || this._excelExportOptions.sanitizeDataExport) {\n        itemData = sanitizeHtmlToText(itemData as string);\n      }\n\n      // use different Excel Stylesheet Format as per the Field Type\n      if (!columnDef.exportWithFormatter) {\n        itemData = this.useCellFormatByFieldType(itemData as string, fieldType);\n      }\n\n      rowOutputStrings.push(itemData);\n      idx++;\n    }\n\n    return rowOutputStrings;\n  }\n\n  /**\n   * Get the grouped title(s) and its group title formatter, for example if we grouped by salesRep, the returned result would be:: 'Sales Rep: John Dow (2 items)'\n   * @param itemObj\n   */\n  private readGroupedTitleRow(itemObj: any): string {\n    const groupName = sanitizeHtmlToText(itemObj.title);\n\n    if (this._excelExportOptions && this._excelExportOptions.addGroupIndentation) {\n      const collapsedSymbol = this._excelExportOptions && this._excelExportOptions.groupCollapsedSymbol || '\\u25B9';\n      const expandedSymbol = this._excelExportOptions && this._excelExportOptions.groupExpandedSymbol || '\\u25BF';\n      const chevron = itemObj.collapsed ? collapsedSymbol : expandedSymbol;\n      return chevron + ' ' + addWhiteSpaces(5 * itemObj.level) + groupName;\n    }\n    return groupName;\n  }\n\n  /**\n   * Get the grouped totals (below the regular rows), these are set by Slick Aggregators.\n   * For example if we grouped by \"salesRep\" and we have a Sum Aggregator on \"sales\", then the returned output would be:: [\"Sum 123$\"]\n   * @param itemObj\n   */\n  private readGroupedTotalRow(columns: Column[], itemObj: any): string[] {\n    const groupingAggregatorRowText = this._excelExportOptions.groupingAggregatorRowText || '';\n    const outputStrings = [groupingAggregatorRowText];\n\n    columns.forEach((columnDef) => {\n      let itemData = '';\n\n      const skippedField = columnDef.excludeFromExport || false;\n\n      // if there's a exportCustomGroupTotalsFormatter or groupTotalsFormatter, we will re-run it to get the exact same output as what is shown in UI\n      if (columnDef.exportCustomGroupTotalsFormatter) {\n        itemData = columnDef.exportCustomGroupTotalsFormatter(itemObj, columnDef);\n      } else {\n        if (columnDef.groupTotalsFormatter) {\n          itemData = columnDef.groupTotalsFormatter(itemObj, columnDef);\n        }\n      }\n\n      // does the user want to sanitize the output data (remove HTML tags)?\n      if (columnDef.sanitizeDataExport || this._excelExportOptions.sanitizeDataExport) {\n        itemData = sanitizeHtmlToText(itemData);\n      }\n\n      // add the column (unless user wants to skip it)\n      if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n        outputStrings.push(itemData);\n      }\n    });\n\n    return outputStrings;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { TextEncoder } from 'text-encoding-utf-8';\nimport { Subject } from 'rxjs';\n\nimport {\n  Column,\n  ExportOption,\n  FileType,\n  GridOption,\n  KeyTitlePair,\n  Locale,\n} from './../models/index';\nimport { Constants } from './../constants';\nimport { exportWithFormatterWhenDefined } from './export-utilities';\nimport { addWhiteSpaces, getTranslationPrefix, htmlEntityDecode, sanitizeHtmlToText, titleCase } from './../services/utilities';\n\n// using external non-typed js libraries\ndeclare let $: any;\n\n@Injectable()\nexport class ExportService {\n  private _delimiter = ',';\n  private _fileFormat = FileType.csv;\n  private _lineCarriageReturn = '\\n';\n  private _dataView: any;\n  private _grid: any;\n  private _locales: Locale;\n  private _exportQuoteWrapper = '';\n  private _columnHeaders: KeyTitlePair[];\n  private _groupedColumnHeaders: KeyTitlePair[];\n  private _hasGroupedItems = false;\n  private _exportOptions: ExportOption;\n  onGridBeforeExportToFile = new Subject<boolean>();\n  onGridAfterExportToFile = new Subject<{ content?: string; filename: string; format: string; useUtf8WithBom: boolean; }>();\n\n  constructor(@Optional() private translate: TranslateService) { }\n\n  private get datasetIdName(): string {\n    return this._gridOptions && this._gridOptions.datasetIdPropertyName || 'id';\n  }\n\n  /** Getter for the Grid Options pulled through the Grid Object */\n  private get _gridOptions(): GridOption {\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\n  }\n\n  /**\n   * Initialize the Export Service\n   * @param grid\n   * @param gridOptions\n   * @param dataView\n   */\n  init(grid: any, dataView: any): void {\n    this._grid = grid;\n    this._dataView = dataView;\n\n    // get locales provided by user in forRoot or else use default English locales via the Constants\n    this._locales = this._gridOptions && this._gridOptions.locales || Constants.locales;\n\n    if (this._gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\n    }\n  }\n\n  /**\n   * Function to export the Grid result to an Excel CSV format using javascript for it to produce the CSV file.\n   * This is a WYSIWYG export to file output (What You See is What You Get)\n   *\n   * NOTES: The column position needs to match perfectly the JSON Object position because of the way we are pulling the data,\n   * which means that if any column(s) got moved in the UI, it has to be reflected in the JSON array output as well\n   *\n   * Example: exportToFile({ format: FileType.csv, delimiter: DelimiterType.comma })\n   */\n  exportToFile(options: ExportOption): Promise<boolean> {\n    if (!this._grid || !this._dataView) {\n      throw new Error('[Angular-Slickgrid] it seems that the SlickGrid & DataView objects are not initialized did you forget to enable the grid option flag \"enableExcelExport\"?');\n    }\n\n    return new Promise((resolve, reject) => {\n      this.onGridBeforeExportToFile.next(true);\n      this._exportOptions = $.extend(true, {}, this._gridOptions.exportOptions, options);\n      this._delimiter = this._exportOptions.delimiterOverride || this._exportOptions.delimiter || '';\n      this._fileFormat = this._exportOptions.format || FileType.csv;\n\n      // get the CSV output from the grid data\n      const dataOutput = this.getDataOutput();\n\n      // trigger a download file\n      // wrap it into a setTimeout so that the EventAggregator has enough time to start a pre-process like showing a spinner\n      setTimeout(() => {\n        try {\n          const downloadOptions = {\n            filename: `${this._exportOptions.filename}.${this._fileFormat}`,\n            format: this._fileFormat,\n            useUtf8WithBom: this._exportOptions.hasOwnProperty('useUtf8WithBom') ? this._exportOptions.useUtf8WithBom : true\n          };\n\n          // start downloading but add the content property only on the start download not on the event itself\n          this.startDownloadFile({ ...downloadOptions, content: dataOutput }); // add content property\n          this.onGridAfterExportToFile.next(downloadOptions);\n          resolve(true);\n        } catch (error) {\n          reject(error);\n        }\n      }, 0);\n    });\n  }\n\n  /**\n   * Triggers download file with file format.\n   * IE(6-10) are not supported\n   * All other browsers will use plain javascript on client side to produce a file download.\n   * @param options\n   */\n  startDownloadFile(options: { filename: string, content: string, format: FileType | string, useUtf8WithBom: boolean }) {\n    // IE(6-10) don't support javascript download and our service doesn't support either so throw an error, we have to make a round trip to the Web Server for exporting\n    if (navigator.appName === 'Microsoft Internet Explorer') {\n      throw new Error('Microsoft Internet Explorer 6 to 10 do not support javascript export to CSV. Please upgrade your browser.');\n    }\n\n    // set the correct MIME type\n    const mimeType = (options.format === FileType.csv) ? 'text/csv' : 'text/plain';\n\n    // make sure no html entities exist in the data\n    const dataContent = htmlEntityDecode(options.content);\n\n    // dealing with Excel CSV export and UTF-8 is a little tricky.. We will use Option #2 to cover older Excel versions\n    // Option #1: we need to make Excel knowing that it's dealing with an UTF-8, A correctly formatted UTF8 file can have a Byte Order Mark as its first three octets\n    // reference: http://stackoverflow.com/questions/155097/microsoft-excel-mangles-diacritics-in-csv-files\n    // Option#2: use a 3rd party extension to javascript encode into UTF-16\n    let outputData: Uint8Array | string;\n    if (options.format === FileType.csv) {\n      outputData = new TextEncoder('utf-8').encode(dataContent);\n    } else {\n      outputData = dataContent;\n    }\n\n    // create a Blob object for the download\n    const blob = new Blob([options.useUtf8WithBom ? '\\uFEFF' : '', outputData], {\n      type: `${mimeType};charset=utf-8;`\n    });\n\n    // when using IE/Edge, then use different download call\n    if (typeof navigator.msSaveOrOpenBlob === 'function') {\n      navigator.msSaveOrOpenBlob(blob, options.filename);\n    } else {\n      // this trick will generate a temp <a /> tag\n      // the code will then trigger a hidden click for it to start downloading\n      const link = document.createElement('a');\n      const csvUrl = URL.createObjectURL(blob);\n\n      link.textContent = 'download';\n      link.href = csvUrl;\n      link.setAttribute('download', options.filename);\n\n      // set the visibility to hidden so there is no effect on your web-layout\n      link.style.visibility = 'hidden';\n\n      // this part will append the anchor tag, trigger a click (for download to start) and finally remove the tag once completed\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  // -----------------------\n  // Private functions\n  // -----------------------\n\n  private getDataOutput(): string {\n    const columns = this._grid.getColumns() || [];\n\n    // Group By text, it could be set in the export options or from translation or if nothing is found then use the English constant text\n    let groupByColumnHeader = this._exportOptions.groupingColumnHeaderTitle;\n    if (!groupByColumnHeader && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n      groupByColumnHeader = this.translate.instant(`${getTranslationPrefix(this._gridOptions)}GROUP_BY`);\n    } else if (!groupByColumnHeader) {\n      groupByColumnHeader = this._locales && this._locales.TEXT_GROUP_BY;\n    }\n\n    // a CSV needs double quotes wrapper, the other types do not need any wrapper\n    this._exportQuoteWrapper = (this._fileFormat === FileType.csv) ? '\"' : '';\n\n    // data variable which will hold all the fields data of a row\n    let outputDataString = '';\n\n    // get grouped column titles and if found, we will add a \"Group by\" column at the first column index\n    // if it's a CSV format, we'll escape the text in double quotes\n    const grouping = this._dataView.getGrouping();\n    if (grouping && Array.isArray(grouping) && grouping.length > 0) {\n      this._hasGroupedItems = true;\n      outputDataString += (this._fileFormat === FileType.csv) ? `\"${groupByColumnHeader}\"${this._delimiter}` : `${groupByColumnHeader}${this._delimiter}`;\n    } else {\n      this._hasGroupedItems = false;\n    }\n\n    // get all Grouped Column Header Titles when defined (from pre-header row)\n    if (this._gridOptions.createPreHeaderPanel && this._gridOptions.showPreHeaderPanel && !this._gridOptions.enableDraggableGrouping) {\n      this._groupedColumnHeaders = this.getColumnGroupedHeaderTitles(columns) || [];\n      if (this._groupedColumnHeaders && Array.isArray(this._groupedColumnHeaders) && this._groupedColumnHeaders.length > 0) {\n        // add the header row + add a new line at the end of the row\n        const outputGroupedHeaderTitles = this._groupedColumnHeaders.map((header) => `${this._exportQuoteWrapper}${header.title}${this._exportQuoteWrapper}`);\n        outputDataString += (outputGroupedHeaderTitles.join(this._delimiter) + this._lineCarriageReturn);\n      }\n    }\n\n    // get all Column Header Titles\n    this._columnHeaders = this.getColumnHeaders(columns) || [];\n    if (this._columnHeaders && Array.isArray(this._columnHeaders) && this._columnHeaders.length > 0) {\n      // add the header row + add a new line at the end of the row\n      const outputHeaderTitles = this._columnHeaders.map((header) => `${this._exportQuoteWrapper}${header.title}${this._exportQuoteWrapper}`);\n      outputDataString += (outputHeaderTitles.join(this._delimiter) + this._lineCarriageReturn);\n    }\n\n    // Populate the rest of the Grid Data\n    outputDataString += this.getAllGridRowData(columns, this._lineCarriageReturn);\n\n    return outputDataString;\n  }\n\n  /**\n   * Get all the grid row data and return that as an output string\n   */\n  private getAllGridRowData(columns: Column[], lineCarriageReturn: string): string {\n    const outputDataStrings = [];\n    const lineCount = this._dataView.getLength();\n\n    // loop through all the grid rows of data\n    for (let rowNumber = 0; rowNumber < lineCount; rowNumber++) {\n      const itemObj = this._dataView.getItem(rowNumber);\n      if (itemObj) {\n        // Normal row (not grouped by anything) would have an ID which was predefined in the Grid Columns definition\n        if (itemObj[this.datasetIdName] !== null && itemObj[this.datasetIdName] !== undefined) {\n          // get regular row item data\n          outputDataStrings.push(this.readRegularRowData(columns, rowNumber, itemObj));\n        } else if (this._hasGroupedItems && itemObj.__groupTotals === undefined) {\n          // get the group row\n          outputDataStrings.push(this.readGroupedTitleRow(itemObj));\n        } else if (itemObj.__groupTotals) {\n          // else if the row is a Group By and we have agreggators, then a property of '__groupTotals' would exist under that object\n          outputDataStrings.push(this.readGroupedTotalRow(columns, itemObj));\n        }\n      }\n    }\n\n    return outputDataStrings.join(lineCarriageReturn);\n  }\n\n  /**\n * Get all Grouped Header Titles and their keys, translate the title when required.\n * @param {Array<object>} columns of the grid\n */\n  private getColumnGroupedHeaderTitles(columns: Column[]): KeyTitlePair[] {\n    const groupedColumnHeaders: KeyTitlePair[] = [];\n\n    if (columns && Array.isArray(columns)) {\n      // Populate the Grouped Column Header, pull the columnGroup(Key) defined\n      columns.forEach((columnDef) => {\n        let groupedHeaderTitle = '';\n        if ((columnDef.columnGroupKey || columnDef.columnGroupKey) && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n          groupedHeaderTitle = this.translate.instant((columnDef.columnGroupKey || columnDef.columnGroupKey));\n        } else {\n          groupedHeaderTitle = columnDef.columnGroup || '';\n        }\n        const skippedField = columnDef.excludeFromExport || false;\n\n        // if column width is 0px, then we consider that field as a hidden field and should not be part of the export\n        if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n          groupedColumnHeaders.push({\n            key: (columnDef.field || columnDef.id) as string,\n            title: groupedHeaderTitle || ''\n          });\n        }\n      });\n    }\n    return groupedColumnHeaders;\n  }\n\n  /**\n   * Get all header titles and their keys, translate the title when required.\n   * @param {Array<object>} columns of the grid\n   */\n  private getColumnHeaders(columns: Column[]): KeyTitlePair[] {\n    const columnHeaders = [];\n\n    if (columns && Array.isArray(columns)) {\n      // Populate the Column Header, pull the name defined\n      columns.forEach((columnDef) => {\n        let headerTitle = '';\n        if ((columnDef.headerKey || columnDef.nameKey) && this._gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\n          headerTitle = this.translate.instant((columnDef.headerKey || columnDef.nameKey));\n        } else {\n          headerTitle = columnDef.name || titleCase(columnDef.field);\n        }\n        const skippedField = columnDef.excludeFromExport || false;\n\n        // if column width is 0, then we consider that field as a hidden field and should not be part of the export\n        if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n          columnHeaders.push({\n            key: columnDef.field || columnDef.id,\n            title: headerTitle\n          });\n        }\n      });\n    }\n\n    return columnHeaders;\n  }\n\n  /**\n   * Get the data of a regular row (a row without grouping)\n   * @param row\n   * @param itemObj\n   */\n  private readRegularRowData(columns: Column[], row: number, itemObj: any) {\n    let idx = 0;\n    const rowOutputStrings = [];\n    const exportQuoteWrapper = this._exportQuoteWrapper;\n\n    for (let col = 0, ln = columns.length; col < ln; col++) {\n      const columnDef = columns[col];\n\n      // skip excluded column\n      if (columnDef.excludeFromExport) {\n        continue;\n      }\n\n      // if we are grouping and are on 1st column index, we need to skip this column since it will be used later by the grouping text:: Group by [columnX]\n      if (this._hasGroupedItems && idx === 0) {\n        const emptyValue = this._fileFormat === FileType.csv ? `\"\"` : '';\n        rowOutputStrings.push(emptyValue);\n      }\n\n      // get the output by analyzing if we'll pull the value from the cell or from a formatter\n      let itemData = exportWithFormatterWhenDefined(row, col, itemObj, columnDef, this._grid, this._exportOptions);\n\n      // does the user want to sanitize the output data (remove HTML tags)?\n      if (columnDef.sanitizeDataExport || this._exportOptions.sanitizeDataExport) {\n        itemData = sanitizeHtmlToText(itemData);\n      }\n\n      // when CSV we also need to escape double quotes twice, so \" becomes \"\"\n      if (this._fileFormat === FileType.csv && itemData) {\n        itemData = itemData.toString().replace(/\"/gi, `\"\"`);\n      }\n\n      // do we have a wrapper to keep as a string? in certain cases like \"1E06\", we don't want excel to transform it into exponential (1.0E06)\n      // to cancel that effect we can had = in front, ex: =\"1E06\"\n      const keepAsStringWrapper = (columnDef && columnDef.exportCsvForceToKeepAsString) ? '=' : '';\n\n      rowOutputStrings.push(keepAsStringWrapper + exportQuoteWrapper + itemData + exportQuoteWrapper);\n      idx++;\n    }\n\n    return rowOutputStrings.join(this._delimiter);\n  }\n\n  /**\n   * Get the grouped title(s) and its group title formatter, for example if we grouped by salesRep, the returned result would be:: 'Sales Rep: John Dow (2 items)'\n   * @param itemObj\n   */\n  private readGroupedTitleRow(itemObj: any) {\n    let groupName = sanitizeHtmlToText(itemObj.title);\n    const exportQuoteWrapper = this._exportQuoteWrapper;\n\n    groupName = addWhiteSpaces(5 * itemObj.level) + groupName;\n\n    if (this._fileFormat === FileType.csv) {\n      // when CSV we also need to escape double quotes twice, so \" becomes \"\"\n      groupName = groupName.toString().replace(/\"/gi, `\"\"`);\n    }\n    return exportQuoteWrapper + groupName + exportQuoteWrapper;\n  }\n\n  /**\n   * Get the grouped totals (below the regular rows), these are set by Slick Aggregators.\n   * For example if we grouped by \"salesRep\" and we have a Sum Aggregator on \"sales\", then the returned output would be:: [\"Sum 123$\"]\n   * @param itemObj\n   */\n  private readGroupedTotalRow(columns: Column[], itemObj: any) {\n    const delimiter = this._exportOptions.delimiter;\n    const format = this._exportOptions.format;\n    const groupingAggregatorRowText = this._exportOptions.groupingAggregatorRowText || '';\n    const exportQuoteWrapper = this._exportQuoteWrapper;\n    const outputStrings = [`${exportQuoteWrapper}${groupingAggregatorRowText}${exportQuoteWrapper}`];\n\n    columns.forEach((columnDef) => {\n      let itemData = '';\n\n      const skippedField = columnDef.excludeFromExport || false;\n\n      // if there's a groupTotalsFormatter, we will re-run it to get the exact same output as what is shown in UI\n      if (columnDef.groupTotalsFormatter) {\n        itemData = columnDef.groupTotalsFormatter(itemObj, columnDef);\n      }\n\n      // does the user want to sanitize the output data (remove HTML tags)?\n      if (columnDef.sanitizeDataExport || this._exportOptions.sanitizeDataExport) {\n        itemData = sanitizeHtmlToText(itemData);\n      }\n\n      if (format === FileType.csv) {\n        // when CSV we also need to escape double quotes twice, so a double quote \" becomes 2x double quotes \"\"\n        itemData = itemData.toString().replace(/\"/gi, `\"\"`);\n      }\n\n      // add the column (unless user wants to skip it)\n      if ((columnDef.width === undefined || columnDef.width > 0) && !skippedField) {\n        outputStrings.push(exportQuoteWrapper + itemData + exportQuoteWrapper);\n      }\n    });\n\n    return outputStrings.join(delimiter);\n  }\n}\n","import { Subject } from 'rxjs';\r\n\r\nimport { Column, CurrentPagination, GridOption } from '../models';\r\n\r\nexport class SharedService {\r\n  private _allColumns: Column[];\r\n  private _dataView: any;\r\n  private _groupItemMetadataProvider: any;\r\n  private _grid: any;\r\n  private _gridOptions: GridOption;\r\n  private _currentPagination: CurrentPagination;\r\n  private _hideHeaderRowAfterPageLoad = false;\r\n  private _visibleColumns: Column[];\r\n  private _hierarchicalDataset: any[] | null;\r\n  private _frozenVisibleColumnId: string | number;\r\n  onHeaderMenuHideColumns = new Subject<Column[]>();\r\n\r\n  // --\r\n  // public\r\n\r\n  /** Getter for All Columns  in the grid (hidden/visible) */\r\n  get allColumns(): Column[] {\r\n    return this._allColumns;\r\n  }\r\n  /** Setter for All Columns  in the grid (hidden/visible) */\r\n  set allColumns(allColumns: Column[]) {\r\n    this._allColumns = allColumns;\r\n  }\r\n\r\n  /** Getter for the Column Definitions pulled through the Grid Object */\r\n  get columnDefinitions(): Column[] {\r\n    return (this._grid && this._grid.getColumns) ? this._grid.getColumns() : [];\r\n  }\r\n\r\n  /** Getter for the Current Pagination (when Pagination is enabled) */\r\n  get currentPagination(): CurrentPagination | undefined {\r\n    return this._currentPagination;\r\n  }\r\n\r\n  /** Setter for the Current Pagination (when Pagination is enabled) */\r\n  set currentPagination(currentPagination: CurrentPagination) {\r\n    this._currentPagination = currentPagination;\r\n  }\r\n\r\n  /** Getter for SlickGrid DataView object */\r\n  get dataView(): any {\r\n    return this._dataView;\r\n  }\r\n  /** Setter for SlickGrid DataView object */\r\n  set dataView(dataView: any) {\r\n    this._dataView = dataView;\r\n  }\r\n\r\n  /** Setter to keep the frozen column id for reference if we ever show/hide column from ColumnPicker/GridMenu afterward */\r\n  get frozenVisibleColumnId(): string | number {\r\n    return this._frozenVisibleColumnId;\r\n  }\r\n  /** Getter to keep the frozen column id for reference if we ever show/hide column from ColumnPicker/GridMenu afterward */\r\n  set frozenVisibleColumnId(columnId: string | number) {\r\n    this._frozenVisibleColumnId = columnId;\r\n  }\r\n\r\n  /** Getter for SlickGrid Grid object */\r\n  get grid(): any {\r\n    return this._grid;\r\n  }\r\n  /** Setter for SlickGrid Grid object */\r\n  set grid(grid: any) {\r\n    this._grid = grid;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  get gridOptions(): GridOption {\r\n    return this._gridOptions || this._grid && this._grid.getOptions && this._grid.getOptions() || {};\r\n  }\r\n\r\n  /** Setter for the Grid Options pulled through the Grid Object */\r\n  set gridOptions(gridOptions: GridOption) {\r\n    this._gridOptions = gridOptions;\r\n  }\r\n\r\n  /** Getter for the Grid Options */\r\n  get groupItemMetadataProvider(): any {\r\n    return this._groupItemMetadataProvider;\r\n  }\r\n  /** Setter for the Grid Options */\r\n  set groupItemMetadataProvider(groupItemMetadataProvider: any) {\r\n    this._groupItemMetadataProvider = groupItemMetadataProvider;\r\n  }\r\n\r\n  /** Getter to know if user want to hide header row after 1st page load */\r\n  get hideHeaderRowAfterPageLoad(): boolean {\r\n    return this._hideHeaderRowAfterPageLoad;\r\n  }\r\n  /** Setter for knowing if user want to hide header row after 1st page load */\r\n  set hideHeaderRowAfterPageLoad(hideHeaderRowAfterPageLoad: boolean) {\r\n    this._hideHeaderRowAfterPageLoad = hideHeaderRowAfterPageLoad;\r\n  }\r\n\r\n  /** Getter for the Visible Columns in the grid */\r\n  get visibleColumns(): Column[] {\r\n    return this._visibleColumns;\r\n  }\r\n  /** Setter for the Visible Columns in the grid */\r\n  set visibleColumns(visibleColumns: Column[]) {\r\n    this._visibleColumns = visibleColumns;\r\n  }\r\n\r\n  /** Getter for the Hierarchical Tree Data dataset when the feature is enabled */\r\n  get hierarchicalDataset(): any[] | null {\r\n    return this._hierarchicalDataset;\r\n  }\r\n\r\n  /** Getter for the Hierarchical Tree Data dataset when the feature is enabled */\r\n  set hierarchicalDataset(hierarchicalDataset: any[] | null) {\r\n    this._hierarchicalDataset = hierarchicalDataset;\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { Constants } from '../constants';\r\nimport { Column, ExtensionName } from '../models/index';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { getTranslationPrefix } from '../services/utilities';\r\n\r\ndeclare function require(name: string);\r\n\r\n@Injectable()\r\nexport class ExtensionUtility {\r\n  constructor(private sharedService: SharedService, @Optional() private translate: TranslateService) { }\r\n\r\n  /**\r\n   * Load SlickGrid Extension (Control/Plugin) dynamically (on demand)\r\n   * This will basically only load the extension when user enables the feature\r\n   * @param extensionName\r\n   */\r\n  loadExtensionDynamically(extensionName: ExtensionName): any {\r\n    try {\r\n      switch (extensionName) {\r\n        case ExtensionName.autoTooltip:\r\n          require('slickgrid/plugins/slick.autotooltips');\r\n          break;\r\n        case ExtensionName.cellExternalCopyManager:\r\n          require('slickgrid/plugins/slick.cellexternalcopymanager');\r\n          break;\r\n        case ExtensionName.checkboxSelector:\r\n          require('slickgrid/plugins/slick.checkboxselectcolumn');\r\n          break;\r\n        case ExtensionName.cellMenu:\r\n          require('slickgrid/plugins/slick.cellmenu');\r\n          break;\r\n        case ExtensionName.columnPicker:\r\n          require('slickgrid/controls/slick.columnpicker');\r\n          break;\r\n        case ExtensionName.contextMenu:\r\n          require('slickgrid/plugins/slick.contextmenu');\r\n          break;\r\n        case ExtensionName.draggableGrouping:\r\n          require('slickgrid/plugins/slick.draggablegrouping');\r\n          break;\r\n        case ExtensionName.gridMenu:\r\n          require('slickgrid/controls/slick.gridmenu');\r\n          break;\r\n        case ExtensionName.groupItemMetaProvider:\r\n          require('slickgrid/slick.groupitemmetadataprovider');\r\n          break;\r\n        case ExtensionName.headerButton:\r\n          require('slickgrid/plugins/slick.headerbuttons');\r\n          break;\r\n        case ExtensionName.headerMenu:\r\n          require('slickgrid/plugins/slick.headermenu');\r\n          break;\r\n        case ExtensionName.rowSelection:\r\n          require('slickgrid/plugins/slick.rowselectionmodel');\r\n          break;\r\n        case ExtensionName.rowDetailView:\r\n          require('slickgrid/plugins/slick.rowdetailview');\r\n          break;\r\n        case ExtensionName.rowMoveManager:\r\n          require('slickgrid/plugins/slick.rowmovemanager');\r\n          break;\r\n      }\r\n    } catch (e) {\r\n      // do nothing, we fall here when using Angular and RequireJS\r\n    }\r\n  }\r\n\r\n  /**\r\n   * From a Grid Menu object property name, we will return the correct title output string following this order\r\n   * 1- if user provided a title, use it as the output title\r\n   * 2- else if user provided a title key, use it to translate the output title\r\n   * 3- else if nothing is provided use text defined as constants\r\n   */\r\n  getPickerTitleOutputString(propName: string, pickerName: 'gridMenu' | 'columnPicker') {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    let output = '';\r\n    const picker = this.sharedService.gridOptions && this.sharedService.gridOptions[pickerName] || {};\r\n    const enableTranslate = this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate || false;\r\n\r\n    // get locales provided by user in forRoot or else use default English locales via the Constants\r\n    const locales = this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.locales || Constants.locales;\r\n\r\n    const title = picker && picker[propName];\r\n    const titleKey = picker && picker[`${propName}Key`];\r\n    const gridOptions = this.sharedService.gridOptions;\r\n    const translationPrefix = getTranslationPrefix(gridOptions);\r\n\r\n    if (titleKey && this.translate && this.translate.currentLang && this.translate.instant) {\r\n      output = this.translate.instant(titleKey || ' ');\r\n    } else {\r\n      switch (propName) {\r\n        case 'customTitle':\r\n          output = title || enableTranslate && this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(`${translationPrefix}COMMANDS` || ' ') || locales && locales.TEXT_COMMANDS;\r\n          break;\r\n        case 'columnTitle':\r\n          output = title || enableTranslate && this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(`${translationPrefix}COLUMNS` || ' ') || locales && locales.TEXT_COLUMNS;\r\n          break;\r\n        case 'forceFitTitle':\r\n          output = title || enableTranslate && this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(`${translationPrefix}FORCE_FIT_COLUMNS` || ' ') || locales && locales.TEXT_FORCE_FIT_COLUMNS;\r\n          break;\r\n        case 'syncResizeTitle':\r\n          output = title || enableTranslate && this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(`${translationPrefix}SYNCHRONOUS_RESIZE` || ' ') || locales && locales.TEXT_SYNCHRONOUS_RESIZE;\r\n          break;\r\n        default:\r\n          output = title;\r\n          break;\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Loop through object provided and set to null any property found starting with \"onX\"\r\n   * @param {Object}: obj\r\n   */\r\n  nullifyFunctionNameStartingWithOn(obj?: any) {\r\n    if (obj) {\r\n      for (const prop of Object.keys(obj)) {\r\n        if (prop.startsWith('on')) {\r\n          obj[prop] = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When using ColumnPicker/GridMenu to show/hide a column, we potentially need to readjust the grid option \"frozenColumn\" index.\r\n   * That is because SlickGrid freezes by column index and it has no knowledge of the columns themselves and won't change the index, we need to do that ourselves whenever necessary.\r\n   * Note: we call this method right after the visibleColumns array got updated, it won't work properly if we call it before the setting the visibleColumns.\r\n   * @param {String} pickerColumnId - what is the column id triggered by the picker\r\n   * @param {Number} frozenColumnIndex - current frozenColumn index\r\n   * @param {Boolean} showingColumn - is the column being shown or hidden?\r\n   * @param {Array<Object>} allColumns - all columns (including hidden ones)\r\n   * @param {Array<Object>} visibleColumns - only visible columns (excluding hidden ones)\r\n   */\r\n  readjustFrozenColumnIndexWhenNeeded(pickerColumnId: string | number, frozenColumnIndex: number, showingColumn: boolean, allColumns: Column[], visibleColumns: Column[]) {\r\n    if (frozenColumnIndex >= 0 && pickerColumnId) {\r\n      // calculate a possible frozenColumn index variance\r\n      let frozenColIndexVariance = 0;\r\n      if (showingColumn) {\r\n        const definedFrozenColumnIndex = visibleColumns.findIndex(col => col.id === this.sharedService.frozenVisibleColumnId);\r\n        const columnIndex = visibleColumns.findIndex(col => col.id === pickerColumnId);\r\n        frozenColIndexVariance = (columnIndex >= 0 && (frozenColumnIndex >= columnIndex || definedFrozenColumnIndex === columnIndex)) ? 1 : 0;\r\n      } else {\r\n        const columnIndex = allColumns.findIndex(col => col.id === pickerColumnId);\r\n        frozenColIndexVariance = (columnIndex >= 0 && frozenColumnIndex >= columnIndex) ? -1 : 0;\r\n      }\r\n      // if we have a variance different than 0 then apply it\r\n      const newFrozenColIndex = frozenColumnIndex + frozenColIndexVariance;\r\n      if (frozenColIndexVariance !== 0) {\r\n        this.sharedService.grid.setOptions({ frozenColumn: newFrozenColIndex });\r\n      }\r\n\r\n      // to freeze columns, we need to take only the visible columns and we also need to use setColumns() when some of them are hidden\r\n      // to make sure that we only use the visible columns, not doing this would show back some of the hidden columns\r\n      if (Array.isArray(visibleColumns) && Array.isArray(allColumns) && visibleColumns.length !== allColumns.length) {\r\n        this.sharedService.grid.setColumns(visibleColumns);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort items (by pointers) in an array by a property name\r\n   * @params items array\r\n   * @param property name to sort with\r\n   */\r\n  sortItems<T = any>(items: T[], propertyName: string) {\r\n    // sort the custom items by their position in the list\r\n    if (Array.isArray(items)) {\r\n      items.sort((itemA: T, itemB: T) => {\r\n        if (itemA && itemB && itemA.hasOwnProperty(propertyName) && itemB.hasOwnProperty(propertyName)) {\r\n          return itemA[propertyName] - itemB[propertyName];\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Translate the an array of items from an input key and assign to the output key */\r\n  translateItems<T = any>(items: T[], inputKey: string, outputKey: string) {\r\n    if (Array.isArray(items)) {\r\n      for (const item of items) {\r\n        if (item[inputKey]) {\r\n          item[outputKey] = this.translate && this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(item[inputKey]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When \"enabledTranslate\" is set to True, we will try to translate if the Translate Service exist or use the Locales when not\r\n   * @param translationKey\r\n   * @param localeKey\r\n   */\r\n  translateWhenEnabledAndServiceExist(translationKey: string, localeKey: string): string {\r\n    let text = '';\r\n    const gridOptions = this.sharedService && this.sharedService.gridOptions;\r\n\r\n    // get locales provided by user in main file or else use default English locales via the Constants\r\n    const locales = gridOptions && gridOptions.locales || Constants.locales;\r\n\r\n    if (gridOptions.enableTranslate && this.translate && this.translate.currentLang && this.translate.instant) {\r\n      text = this.translate.instant(translationKey || ' ');\r\n    } else if (locales && locales.hasOwnProperty(localeKey)) {\r\n      text = locales[localeKey];\r\n    } else {\r\n      text = localeKey;\r\n    }\r\n    return text;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Extension, ExtensionName } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class AutoTooltipExtension implements Extension {\r\n  private _addon: any;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) { }\r\n\r\n  dispose() {\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n      this._addon = null;\r\n    }\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.autoTooltip);\r\n      this._addon = new Slick.AutoTooltips(this.sharedService.gridOptions.autoTooltipOptions || {});\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Column,\r\n  EditCommand,\r\n  EditUndoRedoBuffer,\r\n  ExcelCopyBufferOption,\r\n  Extension,\r\n  ExtensionName,\r\n  SelectedRange,\r\n  SlickEventHandler,\r\n} from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { BindingEventService } from '../services/bindingEvent.service';\r\nimport { sanitizeHtmlToText } from '../services/utilities';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\ndeclare const $: any;\r\n\r\n@Injectable()\r\nexport class CellExternalCopyManagerExtension implements Extension {\r\n  private _addon: any;\r\n  private _addonOptions: ExcelCopyBufferOption | null;\r\n  private _bindingEventService: BindingEventService;\r\n  private _cellSelectionModel: any;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _commandQueue: EditCommand[];\r\n  private _undoRedoBuffer: EditUndoRedoBuffer;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n    this._bindingEventService = new BindingEventService();\r\n  }\r\n\r\n  get addonOptions(): ExcelCopyBufferOption | null {\r\n    return this._addonOptions;\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  get commandQueue(): EditCommand[] {\r\n    return this._commandQueue;\r\n  }\r\n\r\n  get undoRedoBuffer(): EditUndoRedoBuffer {\r\n    return this._undoRedoBuffer;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n    this._bindingEventService.unbindAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    if (this._cellSelectionModel && this._cellSelectionModel.destroy) {\r\n      this._cellSelectionModel.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._addonOptions);\r\n    this._addon = null;\r\n    this._addonOptions = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance(): any {\r\n    return this._addon;\r\n  }\r\n\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.cellExternalCopyManager);\r\n      this.createUndoRedoBuffer();\r\n      this._bindingEventService.bind(document.body, 'keydown', this.handleKeyDown.bind(this));\r\n\r\n      this._addonOptions = { ...this.getDefaultOptions(), ...this.sharedService.gridOptions.excelCopyBufferOptions } as ExcelCopyBufferOption;\r\n      this._cellSelectionModel = new Slick.CellSelectionModel();\r\n      this.sharedService.grid.setSelectionModel(this._cellSelectionModel);\r\n      this._addon = new Slick.CellExternalCopyManager(this._addonOptions);\r\n      if (this._addon) {\r\n        this.sharedService.grid.registerPlugin(this._addon);\r\n      }\r\n\r\n      // hook to all possible events\r\n      if (this.sharedService.grid && this._addonOptions) {\r\n        if (this._addonOptions.onExtensionRegistered) {\r\n          this._addonOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onCopyCells, (e: any, args: { ranges: SelectedRange[] }) => {\r\n          if (this._addonOptions && typeof this._addonOptions.onCopyCells === 'function') {\r\n            this._addonOptions.onCopyCells(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onCopyCancelled, (e: any, args: { ranges: SelectedRange[] }) => {\r\n          if (this._addonOptions && typeof this._addonOptions.onCopyCancelled === 'function') {\r\n            this._addonOptions.onCopyCancelled(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onPasteCells, (e: any, args: { ranges: SelectedRange[] }) => {\r\n          if (this._addonOptions && typeof this._addonOptions.onPasteCells === 'function') {\r\n            this._addonOptions.onPasteCells(e, args);\r\n          }\r\n        });\r\n      }\r\n\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Create an undo redo buffer used by the Excel like copy */\r\n  private createUndoRedoBuffer() {\r\n    let commandCtr = 0;\r\n    this._commandQueue = [];\r\n\r\n    this._undoRedoBuffer = {\r\n      queueAndExecuteCommand: (editCommand: EditCommand) => {\r\n        this._commandQueue[commandCtr] = editCommand;\r\n        commandCtr++;\r\n        editCommand.execute();\r\n      },\r\n      undo: () => {\r\n        if (commandCtr === 0) {\r\n          return;\r\n        }\r\n        commandCtr--;\r\n        const command = this._commandQueue[commandCtr];\r\n        if (command && Slick.GlobalEditorLock.cancelCurrentEdit()) {\r\n          command.undo();\r\n        }\r\n      },\r\n      redo: () => {\r\n        if (commandCtr >= this._commandQueue.length) {\r\n          return;\r\n        }\r\n        const command = this._commandQueue[commandCtr];\r\n        commandCtr++;\r\n        if (command && Slick.GlobalEditorLock.cancelCurrentEdit()) {\r\n          command.execute();\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /** @return default plugin (addon) options */\r\n  private getDefaultOptions(): ExcelCopyBufferOption {\r\n    let newRowIds = 0;\r\n\r\n    return {\r\n      clipboardCommandHandler: (editCommand: any) => {\r\n        this._undoRedoBuffer.queueAndExecuteCommand.call(this._undoRedoBuffer, editCommand);\r\n      },\r\n      dataItemColumnValueExtractor: (item: any, columnDef: Column) => {\r\n        // when grid or cell is not editable, we will possibly evaluate the Formatter if it was passed\r\n        // to decide if we evaluate the Formatter, we will use the same flag from Export which is \"exportWithFormatter\"\r\n        if (!this.sharedService.gridOptions.editable || !columnDef.editor) {\r\n          const isEvaluatingFormatter = (columnDef.exportWithFormatter !== undefined) ? columnDef.exportWithFormatter : (this.sharedService.gridOptions.exportOptions && this.sharedService.gridOptions.exportOptions.exportWithFormatter);\r\n          if (columnDef.formatter && isEvaluatingFormatter) {\r\n            const formattedOutput = columnDef.formatter(0, 0, item[columnDef.field], columnDef, item, this.sharedService.grid);\r\n            if (columnDef.sanitizeDataExport || (this.sharedService.gridOptions.exportOptions && this.sharedService.gridOptions.exportOptions.sanitizeDataExport)) {\r\n              let outputString = formattedOutput as string;\r\n              if (formattedOutput && typeof formattedOutput === 'object' && formattedOutput.hasOwnProperty('text')) {\r\n                outputString = formattedOutput.text;\r\n              }\r\n              if (outputString === null) {\r\n                outputString = '';\r\n              }\r\n              return sanitizeHtmlToText(outputString);\r\n            }\r\n            return formattedOutput;\r\n          }\r\n        }\r\n        // else use the default \"dataItemColumnValueExtractor\" from the plugin itself\r\n        // we can do that by setting back the getter with null\r\n        return null;\r\n      },\r\n      readOnlyMode: false,\r\n      includeHeaderWhenCopying: false,\r\n      newRowCreator: (count: number) => {\r\n        for (let i = 0; i < count; i++) {\r\n          const item = {\r\n            id: 'newRow_' + newRowIds++\r\n          };\r\n          this.sharedService.grid.getData().addItem(item);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /** Hook an undo shortcut key hook that will redo/undo the copy buffer using Ctrl+(Shift)+Z keyboard events */\r\n  private handleKeyDown(e: KeyboardEvent) {\r\n    const keyCode = e.keyCode || e.code;\r\n    if (keyCode === 90 && (e.ctrlKey || e.metaKey)) {\r\n      if (e.shiftKey) {\r\n        this._undoRedoBuffer.redo(); // Ctrl + Shift + Z\r\n      } else {\r\n        this._undoRedoBuffer.undo(); // Ctrl + Z\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { Constants } from '../constants';\r\nimport {\r\n  CellMenu,\r\n  Column,\r\n  Extension,\r\n  ExtensionName,\r\n  MenuCommandItem,\r\n  MenuCommandItemCallbackArgs,\r\n  MenuOptionItemCallbackArgs,\r\n  MenuOptionItem,\r\n  Locale,\r\n  SlickEventHandler,\r\n} from '../models/index';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { ExtensionUtility } from './extensionUtility';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class CellMenuExtension implements Extension {\r\n  private _addon: any;\r\n  private _cellMenuOptions: CellMenu | null;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _locales: Locale;\r\n\r\n  constructor(\r\n    private extensionUtility: ExtensionUtility,\r\n    private sharedService: SharedService,\r\n    @Optional() private translate: TranslateService,\r\n  ) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._cellMenuOptions);\r\n    this._addon = null;\r\n    this._cellMenuOptions = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  /**\r\n   * Create the Action Cell Menu and expose all the available hooks that user can subscribe (onCommand, onBeforeMenuShow, ...)\r\n   * @param grid\r\n   * @param dataView\r\n   * @param columnDefinitions\r\n   */\r\n  register(): any {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // get locales provided by user in main file or else use default English locales via the Constants\r\n      this._locales = this.sharedService.gridOptions && this.sharedService.gridOptions.locales || Constants.locales;\r\n\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.cellMenu);\r\n      this._cellMenuOptions = { ...this.getDefaultCellMenuOptions(), ...this.sharedService.gridOptions.cellMenu };\r\n      this.sharedService.gridOptions.cellMenu = this._cellMenuOptions;\r\n\r\n      // translate the item keys when necessary\r\n      if (this.sharedService.gridOptions.enableTranslate) {\r\n        this.translateCellMenu();\r\n      }\r\n\r\n      // sort all menu items by their position order when defined\r\n      this.sortMenuItems(this.sharedService.allColumns);\r\n\r\n      this._addon = new Slick.Plugins.CellMenu(this._cellMenuOptions);\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // hook all events\r\n      if (this._cellMenuOptions) {\r\n        if (this._cellMenuOptions.onExtensionRegistered) {\r\n          this._cellMenuOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        if (this._cellMenuOptions && typeof this._cellMenuOptions.onCommand === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onCommand, (event: Event, args: MenuCommandItemCallbackArgs) => {\r\n            this._cellMenuOptions.onCommand(event, args);\r\n          });\r\n        }\r\n        if (this._cellMenuOptions && typeof this._cellMenuOptions.onOptionSelected === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onOptionSelected, (event: Event, args: MenuOptionItemCallbackArgs) => {\r\n            this._cellMenuOptions.onOptionSelected(event, args);\r\n          });\r\n        }\r\n        if (this._cellMenuOptions && typeof this._cellMenuOptions.onAfterMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onAfterMenuShow, (event: Event, args: { cell: number; row: number; grid: any; }) => {\r\n            this._cellMenuOptions.onAfterMenuShow(event, args);\r\n          });\r\n        }\r\n        if (this._cellMenuOptions && typeof this._cellMenuOptions.onBeforeMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onBeforeMenuShow, (event: Event, args: { cell: number; row: number; grid: any; }) => {\r\n            this._cellMenuOptions.onBeforeMenuShow(event, args);\r\n          });\r\n        }\r\n        if (this._cellMenuOptions && typeof this._cellMenuOptions.onBeforeMenuClose === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onBeforeMenuClose, (event: Event, args: { cell: number; row: number; grid: any; menu: any; }) => {\r\n            this._cellMenuOptions.onBeforeMenuClose(event, args);\r\n          });\r\n        }\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Translate the Cell Menu titles, we need to loop through all column definition to re-translate them */\r\n  translateCellMenu() {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.cellMenu) {\r\n      this.resetMenuTranslations(this.sharedService.allColumns);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return default Action Cell Menu options\r\n   */\r\n  private getDefaultCellMenuOptions(): CellMenu {\r\n    return {\r\n      width: 180,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset all the internal Menu options which have text to translate\r\n   * @param grid menu object\r\n   */\r\n  private resetMenuTranslations(columnDefinitions: Column[]) {\r\n    const gridOptions = this.sharedService && this.sharedService.gridOptions;\r\n\r\n    if (gridOptions && gridOptions.enableTranslate) {\r\n      columnDefinitions.forEach((columnDef: Column) => {\r\n        if (columnDef && columnDef.cellMenu && (Array.isArray(columnDef.cellMenu.commandItems) || Array.isArray(columnDef.cellMenu.optionItems))) {\r\n          // get both items list\r\n          const columnCellMenuCommandItems: Array<MenuCommandItem | 'divider'> = columnDef.cellMenu.commandItems || [];\r\n          const columnCellMenuOptionItems: Array<MenuOptionItem | 'divider'> = columnDef.cellMenu.optionItems || [];\r\n\r\n          // translate their titles only if they have a titleKey defined\r\n          if (columnDef.cellMenu.commandTitleKey) {\r\n            columnDef.cellMenu.commandTitle = this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(columnDef.cellMenu.commandTitleKey) || this._locales && this._locales.TEXT_COMMANDS || columnDef.cellMenu.commandTitle;\r\n          }\r\n          if (columnDef.cellMenu.optionTitleKey) {\r\n            columnDef.cellMenu.optionTitle = this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(columnDef.cellMenu.optionTitleKey) || columnDef.cellMenu.optionTitle;\r\n          }\r\n\r\n          // translate both command/option items (whichever is provided)\r\n          this.extensionUtility.translateItems(columnCellMenuCommandItems, 'titleKey', 'title');\r\n          this.extensionUtility.translateItems(columnCellMenuOptionItems, 'titleKey', 'title');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  sortMenuItems(columnDefinitions: Column[]) {\r\n    columnDefinitions.forEach((columnDef: Column) => {\r\n      if (columnDef && columnDef.cellMenu && columnDef.cellMenu.commandItems) {\r\n        // get both items list\r\n        const columnCellMenuCommandItems: Array<MenuCommandItem | 'divider'> = columnDef.cellMenu.commandItems || [];\r\n        const columnCellMenuOptionItems: Array<MenuOptionItem | 'divider'> = columnDef.cellMenu.optionItems || [];\r\n\r\n        this.extensionUtility.sortItems(columnCellMenuCommandItems, 'positionOrder');\r\n        this.extensionUtility.sortItems(columnCellMenuOptionItems, 'positionOrder');\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Column, Extension, ExtensionName, GridOption } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class CheckboxSelectorExtension implements Extension {\r\n  private _addon: any;\r\n  private _rowSelectionPlugin: any;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) { }\r\n\r\n  dispose() {\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this._addon = null;\r\n    if (this._rowSelectionPlugin && this._rowSelectionPlugin.destroy) {\r\n      this._rowSelectionPlugin.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the plugin before the Grid creation, else it will behave oddly.\r\n   * Mostly because the column definitions might change after the grid creation\r\n   */\r\n  create(columnDefinitions: Column[], gridOptions: GridOption) {\r\n    if (Array.isArray(columnDefinitions) && gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.checkboxSelector);\r\n      if (!this._addon) {\r\n        this._addon = new Slick.CheckboxSelectColumn(gridOptions.checkboxSelector || {});\r\n      }\r\n      const iconColumn: Column = this._addon.getColumnDefinition();\r\n      if (typeof iconColumn === 'object') {\r\n        iconColumn.excludeFromExport = true;\r\n        iconColumn.excludeFromColumnPicker = true;\r\n        iconColumn.excludeFromGridMenu = true;\r\n        iconColumn.excludeFromQuery = true;\r\n        iconColumn.excludeFromHeaderMenu = true;\r\n\r\n        // column index position in the grid\r\n        const columnPosition = gridOptions && gridOptions.checkboxSelector && gridOptions.checkboxSelector.columnIndexPosition || 0;\r\n        if (columnPosition > 0) {\r\n          columnDefinitions.splice(columnPosition, 0, iconColumn);\r\n        } else {\r\n          columnDefinitions.unshift(iconColumn);\r\n        }\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(rowSelectionPlugin?: any) {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // the plugin has to be created BEFORE the grid (else it behaves oddly), but we can only watch grid events AFTER the grid is created\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // this also requires the Row Selection Model to be registered as well\r\n      if (!rowSelectionPlugin || !this.sharedService.grid.getSelectionModel()) {\r\n        this.extensionUtility.loadExtensionDynamically(ExtensionName.rowSelection);\r\n        rowSelectionPlugin = new Slick.RowSelectionModel(this.sharedService.gridOptions.rowSelectionOptions || {});\r\n        this.sharedService.grid.setSelectionModel(rowSelectionPlugin);\r\n      }\r\n\r\n      // user might want to pre-select some rows\r\n      // the setTimeout is because of timing issue with styling (row selection happen but rows aren't highlighted properly)\r\n      if (this.sharedService.gridOptions.preselectedRows && rowSelectionPlugin && this.sharedService.grid.getSelectionModel()) {\r\n        setTimeout(() => this._addon.selectRows(this.sharedService.gridOptions.preselectedRows));\r\n      }\r\n\r\n      this._rowSelectionPlugin = rowSelectionPlugin;\r\n      return rowSelectionPlugin;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Column, ColumnPicker, Extension, ExtensionName, SlickEventHandler } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class ColumnPickerExtension implements Extension {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _addon: any;\r\n  private _columnPicker: ColumnPicker | null;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._columnPicker);\r\n    this._addon = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.columnPicker);\r\n\r\n      // localization support for the picker\r\n      const columnTitle = this.extensionUtility.getPickerTitleOutputString('columnTitle', 'columnPicker');\r\n      const forceFitTitle = this.extensionUtility.getPickerTitleOutputString('forceFitTitle', 'columnPicker');\r\n      const syncResizeTitle = this.extensionUtility.getPickerTitleOutputString('syncResizeTitle', 'columnPicker');\r\n\r\n      this._columnPicker = this.sharedService.gridOptions.columnPicker || {};\r\n      this.sharedService.gridOptions.columnPicker = this._columnPicker;\r\n      this._columnPicker.columnTitle = this._columnPicker.columnTitle || columnTitle;\r\n      this._columnPicker.forceFitTitle = this._columnPicker.forceFitTitle || forceFitTitle;\r\n      this._columnPicker.syncResizeTitle = this._columnPicker.syncResizeTitle || syncResizeTitle;\r\n      this._addon = new Slick.Controls.ColumnPicker(this.sharedService.allColumns, this.sharedService.grid, this.sharedService.gridOptions);\r\n\r\n      if (this.sharedService.grid && this.sharedService.gridOptions.enableColumnPicker) {\r\n        if (this._columnPicker.onExtensionRegistered) {\r\n          this._columnPicker.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onColumnsChanged, (e: any, args: { columnId: string; showing: boolean; columns: Column[]; allColumns: Column[]; grid: any; }) => {\r\n          if (this._columnPicker && typeof this._columnPicker.onColumnsChanged === 'function') {\r\n            this._columnPicker.onColumnsChanged(e, args);\r\n          }\r\n          if (args && Array.isArray(args.columns) && args.columns.length !== this.sharedService.visibleColumns.length) {\r\n            this.sharedService.visibleColumns = args.columns;\r\n          }\r\n          // if we're using frozen columns, we need to readjust pinning when the new hidden column becomes visible again on the left pinning container\r\n          // we need to readjust frozenColumn index because SlickGrid freezes by index and has no knowledge of the columns themselves\r\n          const frozenColumnIndex = this.sharedService.gridOptions.frozenColumn !== undefined ? this.sharedService.gridOptions.frozenColumn : -1;\r\n          if (frozenColumnIndex >= 0) {\r\n            const { showing: isColumnShown, columnId, allColumns, columns: visibleColumns } = args;\r\n            this.extensionUtility.readjustFrozenColumnIndexWhenNeeded(columnId, frozenColumnIndex, isColumnShown, allColumns, visibleColumns);\r\n          }\r\n        });\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Translate the Column Picker headers and also the last 2 checkboxes */\r\n  translateColumnPicker() {\r\n    // update the properties by pointers, that is the only way to get Column Picker Control to see the new values\r\n    if (this._columnPicker) {\r\n      this.emptyColumnPickerTitles();\r\n      this._columnPicker.columnTitle = this.extensionUtility.getPickerTitleOutputString('columnTitle', 'columnPicker');\r\n      this._columnPicker.forceFitTitle = this.extensionUtility.getPickerTitleOutputString('forceFitTitle', 'columnPicker');\r\n      this._columnPicker.syncResizeTitle = this.extensionUtility.getPickerTitleOutputString('syncResizeTitle', 'columnPicker');\r\n    }\r\n\r\n    // translate all columns (including hidden columns)\r\n    // eventually deprecate the \"headerKey\" and use only the \"nameKey\"\r\n    this.extensionUtility.translateItems(this.sharedService.allColumns, 'headerKey', 'name');\r\n    this.extensionUtility.translateItems(this.sharedService.allColumns, 'nameKey', 'name');\r\n\r\n    // update the Titles of each sections (command, customTitle, ...)\r\n    if (this._addon && this._addon.updateAllTitles && this._columnPicker) {\r\n      this._addon.updateAllTitles(this._columnPicker);\r\n    }\r\n  }\r\n\r\n  private emptyColumnPickerTitles() {\r\n    if (this._columnPicker) {\r\n      this._columnPicker.columnTitle = '';\r\n      this._columnPicker.forceFitTitle = '';\r\n      this._columnPicker.syncResizeTitle = '';\r\n    }\r\n  }\r\n}\r\n","import { GridOption, SlickEventHandler } from '../models/index';\r\nimport { SharedService } from './shared.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class TreeDataService {\r\n  private _grid: any;\r\n  private _eventHandler: SlickEventHandler;\r\n\r\n  constructor(private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get dataset(): any[] {\r\n    return this.dataView && this.dataView.getItems && this.dataView.getItems();\r\n  }\r\n\r\n  get datasetHierarchical(): any[] | null {\r\n    return this.sharedService.hierarchicalDataset;\r\n  }\r\n\r\n  get dataView(): any {\r\n    return this._grid && this._grid.getData && this._grid.getData();\r\n  }\r\n\r\n  get gridOptions(): GridOption {\r\n    return this._grid && this._grid.getOptions && this._grid.getOptions() || {};\r\n  }\r\n\r\n  /** Getter of the SlickGrid Event Handler */\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    if (this._eventHandler && this._eventHandler.unsubscribeAll) {\r\n      this._eventHandler.unsubscribeAll();\r\n    }\r\n  }\r\n\r\n  init(grid: any) {\r\n    this._grid = grid;\r\n\r\n    // subscribe to the SlickGrid event and call the backend execution\r\n    this._eventHandler.subscribe(grid.onClick, this.handleOnCellClick.bind(this));\r\n  }\r\n\r\n  handleOnCellClick(event: any, args: any) {\r\n    if (event && args) {\r\n      const targetElm = event.target || {};\r\n      const treeDataOptions = this.gridOptions.treeDataOptions;\r\n      const collapsedPropName = treeDataOptions && treeDataOptions.collapsedPropName || '__collapsed';\r\n      const idPropName = this.gridOptions.datasetIdPropertyName || 'id';\r\n\r\n      if (targetElm && targetElm.className) {\r\n        const hasToggleClass = targetElm.className.indexOf('toggle') >= 0 || false;\r\n        if (hasToggleClass) {\r\n          const item = this.dataView.getItem(args.row);\r\n          if (item) {\r\n            item[collapsedPropName] = !item[collapsedPropName] ? true : false;\r\n            this.dataView.updateItem(item[idPropName], item);\r\n            this._grid.invalidate();\r\n          }\r\n          event.stopImmediatePropagation();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleTreeDataCollapse(collapsing: boolean) {\r\n    if (this.gridOptions) {\r\n      const treeDataOptions = this.gridOptions.treeDataOptions;\r\n\r\n      if (this.gridOptions.enableTreeData) {\r\n        const items: any[] = this.dataView.getItems() || [];\r\n        const collapsedPropName = treeDataOptions && treeDataOptions.collapsedPropName || '__collapsed';\r\n        items.forEach((item: any) => item[collapsedPropName] = collapsing);\r\n        this.dataView.setItems(items);\r\n        this._grid.invalidate();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport {\r\n  Column,\r\n  ContextMenu,\r\n  DelimiterType,\r\n  Extension,\r\n  ExtensionName,\r\n  FileType,\r\n  MenuCallbackArgs,\r\n  MenuCommandItem,\r\n  MenuCommandItemCallbackArgs,\r\n  MenuOptionItemCallbackArgs,\r\n  SlickEventHandler,\r\n} from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { ExportService } from '../services/export.service';\r\nimport { ExcelExportService } from '../services/excelExport.service';\r\nimport { TreeDataService } from '../services/treeData.service';\r\nimport { exportWithFormatterWhenDefined } from '../services/export-utilities';\r\nimport { getDescendantProperty, getTranslationPrefix } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class ContextMenuExtension implements Extension {\r\n  private _addon: any;\r\n  private _contextMenuOptions: ContextMenu | null;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _userOriginalContextMenu: ContextMenu | undefined;\r\n\r\n  constructor(\r\n    private excelExportService: ExcelExportService,\r\n    private exportService: ExportService,\r\n    private extensionUtility: ExtensionUtility,\r\n    private sharedService: SharedService,\r\n    private treeDataService: TreeDataService,\r\n    @Optional() private translate: TranslateService,\r\n  ) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.contextMenu && this.sharedService.gridOptions.contextMenu.commandItems) {\r\n      this.sharedService.gridOptions.contextMenu = this._userOriginalContextMenu;\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._contextMenuOptions);\r\n    this._addon = null;\r\n    this._contextMenuOptions = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  /**\r\n   * Create the Action Cell Menu and expose all the available hooks that user can subscribe (onCommand, onBeforeMenuShow, ...)\r\n   * @param grid\r\n   * @param dataView\r\n   * @param columnDefinitions\r\n   */\r\n  register(): any {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions && this.sharedService.gridOptions.contextMenu) {\r\n      this._contextMenuOptions = this.sharedService.gridOptions.contextMenu;\r\n\r\n      // keep original user context menu, useful when switching locale to translate\r\n      this._userOriginalContextMenu = { ...this._contextMenuOptions };\r\n\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.contextMenu);\r\n\r\n      // merge the original commands with the built-in internal commands\r\n      const originalCommandItems = this._userOriginalContextMenu && Array.isArray(this._userOriginalContextMenu.commandItems) ? this._userOriginalContextMenu.commandItems : [];\r\n      this._contextMenuOptions.commandItems = [...originalCommandItems, ...this.addMenuCustomCommands(originalCommandItems)];\r\n      this._contextMenuOptions = { ...this._contextMenuOptions };\r\n      this.sharedService.gridOptions.contextMenu = this._contextMenuOptions;\r\n\r\n      // sort all menu items by their position order when defined\r\n      this.extensionUtility.sortItems(this._contextMenuOptions.commandItems || [], 'positionOrder');\r\n      this.extensionUtility.sortItems(this._contextMenuOptions.optionItems || [], 'positionOrder');\r\n\r\n      this._addon = new Slick.Plugins.ContextMenu(this._contextMenuOptions);\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // translate the item keys when necessary\r\n      if (this.sharedService.gridOptions.enableTranslate) {\r\n        this.translateContextMenu();\r\n      }\r\n\r\n      // hook all events\r\n      if (this.sharedService.grid && this._contextMenuOptions) {\r\n        if (this._contextMenuOptions.onExtensionRegistered) {\r\n          this._contextMenuOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        if (this._contextMenuOptions && typeof this._contextMenuOptions.onCommand === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onCommand, (event: Event, args: MenuCommandItemCallbackArgs) => {\r\n            this._contextMenuOptions.onCommand(event, args);\r\n          });\r\n        }\r\n        if (this._contextMenuOptions && typeof this._contextMenuOptions.onOptionSelected === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onOptionSelected, (event: Event, args: MenuOptionItemCallbackArgs) => {\r\n            this._contextMenuOptions.onOptionSelected(event, args);\r\n          });\r\n        }\r\n        if (this._contextMenuOptions && typeof this._contextMenuOptions.onBeforeMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onBeforeMenuShow, (event: Event, args: { cell: number; row: number; grid: any; }) => {\r\n            this._contextMenuOptions.onBeforeMenuShow(event, args);\r\n          });\r\n        }\r\n        if (this._contextMenuOptions && typeof this._contextMenuOptions.onBeforeMenuClose === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onBeforeMenuClose, (event: Event, args: { cell: number; row: number; grid: any; menu: any; }) => {\r\n            this._contextMenuOptions.onBeforeMenuClose(event, args);\r\n          });\r\n        }\r\n        if (this._contextMenuOptions && typeof this._contextMenuOptions.onAfterMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onAfterMenuShow, (event: Event, args: { cell: number; row: number; grid: any; }) => {\r\n            this._contextMenuOptions.onAfterMenuShow(event, args);\r\n          });\r\n        }\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Translate the Cell Menu titles, we need to loop through all column definition to re-translate them */\r\n  translateContextMenu() {\r\n    if (this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.contextMenu) {\r\n      const contextMenu = this.sharedService.gridOptions.contextMenu;\r\n      const menuOptions: Partial<ContextMenu> = {};\r\n\r\n      if (contextMenu.commandTitleKey) {\r\n        contextMenu.commandTitle = this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(contextMenu.commandTitleKey) || contextMenu.commandTitle;\r\n        menuOptions.commandTitle = contextMenu.commandTitle;\r\n      }\r\n      if (contextMenu.optionTitleKey) {\r\n        contextMenu.optionTitle = this.translate && this.translate.currentLang && this.translate.instant && this.translate.instant(contextMenu.optionTitleKey) || contextMenu.optionTitle;\r\n        menuOptions.optionTitle = contextMenu.optionTitle;\r\n      }\r\n      const originalCommandItems = this._userOriginalContextMenu && Array.isArray(this._userOriginalContextMenu.commandItems) ? this._userOriginalContextMenu.commandItems : [];\r\n      contextMenu.commandItems = [...originalCommandItems, ...this.addMenuCustomCommands(originalCommandItems)];\r\n      menuOptions.commandItems = contextMenu.commandItems; // copy it also to the menuOptions else they won't be translated when locale changes\r\n\r\n      // translate all command/options and resort them afterward\r\n      this.extensionUtility.translateItems(contextMenu.commandItems || [], 'titleKey', 'title');\r\n      this.extensionUtility.translateItems(contextMenu.optionItems || [], 'titleKey', 'title');\r\n      this.extensionUtility.sortItems(contextMenu.commandItems || [], 'positionOrder');\r\n      this.extensionUtility.sortItems(contextMenu.optionItems || [], 'positionOrder');\r\n\r\n      // update the title options so that it has latest translated values\r\n      if (this._addon && this._addon.setOptions) {\r\n        this._addon.setOptions(menuOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // ------------------\r\n\r\n  /** Create Context Menu with Custom Commands (copy cell value, export) */\r\n  private addMenuCustomCommands(originalCustomItems: Array<MenuCommandItem | 'divider'>) {\r\n    const menuCustomItems: Array<MenuCommandItem | 'divider'> = [];\r\n    const gridOptions = this.sharedService && this.sharedService.gridOptions || {};\r\n    const contextMenu = gridOptions && gridOptions.contextMenu;\r\n    const dataView = this.sharedService && this.sharedService.dataView;\r\n    const translationPrefix = getTranslationPrefix(gridOptions);\r\n\r\n    // show context menu: Copy (cell value)\r\n    if (contextMenu && !contextMenu.hideCopyCellValueCommand) {\r\n      const commandName = 'copy';\r\n      if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        menuCustomItems.push(\r\n          {\r\n            iconCssClass: contextMenu.iconCopyCellValueCommand || 'fa fa-clone',\r\n            title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}COPY`, 'TEXT_COPY'),\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 50,\r\n            action: (e: Event, args: MenuCommandItemCallbackArgs) => {\r\n              this.copyToClipboard(args);\r\n            },\r\n            itemUsabilityOverride: (args: MenuCallbackArgs) => {\r\n              // make sure there's an item to copy before enabling this command\r\n              const columnDef = args && args.column as Column;\r\n              const dataContext = args && args.dataContext;\r\n              if (typeof columnDef.queryFieldNameGetterFn === 'function') {\r\n                const cellValue = this.getCellValueFromQueryFieldGetter(columnDef, dataContext);\r\n                if (cellValue !== '' && cellValue !== undefined) {\r\n                  return true;\r\n                }\r\n              } else if (columnDef && dataContext.hasOwnProperty(columnDef.field)) {\r\n                return dataContext[columnDef.field] !== '' && dataContext[columnDef.field] !== null && dataContext[columnDef.field] !== undefined;\r\n              }\r\n              return false;\r\n            }\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // show context menu: Export to file\r\n    if (gridOptions && gridOptions.enableExport && contextMenu && !contextMenu.hideExportCsvCommand) {\r\n      const commandName = 'export-csv';\r\n      if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        menuCustomItems.push(\r\n          {\r\n            iconCssClass: contextMenu.iconExportCsvCommand || 'fa fa-download',\r\n            title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}EXPORT_TO_CSV`, 'TEXT_EXPORT_TO_CSV'),\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 51,\r\n            action: () => this.exportService.exportToFile({\r\n              delimiter: DelimiterType.comma,\r\n              filename: 'export',\r\n              format: FileType.csv,\r\n              useUtf8WithBom: true,\r\n            }),\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // show context menu: Export to Excel\r\n    if (gridOptions && gridOptions.enableExcelExport && contextMenu && !contextMenu.hideExportExcelCommand) {\r\n      const commandName = 'export-excel';\r\n      if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        menuCustomItems.push(\r\n          {\r\n            iconCssClass: contextMenu.iconExportExcelCommand || 'fa fa-file-excel-o text-success',\r\n            title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}EXPORT_TO_EXCEL`, 'TEXT_EXPORT_TO_EXCEL'),\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 52,\r\n            action: () => this.excelExportService.exportToExcel({\r\n              filename: 'export',\r\n              format: FileType.xlsx,\r\n            }),\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // show context menu: export to text file as tab delimited\r\n    if (gridOptions && gridOptions.enableExport && contextMenu && !contextMenu.hideExportTextDelimitedCommand) {\r\n      const commandName = 'export-text-delimited';\r\n      if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        menuCustomItems.push(\r\n          {\r\n            iconCssClass: contextMenu.iconExportTextDelimitedCommand || 'fa fa-download',\r\n            title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}EXPORT_TO_TAB_DELIMITED`, 'TEXT_EXPORT_TO_TAB_DELIMITED'),\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 53,\r\n            action: () => this.exportService.exportToFile({\r\n              delimiter: DelimiterType.tab,\r\n              filename: 'export',\r\n              format: FileType.txt,\r\n              useUtf8WithBom: true,\r\n            }),\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // -- Grouping Commands\r\n    if (gridOptions && (gridOptions.enableGrouping || gridOptions.enableDraggableGrouping || gridOptions.enableTreeData)) {\r\n      // add a divider (separator) between the top sort commands and the other clear commands\r\n      if (contextMenu && !contextMenu.hideCopyCellValueCommand) {\r\n        menuCustomItems.push({ divider: true, command: '', positionOrder: 54 });\r\n      }\r\n\r\n      // show context menu: Clear Grouping\r\n      if (gridOptions && !gridOptions.enableTreeData && contextMenu && !contextMenu.hideClearAllGrouping) {\r\n        const commandName = 'clear-grouping';\r\n        if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          menuCustomItems.push(\r\n            {\r\n              iconCssClass: contextMenu.iconClearGroupingCommand || 'fa fa-times',\r\n              title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}CLEAR_ALL_GROUPING`, 'TEXT_CLEAR_ALL_GROUPING'),\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 55,\r\n              action: () => dataView.setGrouping([]),\r\n              itemUsabilityOverride: () => {\r\n                // only enable the command when there's an actually grouping in play\r\n                const groupingArray = dataView && dataView.getGrouping && dataView.getGrouping();\r\n                return Array.isArray(groupingArray) && groupingArray.length > 0;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      // show context menu: Collapse all Groups\r\n      if (gridOptions && contextMenu && !contextMenu.hideCollapseAllGroups) {\r\n        const commandName = 'collapse-all-groups';\r\n        if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          menuCustomItems.push(\r\n            {\r\n              iconCssClass: contextMenu.iconCollapseAllGroupsCommand || 'fa fa-compress',\r\n              title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}COLLAPSE_ALL_GROUPS`, 'TEXT_COLLAPSE_ALL_GROUPS'),\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 56,\r\n              action: () => {\r\n                if (gridOptions.enableTreeData) {\r\n                  this.treeDataService.toggleTreeDataCollapse(true);\r\n                } else {\r\n                  dataView.collapseAllGroups();\r\n                }\r\n              },\r\n              itemUsabilityOverride: () => {\r\n                if (gridOptions.enableTreeData) {\r\n                  return true;\r\n                }\r\n                // only enable the command when there's an actually grouping in play\r\n                const groupingArray = dataView && dataView.getGrouping && dataView.getGrouping();\r\n                return Array.isArray(groupingArray) && groupingArray.length > 0;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      // show context menu: Expand all Groups\r\n      if (gridOptions && contextMenu && !contextMenu.hideExpandAllGroups) {\r\n        const commandName = 'expand-all-groups';\r\n        if (!originalCustomItems.find((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          menuCustomItems.push(\r\n            {\r\n              iconCssClass: contextMenu.iconExpandAllGroupsCommand || 'fa fa-expand',\r\n              title: this.extensionUtility.translateWhenEnabledAndServiceExist(`${translationPrefix}EXPAND_ALL_GROUPS`, 'TEXT_EXPAND_ALL_GROUPS'),\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 57,\r\n              action: () => {\r\n                if (gridOptions.enableTreeData) {\r\n                  this.treeDataService.toggleTreeDataCollapse(false);\r\n                } else {\r\n                  dataView.expandAllGroups();\r\n                }\r\n              },\r\n              itemUsabilityOverride: () => {\r\n                if (gridOptions.enableTreeData) {\r\n                  return true;\r\n                }\r\n                // only enable the command when there's an actually grouping in play\r\n                const groupingArray = dataView && dataView.getGrouping && dataView.getGrouping();\r\n                return Array.isArray(groupingArray) && groupingArray.length > 0;\r\n              }\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return menuCustomItems;\r\n  }\r\n\r\n  /**\r\n   * First get the value, if \"exportWithFormatter\" is set then we'll use the formatter output\r\n   * Then we create the DOM trick to copy a text value by creating a fake <div> that is not shown to the user\r\n   * and from there we can call the execCommand 'copy' command and expect the value to be in clipboard\r\n   * @param args\r\n   */\r\n  private copyToClipboard(args: MenuCommandItemCallbackArgs) {\r\n    try {\r\n      if (args && args.grid && args.command) {\r\n        // get the value, if \"exportWithFormatter\" is set then we'll use the formatter output\r\n        const gridOptions = this.sharedService && this.sharedService.gridOptions || {};\r\n        const cell = args && args.cell || 0;\r\n        const row = args && args.row || 0;\r\n        const columnDef = args && args.column;\r\n        const dataContext = args && args.dataContext;\r\n        const grid = this.sharedService && this.sharedService.grid;\r\n        const exportOptions = gridOptions && (gridOptions.excelExportOptions || gridOptions.exportOptions);\r\n        let textToCopy = exportWithFormatterWhenDefined(row, cell, dataContext, columnDef, grid, exportOptions);\r\n\r\n        if (typeof columnDef.queryFieldNameGetterFn === 'function') {\r\n          textToCopy = this.getCellValueFromQueryFieldGetter(columnDef, dataContext);\r\n        }\r\n\r\n        // create fake <div> to copy into clipboard & delete it from the DOM once we're done\r\n        const range = document.createRange();\r\n        const tmpElem = $('<div>').css({ position: 'absolute', left: '-1000px', top: '-1000px' }).text(textToCopy);\r\n        $('body').append(tmpElem);\r\n        range.selectNodeContents(tmpElem.get(0));\r\n        const selection = window.getSelection();\r\n        if (selection && selection.addRange && selection.removeAllRanges) {\r\n          selection.removeAllRanges();\r\n          selection.addRange(range);\r\n          const success = document.execCommand('copy', false, textToCopy);\r\n          if (success) {\r\n            tmpElem.remove();\r\n          }\r\n        }\r\n      }\r\n    } catch (e) { }\r\n  }\r\n\r\n  /**\r\n   * When a queryFieldNameGetterFn is defined, then get the value from that getter callback function\r\n   * @param columnDef\r\n   * @param dataContext\r\n   * @return cellValue\r\n   */\r\n  private getCellValueFromQueryFieldGetter(columnDef: Column, dataContext: any): string {\r\n    let cellValue = '';\r\n\r\n    if (typeof columnDef.queryFieldNameGetterFn === 'function') {\r\n      const queryFieldName = columnDef.queryFieldNameGetterFn(dataContext);\r\n\r\n      // get the cell value from the item or when it's a dot notation then exploded the item and get the final value\r\n      if (queryFieldName && queryFieldName.indexOf('.') >= 0) {\r\n        cellValue = getDescendantProperty(dataContext, queryFieldName);\r\n      } else {\r\n        cellValue = dataContext[queryFieldName];\r\n      }\r\n    }\r\n\r\n    return cellValue;\r\n  }\r\n}\r\n","\r\nimport { SharedService } from '../services/shared.service';\r\nimport { DraggableGrouping, Extension, ExtensionName, GridOption, Grouping, SlickEventHandler } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class DraggableGroupingExtension implements Extension {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _addon: any;\r\n  private _draggableGroupingOptions: DraggableGrouping | null;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._draggableGroupingOptions);\r\n    this._addon = null;\r\n    this._draggableGroupingOptions = null;\r\n  }\r\n\r\n  /**\r\n   * Bind/Create different plugins before the Grid creation.\r\n   * For example the multi-select have to be added to the column definition before the grid is created to work properly\r\n   */\r\n  create(gridOptions: GridOption) {\r\n    if (gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.draggableGrouping);\r\n\r\n      if (!this._addon) {\r\n        this._addon = new Slick.DraggableGrouping(gridOptions.draggableGrouping || {});\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // Events\r\n      if (this.sharedService.grid && this.sharedService.gridOptions.draggableGrouping) {\r\n        this._draggableGroupingOptions = this.sharedService.gridOptions.draggableGrouping;\r\n        if (this._draggableGroupingOptions.onExtensionRegistered) {\r\n          this._draggableGroupingOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onGroupChanged, (e: any, args: { caller?: string; groupColumns: Grouping[] }) => {\r\n          if (this._draggableGroupingOptions && typeof this._draggableGroupingOptions.onGroupChanged === 'function') {\r\n            this._draggableGroupingOptions.onGroupChanged(e, args);\r\n          }\r\n        });\r\n      }\r\n\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { FilterCondition, FilterConditionOption } from './../models/index';\r\nimport { parseBoolean } from '../services/utilities';\r\n\r\nexport const booleanFilterCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  const searchTerm = Array.isArray(options.searchTerms) && options.searchTerms[0] || '';\r\n  return parseBoolean(options.cellValue) === parseBoolean(searchTerm);\r\n};\r\n","import { OperatorString } from '../models/index';\r\n\r\n/**\r\n * Compare 2 objects,\r\n * we will loop through all properties of the object to compare the entire content of both objects\r\n * Optionally we can compare by a property key, when that is provided we will compare the object content\r\n * @param o1\r\n * @param o2\r\n * @param compareKey optional\r\n * @return boolean are objects equals?\r\n */\r\nexport function compareObjects(o1: any, o2: any, compareKey?: string): boolean {\r\n  // if user provided an object compare key then compare directly both objects by that key\r\n  if (compareKey && ((o1 && o1.hasOwnProperty(compareKey)) || (o2 && o2.hasOwnProperty(compareKey)))) {\r\n    return o1[compareKey] === o2 || o1 === o2[compareKey] || o1[compareKey] === o2[compareKey];\r\n  }\r\n\r\n  // loop through all object properties to compare the full content of the object\r\n  // we'll return false as soon as a difference is detected\r\n  for (const p in o1) {\r\n    if (o1.hasOwnProperty(p)) {\r\n      if (o1[p] !== o2[p]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const testFilterCondition = (operator: OperatorString, value1: any, value2: any): boolean => {\r\n  switch (operator) {\r\n    case '<':\r\n    case 'LT': return (value1 < value2);\r\n    case '<=':\r\n    case 'LE': return (value1 <= value2);\r\n    case '>':\r\n    case 'GT': return (value1 > value2);\r\n    case '>=':\r\n    case 'GE': return (value1 >= value2);\r\n    case '!=':\r\n    case '<>':\r\n    case 'NE': return (value1 !== value2);\r\n    case '=':\r\n    case '==':\r\n    case 'EQ': return (value1 === value2);\r\n    case 'IN': return ((value2 && value2.indexOf) ? (value2.indexOf(value1) > -1) : false);\r\n    case 'NIN':\r\n    case 'NOT_IN':\r\n      return ((value2 && value2.includes) ? (!value2.includes(value1)) : false);\r\n    case 'IN_CONTAINS':\r\n      if (value2 && Array.isArray(value2) && value2.findIndex) {\r\n        return ((value2.findIndex((val) => value1.indexOf(val) > -1)) > -1);\r\n      }\r\n      return false;\r\n    case 'NIN_CONTAINS':\r\n    case 'NOT_IN_CONTAINS':\r\n      if (value2 && Array.isArray(value2) && value2.findIndex) {\r\n        return !((value2.findIndex((val) => value1.indexOf(val) > -1)) > -1);\r\n      }\r\n      return false;\r\n  }\r\n  return true;\r\n};\r\n","import { FilterCondition, FilterConditionOption } from '../models/index';\r\nimport { testFilterCondition } from './filterUtilities';\r\n\r\nexport const collectionSearchFilterCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  // multiple-select will always return text, so we should make our cell values text as well\r\n  const cellValue = options.cellValue + '';\r\n\r\n  return testFilterCondition(options.operator || 'IN', cellValue, options.searchTerms || []);\r\n};\r\n","import { FilterCondition, FilterConditionOption, OperatorType } from '../models/index';\r\nimport { testFilterCondition } from './filterUtilities';\r\n\r\nexport const numberFilterCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  const cellValue = parseFloat(options.cellValue);\r\n  const searchTerms = Array.isArray(options.searchTerms) && options.searchTerms || [0];\r\n\r\n  let isRangeSearch = false;\r\n  let searchValue1;\r\n  let searchValue2;\r\n\r\n  if (searchTerms.length === 2 || (typeof searchTerms[0] === 'string' && (searchTerms[0] as string).indexOf('..') > 0)) {\r\n    isRangeSearch = true;\r\n    const searchValues = (searchTerms.length === 2) ? searchTerms : (searchTerms[0] as string).split('..');\r\n    searchValue1 = parseFloat(Array.isArray(searchValues) && searchValues[0] + '');\r\n    searchValue2 = parseFloat(Array.isArray(searchValues) && searchValues[1] + '');\r\n  } else {\r\n    searchValue1 = parseFloat(searchTerms[0] + '');\r\n  }\r\n\r\n  if (!searchValue1 && !options.operator) {\r\n    return true;\r\n  }\r\n\r\n  if (isRangeSearch) {\r\n    const isInclusive = options.operator && options.operator === OperatorType.rangeInclusive;\r\n    const resultCondition1 = testFilterCondition((isInclusive ? '>=' : '>'), cellValue, searchValue1);\r\n    const resultCondition2 = testFilterCondition((isInclusive ? '<=' : '<'), cellValue, searchValue2);\r\n    return (resultCondition1 && resultCondition2);\r\n  }\r\n  return testFilterCondition(options.operator || '==', cellValue, searchValue1);\r\n};\r\n","import { FilterCondition, FilterConditionOption } from '../models/index';\r\nimport { compareObjects } from './filterUtilities';\r\n\r\nexport const objectFilterCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  const searchTerm = (Array.isArray(options.searchTerms) && options.searchTerms[0] || '');\r\n\r\n  if (!searchTerm && !options.operator) {\r\n    return true;\r\n  }\r\n\r\n  switch (options.operator) {\r\n    case '!=':\r\n    case '<>':\r\n    case 'NE':\r\n      return !compareObjects(options.cellValue, searchTerm, options.dataKey);\r\n    case '=':\r\n    case '==':\r\n    case 'EQ':\r\n    default:\r\n      return compareObjects(options.cellValue, searchTerm, options.dataKey);\r\n  }\r\n};\r\n","import { FilterCondition, FilterConditionOption } from '../models/index';\r\nimport { testFilterCondition } from './filterUtilities';\r\nimport { OperatorType } from '../models';\r\n\r\nexport const stringFilterCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  // make sure the cell value is a string by casting it when possible\r\n  options.cellValue = (options.cellValue === undefined || options.cellValue === null) ? '' : options.cellValue.toString();\r\n\r\n  // make both the cell value and search value lower for case insensitive comparison\r\n  const cellValue = options.cellValue.toLowerCase();\r\n  let searchTerm = (Array.isArray(options.searchTerms) && options.searchTerms[0]) || '';\r\n  if (typeof searchTerm === 'string') {\r\n    searchTerm = searchTerm.toLowerCase();\r\n  }\r\n\r\n  if (options.operator === '*' || options.operator === OperatorType.endsWith) {\r\n    return cellValue.endsWith(searchTerm);\r\n  } else if ((options.operator === '' && options.cellValueLastChar === '*') || options.operator === OperatorType.startsWith) {\r\n    return cellValue.startsWith(searchTerm);\r\n  } else if (options.operator === '' || options.operator === OperatorType.contains) {\r\n    return (cellValue.indexOf(searchTerm) > -1);\r\n  }\r\n  return testFilterCondition(options.operator || '==', cellValue, searchTerm);\r\n};\r\n","import { booleanFilterCondition } from './booleanFilterCondition';\r\nimport { collectionSearchFilterCondition } from './collectionSearchFilterCondition';\r\nimport { numberFilterCondition } from './numberFilterCondition';\r\nimport { objectFilterCondition } from './objectFilterCondition';\r\nimport { stringFilterCondition } from './stringFilterCondition';\r\n\r\nimport { FieldType, FilterCondition, FilterConditionOption, OperatorType } from '../models/index';\r\nimport { mapMomentDateFormatWithFieldType } from './../services/utilities';\r\nimport { testFilterCondition } from './filterUtilities';\r\nimport * as moment_ from 'moment-mini';\r\n\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\nexport const executeMappedCondition: FilterCondition = (options: FilterConditionOption) => {\r\n  // when using a multi-select ('IN' operator) we will not use the field type but instead go directly with a collection search\r\n  const operator = options && options.operator && options.operator.toUpperCase();\r\n  if (operator === 'IN' || operator === 'NIN' || operator === 'IN_CONTAINS' || operator === 'NIN_CONTAINS') {\r\n    return collectionSearchFilterCondition(options);\r\n  }\r\n\r\n  // execute the mapped type, or default to String condition check\r\n  switch (options.fieldType) {\r\n    case FieldType.boolean:\r\n      return booleanFilterCondition(options);\r\n    case FieldType.date:\r\n    case FieldType.dateIso:\r\n    case FieldType.dateUtc:\r\n    case FieldType.dateTime:\r\n    case FieldType.dateTimeIso:\r\n    case FieldType.dateTimeIsoAmPm:\r\n    case FieldType.dateTimeIsoAM_PM:\r\n    case FieldType.dateTimeShortIso:\r\n    case FieldType.dateEuro:\r\n    case FieldType.dateEuroShort:\r\n    case FieldType.dateTimeShortEuro:\r\n    case FieldType.dateTimeEuro:\r\n    case FieldType.dateTimeEuroAmPm:\r\n    case FieldType.dateTimeEuroAM_PM:\r\n    case FieldType.dateTimeEuroShort:\r\n    case FieldType.dateTimeEuroShortAmPm:\r\n    case FieldType.dateTimeEuroShortAM_PM:\r\n    case FieldType.dateUs:\r\n    case FieldType.dateUsShort:\r\n    case FieldType.dateTimeShortUs:\r\n    case FieldType.dateTimeUs:\r\n    case FieldType.dateTimeUsAmPm:\r\n    case FieldType.dateTimeUsAM_PM:\r\n    case FieldType.dateTimeUsShort:\r\n    case FieldType.dateTimeUsShortAmPm:\r\n    case FieldType.dateTimeUsShortAM_PM:\r\n      return executeAssociatedDateCondition(options);\r\n    case FieldType.integer:\r\n    case FieldType.float:\r\n    case FieldType.number:\r\n      return numberFilterCondition(options);\r\n    case FieldType.object:\r\n      return objectFilterCondition(options);\r\n    case FieldType.string:\r\n    case FieldType.text:\r\n    case FieldType.password:\r\n    case FieldType.readonly:\r\n    default:\r\n      return stringFilterCondition(options);\r\n  }\r\n};\r\n\r\n/**\r\n * Execute Date filter condition and use correct date format depending on it's field type (or filterSearchType when that is provided)\r\n * @param options\r\n */\r\nfunction executeAssociatedDateCondition(options: FilterConditionOption): boolean {\r\n  const filterSearchType = options && (options.filterSearchType || options.fieldType) || FieldType.dateIso;\r\n  const FORMAT = mapMomentDateFormatWithFieldType(filterSearchType);\r\n  const searchTerms = Array.isArray(options.searchTerms) && options.searchTerms || [];\r\n\r\n  let isRangeSearch = false;\r\n  let dateSearch1: any;\r\n  let dateSearch2: any;\r\n\r\n  // return when cell value is not a valid date\r\n  if (searchTerms.length === 0 || searchTerms[0] === '' || searchTerms[0] === null || !moment(options.cellValue, FORMAT, true).isValid()) {\r\n    return false;\r\n  }\r\n\r\n  // cell value in moment format\r\n  const dateCell = moment(options.cellValue, FORMAT, true);\r\n\r\n  if (searchTerms.length === 2 || (typeof searchTerms[0] === 'string' && (searchTerms[0] as string).indexOf('..') > 0)) {\r\n    isRangeSearch = true;\r\n    const searchValues = (searchTerms.length === 2) ? searchTerms : (searchTerms[0] as string).split('..');\r\n    const searchValue1 = (Array.isArray(searchValues) && searchValues[0] || '') as Date | string;\r\n    const searchValue2 = (Array.isArray(searchValues) && searchValues[1] || '') as Date | string;\r\n    const searchTerm1 = moment(searchValue1, FORMAT, true);\r\n    const searchTerm2 = moment(searchValue2, FORMAT, true);\r\n\r\n    // return if any of the 2 values are invalid dates\r\n    if (!moment(searchTerm1, FORMAT, true).isValid() || !moment(searchTerm2, FORMAT, true).isValid()) {\r\n      return false;\r\n    }\r\n    dateSearch1 = moment(searchTerm1, FORMAT, true);\r\n    dateSearch2 = moment(searchTerm2, FORMAT, true);\r\n  } else {\r\n    // return if the search term is an invalid date\r\n    if (!moment(searchTerms[0] as Date | string, FORMAT, true).isValid()) {\r\n      return false;\r\n    }\r\n    dateSearch1 = moment(searchTerms[0] as Date | string, FORMAT, true);\r\n  }\r\n\r\n  // when comparing with Dates only (without time), we need to disregard the time portion, we can do so by setting our time to start at midnight\r\n  // ref, see https://stackoverflow.com/a/19699447/1212166\r\n  const dateCellTimestamp = FORMAT.toLowerCase().includes('h') ? parseInt(dateCell.format('X'), 10) : parseInt(dateCell.clone().startOf('day').format('X'), 10);\r\n\r\n  // run the filter condition with date in Unix Timestamp format\r\n  if (isRangeSearch) {\r\n    const isInclusive = options.operator && options.operator === OperatorType.rangeInclusive;\r\n    const resultCondition1 = testFilterCondition((isInclusive ? '>=' : '>'), dateCellTimestamp, parseInt(dateSearch1.format('X'), 10));\r\n    const resultCondition2 = testFilterCondition((isInclusive ? '<=' : '<'), dateCellTimestamp, parseInt(dateSearch2.format('X'), 10));\r\n    return (resultCondition1 && resultCondition2);\r\n  }\r\n\r\n  const dateSearchTimestamp1 = FORMAT.toLowerCase().includes('h') ? parseInt(dateSearch1.format('X'), 10) : parseInt(dateSearch1.clone().startOf('day').format('X'), 10);\r\n  return testFilterCondition(options.operator || '==', dateCellTimestamp, dateSearchTimestamp1);\r\n};\r\n","import { FilterConditionOption } from './../models/filterConditionOption.interface';\r\nimport { booleanFilterCondition } from './booleanFilterCondition';\r\nimport { executeMappedCondition } from './executeMappedCondition';\r\nimport { collectionSearchFilterCondition } from './collectionSearchFilterCondition';\r\nimport { numberFilterCondition } from './numberFilterCondition';\r\nimport { stringFilterCondition } from './stringFilterCondition';\r\nimport { testFilterCondition } from './filterUtilities';\r\n\r\nexport const FilterConditions = {\r\n  executeMappedCondition,\r\n  booleanFilter: booleanFilterCondition,\r\n  collectionSearchFilter: collectionSearchFilterCondition,\r\n  numberFilter: numberFilterCondition,\r\n  stringFilter: stringFilterCondition,\r\n  testFilter: testFilterCondition\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription, Subject, Observable } from 'rxjs';\r\nimport * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport {\r\n  AutocompleteOption,\r\n  CollectionCustomStructure,\r\n  CollectionOption,\r\n  Column,\r\n  ColumnFilter,\r\n  FieldType,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  GridOption,\r\n  OperatorType,\r\n  OperatorString,\r\n  SearchTerm,\r\n} from './../models/index';\r\nimport { CollectionService } from '../services/collection.service';\r\nimport { castToPromise, getDescendantProperty, toKebabCase, unsubscribeAllObservables } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n@Injectable()\r\nexport class AutoCompleteFilter implements Filter {\r\n  private _autoCompleteOptions: AutocompleteOption;\r\n  private _clearFilterTriggered = false;\r\n  private _collection: any[] | null;\r\n  private _shouldTriggerQuery = true;\r\n\r\n  /** DOM Element Name, useful for auto-detecting positioning (dropup / dropdown) */\r\n  elementName: string;\r\n\r\n  /** The JQuery DOM element */\r\n  $filterElm: any;\r\n\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n  isFilled = false;\r\n\r\n  /** The property name for labels in the collection */\r\n  labelName: string;\r\n\r\n  /** The property name for a prefix that can be added to the labels in the collection */\r\n  labelPrefixName: string;\r\n\r\n  /** The property name for a suffix that can be added to the labels in the collection */\r\n  labelSuffixName: string;\r\n\r\n  /** The property name for values in the collection */\r\n  optionLabel: string;\r\n\r\n  /** The property name for values in the collection */\r\n  valueName = 'label';\r\n\r\n  enableTranslateLabel = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  constructor(protected translate: TranslateService, protected collectionService: CollectionService) { }\r\n\r\n  /** Getter for the Autocomplete Option */\r\n  get autoCompleteOptions(): Partial<AutocompleteOption> {\r\n    return this._autoCompleteOptions || {};\r\n  }\r\n\r\n  /** Getter for the Collection Options */\r\n  protected get collectionOptions(): CollectionOption {\r\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.collectionOptions || {};\r\n  }\r\n\r\n  /** Getter for the Collection Used by the Filter */\r\n  get collection(): any[] | null {\r\n    return this._collection;\r\n  }\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get filterDomElement(): any {\r\n    return this.$filterElm;\r\n  }\r\n\r\n  get filterOptions(): AutocompleteOption {\r\n    return this.columnFilter && this.columnFilter.filterOptions || {};\r\n  }\r\n\r\n  /** Getter for the Custom Structure if exist */\r\n  get customStructure(): CollectionCustomStructure | undefined {\r\n    let customStructure = this.columnFilter && this.columnFilter.customStructure;\r\n    const columnType = this.columnFilter && this.columnFilter.type || this.columnDef && this.columnDef.type;\r\n    if (!customStructure && (columnType === FieldType.object && this.columnDef && this.columnDef.dataKey && this.columnDef.labelKey)) {\r\n      customStructure = {\r\n        label: this.columnDef.labelKey,\r\n        value: this.columnDef.dataKey,\r\n      };\r\n    }\r\n    return customStructure;\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.equal;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** jQuery UI AutoComplete instance */\r\n  get instance(): any {\r\n    return this.$filterElm.autocomplete('instance');\r\n  }\r\n\r\n  /** Getter of the Operator to use when doing the filter comparing */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the filter template\r\n   */\r\n  init(args: FilterArguments): Promise<boolean> {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    if (!this.grid || !this.columnDef || !this.columnFilter || (!this.columnFilter.collection && !this.columnFilter.collectionAsync && !this.columnFilter.filterOptions)) {\r\n      throw new Error(`[Angular-SlickGrid] You need to pass a \"collection\" (or \"collectionAsync\") for the AutoComplete Filter to work correctly. Also each option should include a value/label pair (or value/labelKey when using Locale). For example:: { filter: model: Filters.autoComplete, collection: [{ value: true, label: 'True' }, { value: false, label: 'False'}] }`);\r\n    }\r\n\r\n    this.enableTranslateLabel = this.columnFilter && this.columnFilter.enableTranslateLabel || false;\r\n    this.labelName = this.customStructure && this.customStructure.label || 'label';\r\n    this.valueName = this.customStructure && this.customStructure.value || 'value';\r\n    this.labelPrefixName = this.customStructure && this.customStructure.labelPrefix || 'labelPrefix';\r\n    this.labelSuffixName = this.customStructure && this.customStructure.labelSuffix || 'labelSuffix';\r\n\r\n    // always render the DOM element, even if user passed a \"collectionAsync\",\r\n    const newCollection = this.columnFilter.collection || [];\r\n    this._collection = newCollection;\r\n    this.renderDomElement(newCollection);\r\n\r\n    // on every Filter which have a \"collection\" or a \"collectionAsync\"\r\n    // we will add (or replace) a Subject to the \"collectionAsync\" property so that user has possibility to change the collection\r\n    // if \"collectionAsync\" is already set by the user, it will resolve it first then after it will replace it with a Subject\r\n    const collectionAsync = this.columnFilter && this.columnFilter.collectionAsync;\r\n    if (collectionAsync) {\r\n      return this.renderOptionsAsync(collectionAsync); // create Subject after resolve (createCollectionAsyncSubject)\r\n    } else {\r\n      return new Promise((resolve) => resolve(true));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this.$filterElm.val('');\r\n      this.$filterElm.trigger('input');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    // also unsubscribe all RxJS subscriptions\r\n    this.subscriptions = unsubscribeAllObservables(this.subscriptions);\r\n\r\n    if (this.$filterElm) {\r\n      this.$filterElm.off('input').remove();\r\n    }\r\n    this.$filterElm = null;\r\n    this._collection = null;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (values) {\r\n      this.$filterElm.val(values);\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // protected functions\r\n  // ------------------\r\n\r\n  /**\r\n   * user might want to filter certain items of the collection\r\n   * @param inputCollection\r\n   * @return outputCollection filtered and/or sorted collection\r\n   */\r\n  protected filterCollection(inputCollection: any[]): any[] {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to filter certain items of the collection\r\n    if (this.columnFilter && this.columnFilter.collectionFilterBy) {\r\n      const filterBy = this.columnFilter.collectionFilterBy;\r\n      const filterCollectionBy = this.columnFilter.collectionOptions && this.columnFilter.collectionOptions.filterResultAfterEachPass || null;\r\n      outputCollection = this.collectionService.filterCollection(outputCollection, filterBy, filterCollectionBy);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  /**\r\n   * user might want to sort the collection in a certain way\r\n   * @param inputCollection\r\n   * @return outputCollection filtered and/or sorted collection\r\n   */\r\n  protected sortCollection(inputCollection: any[]): any[] {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to sort the collection\r\n    if (this.columnFilter && this.columnFilter.collectionSortBy) {\r\n      const sortBy = this.columnFilter.collectionSortBy;\r\n      outputCollection = this.collectionService.sortCollection(this.columnDef, outputCollection, sortBy, this.enableTranslateLabel);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  protected async renderOptionsAsync(collectionAsync: Promise<any> | Observable<any> | Subject<any>): Promise<boolean> {\r\n    if (collectionAsync) {\r\n      const awaitedCollection = await castToPromise(collectionAsync);\r\n      this.renderDomElementFromCollectionAsync(awaitedCollection);\r\n\r\n      // because we accept Promises & HttpClient Observable only execute once\r\n      // we will re-create an RxJs Subject which will replace the \"collectionAsync\" which got executed once anyway\r\n      // doing this provide the user a way to call a \"collectionAsync.next()\"\r\n      this.createCollectionAsyncSubject();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** Create or recreate an Observable Subject and reassign it to the \"collectionAsync\" object so user can call a \"collectionAsync.next()\" on it */\r\n  protected createCollectionAsyncSubject() {\r\n    const newCollectionAsync = new Subject<any>();\r\n    this.columnFilter.collectionAsync = newCollectionAsync;\r\n    this.subscriptions.push(\r\n      newCollectionAsync.subscribe(collection => this.renderDomElementFromCollectionAsync(collection))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When user use a CollectionAsync we will use the returned collection to render the filter DOM element\r\n   * and reinitialize filter collection with this new collection\r\n   */\r\n  protected renderDomElementFromCollectionAsync(collection) {\r\n    this._collection = collection;\r\n    if (this.collectionOptions && (this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty)) {\r\n      const collectionInsideObjectProperty = this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty;\r\n      collection = getDescendantProperty(collection, collectionInsideObjectProperty);\r\n    }\r\n    if (!Array.isArray(collection)) {\r\n      throw new Error('Something went wrong while trying to pull the collection from the \"collectionAsync\" call in the AutoComplete Filter, the collection is not a valid array.');\r\n    }\r\n\r\n    // copy over the array received from the async call to the \"collection\" as the new collection to use\r\n    // this has to be BEFORE the `collectionObserver().subscribe` to avoid going into an infinite loop\r\n    this.columnFilter.collection = collection;\r\n\r\n    // recreate Filter DOM element after getting async collection\r\n    this.renderDomElement(collection);\r\n  }\r\n\r\n  protected renderDomElement(collection: any[]) {\r\n    if (!Array.isArray(collection) && this.collectionOptions && (this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty)) {\r\n      const collectionInsideObjectProperty = this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty;\r\n      collection = getDescendantProperty(collection, collectionInsideObjectProperty);\r\n    }\r\n    if (!Array.isArray(collection)) {\r\n      throw new Error('The \"collection\" passed to the Autocomplete Filter is not a valid array.');\r\n    }\r\n\r\n    // assign the collection to a temp variable before filtering/sorting the collection\r\n    let newCollection = collection;\r\n\r\n    // user might want to filter and/or sort certain items of the collection\r\n    newCollection = this.filterCollection(newCollection);\r\n    newCollection = this.sortCollection(newCollection);\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString();\r\n\r\n    // step 2, create the DOM Element of the filter & pre-load search term\r\n    // also subscribe to the onSelect event\r\n    this._collection = newCollection;\r\n    this.$filterElm = this.createDomElement(filterTemplate, newCollection, searchTerm);\r\n\r\n    // step 3, subscribe to the input change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterElm.on('input', (e: any) => {\r\n      let value = e && e.target && e.target.value || '';\r\n      const enableWhiteSpaceTrim = this.gridOptions.enableFilterTrimWhiteSpace || this.columnFilter.enableTrimWhiteSpace;\r\n      if (typeof value === 'string' && enableWhiteSpaceTrim) {\r\n        value = value.trim();\r\n      }\r\n\r\n      if (this._clearFilterTriggered) {\r\n        this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n        this.$filterElm.removeClass('filled');\r\n      } else {\r\n        value === '' ? this.$filterElm.removeClass('filled') : this.$filterElm.addClass('filled');\r\n        this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: [value], shouldTriggerQuery: this._shouldTriggerQuery });\r\n      }\r\n      // reset both flags for next use\r\n      this._clearFilterTriggered = false;\r\n      this._shouldTriggerQuery = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create the HTML template as a string\r\n   */\r\n  private buildTemplateHtmlString() {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    let placeholder = (this.gridOptions) ? (this.gridOptions.defaultFilterPlaceholder || '') : '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    return `<input type=\"text\" role=\"presentation\" autocomplete=\"off\" class=\"form-control autocomplete search-filter filter-${columnId}\" placeholder=\"${placeholder}\">`;\r\n  }\r\n\r\n  /**\r\n   * From the html template string, create a DOM element\r\n   * @param filterTemplate\r\n   */\r\n  private createDomElement(filterTemplate: string, collection: any[], searchTerm?: SearchTerm) {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(columnId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    this.$filterElm = $(filterTemplate) as any;\r\n    const searchTermInput = searchTerm as string;\r\n\r\n    // user might provide his own custom structure\r\n    // jQuery UI autocomplete requires a label/value pair, so we must remap them when user provide different ones\r\n    if (Array.isArray(collection)) {\r\n      collection = collection.map((item) => {\r\n        return { label: item[this.labelName], value: item[this.valueName], labelPrefix: item[this.labelPrefixName] || '', labelSuffix: item[this.labelSuffixName] || '' };\r\n      });\r\n    }\r\n\r\n    // user might pass his own autocomplete options\r\n    const autoCompleteOptions = this.filterOptions;\r\n\r\n    // when user passes it's own autocomplete options\r\n    // we still need to provide our own \"select\" callback implementation\r\n    if (autoCompleteOptions && autoCompleteOptions.source) {\r\n      autoCompleteOptions.select = (event: Event, ui: { item: any; }) => this.onSelect(event, ui);\r\n      this._autoCompleteOptions = { ...autoCompleteOptions };\r\n      // when renderItem is defined, we need to add our custom style CSS class\r\n      if (this._autoCompleteOptions.renderItem) {\r\n        this._autoCompleteOptions.classes = {\r\n          'ui-autocomplete': `autocomplete-custom-${toKebabCase(this._autoCompleteOptions.renderItem.layout)}`\r\n        };\r\n      }\r\n\r\n      // create the jQueryUI AutoComplete\r\n      this.$filterElm.autocomplete(this._autoCompleteOptions);\r\n\r\n      // when \"renderItem\" is defined, we need to call the user's custom renderItem template callback\r\n      if (this._autoCompleteOptions.renderItem) {\r\n        this.$filterElm.autocomplete('instance')._renderItem = this.renderCustomItem.bind(this);\r\n      }\r\n    } else {\r\n      const definedOptions: AutocompleteOption = {\r\n        minLength: 0,\r\n        source: collection,\r\n        select: (event: Event, ui: { item: any; }) => this.onSelect(event, ui),\r\n      };\r\n      this._autoCompleteOptions = { ...definedOptions, ...this.filterOptions };\r\n      this.$filterElm.autocomplete(this._autoCompleteOptions);\r\n\r\n      // we'll use our own renderer so that it works with label prefix/suffix and also with html rendering when enabled\r\n      this.$filterElm.autocomplete('instance')._renderItem = this.renderCollectionItem.bind(this);\r\n    }\r\n\r\n    this.$filterElm.val(searchTermInput);\r\n    this.$filterElm.data('columnId', columnId);\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm) {\r\n      this.$filterElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if (this.$filterElm && typeof this.$filterElm.appendTo === 'function') {\r\n      const $container = $(`<div class=\"autocomplete-container\"></div>`);\r\n      $container.appendTo($headerElm);\r\n      this.$filterElm.appendTo($container);\r\n\r\n      // add a <span> in order to add spinner styling\r\n      $(`<span></span>`).appendTo($container);\r\n    }\r\n\r\n    // we could optionally trigger a search when clicking on the AutoComplete\r\n    if (this.filterOptions.openSearchListOnFocus) {\r\n      this.$filterElm.click(() => this.$filterElm.autocomplete('search', this.$filterElm.val()));\r\n    }\r\n\r\n    // user might override any of the jQueryUI callback methods\r\n    if (this.columnFilter.callbacks) {\r\n      for (const callback of Object.keys(this.columnFilter.callbacks)) {\r\n        if (typeof this.columnFilter.callbacks[callback] === 'function') {\r\n          this.$filterElm.autocomplete('instance')[callback] = this.columnFilter.callbacks[callback];\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.$filterElm;\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  // this function should be PRIVATE but for unit tests purposes we'll make it public until a better solution is found\r\n  // a better solution would be to get the autocomplete DOM element to work with selection but I couldn't find how to do that in Jest\r\n  onSelect(event: Event, ui: { item: any; }) {\r\n    if (ui && ui.item) {\r\n      const item = ui.item;\r\n      // when the user defines a \"renderItem\" (or \"_renderItem\") template, then we assume the user defines his own custom structure of label/value pair\r\n      // otherwise we know that jQueryUI always require a label/value pair, we can pull them directly\r\n      const hasCustomRenderItemCallback = this.columnFilter && this.columnFilter.callbacks && this.columnFilter.callbacks.hasOwnProperty('_renderItem') || (this.columnFilter && this.columnFilter.filterOptions && this.columnFilter.filterOptions.renderItem) || false;\r\n\r\n      const itemLabel = typeof item === 'string' ? item : (hasCustomRenderItemCallback ? item[this.labelName] : item.label);\r\n      const itemValue = typeof item === 'string' ? item : (hasCustomRenderItemCallback ? item[this.valueName] : item.value);\r\n      this.setValues(itemLabel);\r\n      itemValue === '' ? this.$filterElm.removeClass('filled') : this.$filterElm.addClass('filled');\r\n      this.callback(event, { columnDef: this.columnDef, operator: this.operator, searchTerms: [itemValue], shouldTriggerQuery: this._shouldTriggerQuery });\r\n\r\n      // reset both flags for next use\r\n      this._clearFilterTriggered = false;\r\n      this._shouldTriggerQuery = true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  protected renderCustomItem(ul: HTMLElement, item: any) {\r\n    const templateString = this._autoCompleteOptions && this._autoCompleteOptions.renderItem && this._autoCompleteOptions.renderItem.templateCallback(item) || '';\r\n\r\n    // sanitize any unauthorized html tags like script and others\r\n    // for the remaining allowed tags we'll permit all attributes\r\n    const sanitizedTemplateText = (DOMPurify.sanitize(templateString, {}) || '').toString();\r\n\r\n    return $('<li></li>')\r\n      .data('item.autocomplete', item)\r\n      .append(sanitizedTemplateText)\r\n      .appendTo(ul);\r\n  }\r\n\r\n  protected renderCollectionItem(ul: any, item: any) {\r\n    const isRenderHtmlEnabled = this.columnFilter && this.columnFilter.enableRenderHtml || false;\r\n    const prefixText = item.labelPrefix || '';\r\n    const labelText = item.label || '';\r\n    const suffixText = item.labelSuffix || '';\r\n    const finalText = prefixText + labelText + suffixText;\r\n\r\n    // sanitize any unauthorized html tags like script and others\r\n    // for the remaining allowed tags we'll permit all attributes\r\n    const sanitizedText = (DOMPurify.sanitize(finalText, {}) || '').toString();\r\n\r\n    const $liDiv = $('<div></div>')[isRenderHtmlEnabled ? 'html' : 'text'](sanitizedText);\r\n    return $('<li></li>')\r\n      .data('item.autocomplete', item)\r\n      .append($liDiv)\r\n      .appendTo(ul);\r\n  }\r\n}\r\n","import { OperatorString } from '../models/operatorString';\r\nimport { htmlEncodedStringWithPadding } from '../services/utilities';\r\n\r\nexport function buildSelectOperatorHtmlString(optionValues: Array<{ operator: OperatorString, description: string }>) {\r\n  let optionValueString = '';\r\n  optionValues.forEach(option => {\r\n    optionValueString += `<option value=\"${option.operator}\">${htmlEncodedStringWithPadding(option.operator, 3)}${option.description}</option>`;\r\n  });\r\n\r\n  return `<select class=\"form-control\">${optionValueString}</select>`;\r\n}\r\n","import { Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport Flatpickr from 'flatpickr';\r\nimport { BaseOptions as FlatpickrBaseOptions } from 'flatpickr/dist/types/options';\r\n\r\nimport { Constants } from '../constants';\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  FieldType,\r\n  FlatpickrOption,\r\n  GridOption,\r\n  Locale,\r\n  OperatorString,\r\n  OperatorType,\r\n  SearchTerm,\r\n} from './../models/index';\r\nimport { buildSelectOperatorHtmlString } from './filterUtilities';\r\nimport { destroyObjectDomElementProps, getTranslationPrefix, mapFlatpickrDateFormatWithFieldType, mapOperatorToShorthandDesignation } from '../services/utilities';\r\n\r\n// use Flatpickr from import or 'require', whichever works first\r\ndeclare function require(name: string): any;\r\nrequire('flatpickr');\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class CompoundDateFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _currentDate: Date;\r\n  private _flatpickrOptions: FlatpickrOption;\r\n  private _shouldTriggerQuery = true;\r\n  private $filterElm: any;\r\n  private $filterInputElm: any;\r\n  private $selectOperatorElm: any;\r\n  private _currentValue: string;\r\n  private _operator: OperatorType | OperatorString;\r\n  flatInstance: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor(@Optional() private translate: TranslateService) { }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter for the Current Dates selected */\r\n  get currentDate(): Date {\r\n    return this._currentDate;\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.empty;\r\n  }\r\n\r\n  /** Getter for the Flatpickr Options */\r\n  get flatpickrOptions(): FlatpickrOption {\r\n    return this._flatpickrOptions || {};\r\n  }\r\n\r\n  /** Getter for the single Locale texts provided by the user in main file or else use default English locales via the Constants */\r\n  get locales(): Locale {\r\n    return this.gridOptions.locales || Constants.locales;\r\n  }\r\n\r\n  /** Getter for the Filter Operator */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this._operator || this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the Filter Operator */\r\n  set operator(op: OperatorType | OperatorString) {\r\n    this._operator = op;\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.operator = args.operator || '';\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // date input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create the DOM Element of the filter which contain the compound Operator+Input\r\n    // and initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(searchTerm);\r\n\r\n    // step 3, subscribe to the keyup event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterInputElm.keyup((e: any) => {\r\n      this.onTriggerEvent(e);\r\n    });\r\n    this.$selectOperatorElm.change((e: any) => {\r\n      this.onTriggerEvent(e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.flatInstance && this.$selectOperatorElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this.$selectOperatorElm.val(0);\r\n      this.flatInstance.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.flatInstance && typeof this.flatInstance.destroy === 'function') {\r\n      this.flatInstance.destroy();\r\n      if (this.flatInstance.element) {\r\n        destroyObjectDomElementProps(this.flatInstance);\r\n      }\r\n      this.flatInstance = null;\r\n    }\r\n    if (this.$filterElm) {\r\n      this.$filterElm.off('keyup').remove();\r\n    }\r\n    if (this.$selectOperatorElm) {\r\n      this.$selectOperatorElm.off('change').remove();\r\n    }\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n    this.onTriggerEvent = null;\r\n  }\r\n\r\n  hide() {\r\n    if (this.flatInstance && typeof this.flatInstance.close === 'function') {\r\n      this.flatInstance.close();\r\n    }\r\n  }\r\n\r\n  show() {\r\n    if (this.flatInstance && typeof this.flatInstance.open === 'function') {\r\n      this.flatInstance.open();\r\n    }\r\n  }\r\n\r\n  /** Set value(s) in the DOM element, we can optionally pass an operator and/or trigger a change event */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (this.flatInstance && values) {\r\n      const newValue = Array.isArray(values) ? values[0] : values;\r\n      this._currentDate = newValue as Date;\r\n      this.flatInstance.setDate(newValue);\r\n    }\r\n\r\n    // set the operator, in the DOM as well, when defined\r\n    this.operator = operator || this.defaultOperator;\r\n    if (operator && this.$selectOperatorElm) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n  private buildDatePickerInput(searchTerm?: SearchTerm) {\r\n    const inputFormat = mapFlatpickrDateFormatWithFieldType(this.columnFilter.type || this.columnDef.type || FieldType.dateIso);\r\n    const outputFormat = mapFlatpickrDateFormatWithFieldType(this.columnDef.outputType || this.columnFilter.type || this.columnDef.type || FieldType.dateUtc);\r\n    const userFilterOptions = (this.columnFilter && this.columnFilter.filterOptions || {}) as FlatpickrOption;\r\n\r\n    // get current locale, if user defined a custom locale just use or get it the Translate Service if it exist else just use English\r\n    let currentLocale = (userFilterOptions && userFilterOptions.locale) || (this.translate && this.translate.currentLang) || this.gridOptions.locale || 'en';\r\n    if (currentLocale && currentLocale.length > 2) {\r\n      currentLocale = currentLocale.substring(0, 2);\r\n    }\r\n\r\n    // if we are preloading searchTerms, we'll keep them for reference\r\n    if (searchTerm) {\r\n      this._currentDate = searchTerm as Date;\r\n    }\r\n\r\n    const pickerOptions: FlatpickrOption = {\r\n      defaultDate: (searchTerm as string) || '',\r\n      altInput: true,\r\n      altFormat: outputFormat,\r\n      dateFormat: inputFormat,\r\n      wrap: true,\r\n      closeOnSelect: true,\r\n      locale: (currentLocale !== 'en') ? this.loadFlatpickrLocale(currentLocale) : 'en',\r\n      onChange: (selectedDates: Date[] | Date, dateStr: string) => {\r\n        this._currentValue = dateStr;\r\n        this._currentDate = Array.isArray(selectedDates) && selectedDates[0];\r\n\r\n        // when using the time picker, we can simulate a keyup event to avoid multiple backend request\r\n        // since backend request are only executed after user start typing, changing the time should be treated the same way\r\n        let customEvent: CustomEvent | undefined;\r\n        if (pickerOptions.enableTime) {\r\n          customEvent = new CustomEvent('keyup');\r\n        }\r\n        this.onTriggerEvent(customEvent);\r\n      }\r\n    };\r\n\r\n    // add the time picker when format is UTC (Z) or has the 'h' (meaning hours)\r\n    if (outputFormat && (outputFormat === 'Z' || outputFormat.toLowerCase().includes('h'))) {\r\n      pickerOptions.enableTime = true;\r\n    }\r\n\r\n    // merge options with optional user's custom options\r\n    this._flatpickrOptions = { ...pickerOptions, ...userFilterOptions };\r\n\r\n    let placeholder = (this.gridOptions) ? (this.gridOptions.defaultFilterPlaceholder || '') : '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    const $filterInputElm: any = $(`<div class=\"flatpickr\"><input type=\"text\" class=\"form-control\" data-input placeholder=\"${placeholder}\"></div>`);\r\n    this.flatInstance = ($filterInputElm[0] && typeof $filterInputElm[0].flatpickr === 'function') ? $filterInputElm[0].flatpickr(this._flatpickrOptions) : Flatpickr($filterInputElm, this._flatpickrOptions as unknown as Partial<FlatpickrBaseOptions>);\r\n    return $filterInputElm;\r\n  }\r\n\r\n  private getOptionValues(): { operator: OperatorString, description: string }[] {\r\n    return [\r\n      { operator: '', description: '' },\r\n      { operator: '=', description: this.getOutputText('EQUAL_TO', 'TEXT_EQUAL_TO', 'Equal to') },\r\n      { operator: '<', description: this.getOutputText('LESS_THAN', 'TEXT_LESS_THAN', 'Less than') },\r\n      { operator: '<=', description: this.getOutputText('LESS_THAN_OR_EQUAL_TO', 'TEXT_LESS_THAN_OR_EQUAL_TO', 'Less than or equal to') },\r\n      { operator: '>', description: this.getOutputText('GREATER_THAN', 'TEXT_GREATER_THAN', 'Greater than') },\r\n      { operator: '>=', description: this.getOutputText('GREATER_THAN_OR_EQUAL_TO', 'TEXT_GREATER_THAN_OR_EQUAL_TO', 'Greater than or equal to') },\r\n      { operator: '<>', description: this.getOutputText('NOT_EQUAL_TO', 'TEXT_NOT_EQUAL_TO', 'Not equal to') }\r\n    ];\r\n  }\r\n\r\n  /** Get Locale, Translated or a Default Text if first two aren't detected */\r\n  private getOutputText(translationKey: string, localeText: string, defaultText: string): string {\r\n    if (this.gridOptions && this.gridOptions.enableTranslate && this.translate && this.translate.instant) {\r\n      const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n      return this.translate.instant(`${translationPrefix}${translationKey}`);\r\n    }\r\n    return this.locales && this.locales[localeText] || defaultText;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM element\r\n   */\r\n  private createDomElement(searchTerm?: SearchTerm) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM Select dropdown for the Operator\r\n    const selectOperatorHtmlString = buildSelectOperatorHtmlString(this.getOptionValues());\r\n    this.$selectOperatorElm = $(selectOperatorHtmlString);\r\n    this.$filterInputElm = this.buildDatePickerInput(searchTerm);\r\n    const $filterContainerElm = $(`<div class=\"form-group search-filter filter-${fieldId}\"></div>`);\r\n    const $containerInputGroup = $(`<div class=\"input-group flatpickr\"></div>`);\r\n    const $operatorInputGroupAddon = $(`<div class=\"input-group-addon input-group-prepend operator\"></div>`);\r\n\r\n    /* the DOM element final structure will be\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-addon input-group-prepend operator\">\r\n          <select class=\"form-control\"></select>\r\n        </div>\r\n        <div class=flatpickr>\r\n          <input type=\"text\" class=\"form-control\" data-input>\r\n        </div>\r\n      </div>\r\n    */\r\n    $operatorInputGroupAddon.append(this.$selectOperatorElm);\r\n    $containerInputGroup.append($operatorInputGroupAddon);\r\n    $containerInputGroup.append(this.$filterInputElm);\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    $filterContainerElm.append($containerInputGroup);\r\n    this.$filterInputElm.data('columnId', fieldId);\r\n\r\n    if (this.operator) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm && searchTerm !== '') {\r\n      this.$filterInputElm.addClass('filled');\r\n      this._currentDate = searchTerm as Date;\r\n      this._currentValue = searchTerm as string;\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterContainerElm && typeof $filterContainerElm.appendTo === 'function') {\r\n      $filterContainerElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterContainerElm;\r\n  }\r\n\r\n  /** Load a different set of locales for Flatpickr to be localized */\r\n  private loadFlatpickrLocale(language: string) {\r\n    let locales = 'en';\r\n\r\n    try {\r\n      if (language !== 'en') {\r\n        // change locale if needed, Flatpickr reference: https://chmln.github.io/flatpickr/localization/\r\n        const localeDefault: any = require(`flatpickr/dist/l10n/${language}.js`).default;\r\n        locales = (localeDefault && localeDefault[language]) ? localeDefault[language] : 'en';\r\n      }\r\n    } catch (e) {\r\n      console.warn(`[Angular-Slickgrid - CompoundDate Filter] It seems that \"${language}\" is not a locale supported by Flatpickr, we will use \"en\" instead. `\r\n        + `To avoid seeing this message, you can specifically set \"filter: { filterOptions: { locale: 'en' } }\" in your column definition.`);\r\n      return 'en';\r\n    }\r\n    return locales;\r\n  }\r\n\r\n  private onTriggerEvent(e: Event | undefined) {\r\n    if (this._clearFilterTriggered) {\r\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n      this.$filterElm.removeClass('filled');\r\n    } else {\r\n      const selectedOperator = this.$selectOperatorElm.find('option:selected').val();\r\n      (this._currentValue) ? this.$filterElm.addClass('filled') : this.$filterElm.removeClass('filled');\r\n      this.callback(e, { columnDef: this.columnDef, searchTerms: (this._currentValue ? [this._currentValue] : null), operator: selectedOperator || '', shouldTriggerQuery: this._shouldTriggerQuery });\r\n    }\r\n    // reset both flags for next use\r\n    this._clearFilterTriggered = false;\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\n\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  FieldType,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  Locale,\r\n  GridOption,\r\n  OperatorString,\r\n  OperatorType,\r\n  SearchTerm,\r\n} from './../models/index';\r\nimport { Constants } from './../constants';\r\nimport { buildSelectOperatorHtmlString } from './filterUtilities';\r\nimport { getTranslationPrefix, mapOperatorToShorthandDesignation } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class CompoundInputFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _locales: Locale;\r\n  private _shouldTriggerQuery = true;\r\n  private _inputType = 'text';\r\n  private $filterElm: any;\r\n  private $filterInputElm: any;\r\n  private $selectOperatorElm: any;\r\n  private _operator: OperatorType | OperatorString;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor(protected translate: TranslateService) { }\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.empty;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter of input type (text, number, password) */\r\n  get inputType() {\r\n    return this._inputType;\r\n  }\r\n\r\n  /** Setter of input type (text, number, password) */\r\n  set inputType(type: string) {\r\n    this._inputType = type;\r\n  }\r\n\r\n  /** Getter for the single Locale texts provided by the user in main file or else use default English locales via the Constants */\r\n  get locales(): Locale {\r\n    return this.gridOptions.locales || Constants.locales;\r\n  }\r\n\r\n  /** Getter of the Operator to use when doing the filter comparing */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this._operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Getter of the Operator to use when doing the filter comparing */\r\n  set operator(op: OperatorType | OperatorString) {\r\n    this._operator = op;\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.operator = args.operator;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create the DOM Element of the filter which contain the compound Operator+Input\r\n    // and initialize it if searchTerms is filled\r\n    this.$filterElm = this.createDomElement(searchTerm);\r\n\r\n    // step 3, subscribe to the input change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterInputElm.on('keyup input', this.onTriggerEvent.bind(this));\r\n    this.$selectOperatorElm.on('change', this.onTriggerEvent.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm && this.$selectOperatorElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this.$selectOperatorElm.val(0);\r\n      this.$filterInputElm.val('');\r\n      this.onTriggerEvent(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.$filterElm && this.$selectOperatorElm) {\r\n      this.$filterElm.off('keyup input').remove();\r\n      this.$selectOperatorElm.off('change');\r\n    }\r\n    this.$filterElm = null;\r\n    this.$selectOperatorElm = null;\r\n    this.callback = null;\r\n    this.onTriggerEvent = null;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (values) {\r\n      const newValue = Array.isArray(values) ? values[0] : values;\r\n      this.$filterInputElm.val(newValue);\r\n    }\r\n\r\n    // set the operator, in the DOM as well, when defined\r\n    this.operator = operator || this.defaultOperator;\r\n    if (operator && this.$selectOperatorElm) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  private buildInputHtmlString() {\r\n    let placeholder = (this.gridOptions) ? (this.gridOptions.defaultFilterPlaceholder || '') : '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    return `<input type=\"${this._inputType || 'text'}\" role=\"presentation\"  autocomplete=\"off\" class=\"form-control compound-input\" placeholder=\"${placeholder}\" /><span></span>`;\r\n  }\r\n\r\n  private getOptionValues(): { operator: OperatorString, description: string }[] {\r\n    const type = (this.columnDef.type && this.columnDef.type) ? this.columnDef.type : FieldType.string;\r\n    let optionValues = [];\r\n\r\n    switch (type) {\r\n      case FieldType.string:\r\n      case FieldType.text:\r\n      case FieldType.readonly:\r\n      case FieldType.password:\r\n        optionValues = [\r\n          { operator: '' as OperatorString, description: this.getOutputText('CONTAINS', 'TEXT_CONTAINS', 'Contains') },\r\n          { operator: '=' as OperatorString, description: this.getOutputText('EQUALS', 'TEXT_EQUALS', 'Equals') },\r\n          { operator: 'a*' as OperatorString, description: this.getOutputText('STARTS_WITH', 'TEXT_STARTS_WITH', 'Starts with') },\r\n          { operator: '*z' as OperatorString, description: this.getOutputText('ENDS_WITH', 'TEXT_ENDS_WITH', 'Ends with') },\r\n        ];\r\n        break;\r\n      default:\r\n        optionValues = [\r\n          { operator: '' as OperatorString, description: '' },\r\n          { operator: '=' as OperatorString, description: this.getOutputText('EQUAL_TO', 'TEXT_EQUAL_TO', 'Equal to') },\r\n          { operator: '<' as OperatorString, description: this.getOutputText('LESS_THAN', 'TEXT_LESS_THAN', 'Less than') },\r\n          { operator: '<=' as OperatorString, description: this.getOutputText('LESS_THAN_OR_EQUAL_TO', 'TEXT_LESS_THAN_OR_EQUAL_TO', 'Less than or equal to') },\r\n          { operator: '>' as OperatorString, description: this.getOutputText('GREATER_THAN', 'TEXT_GREATER_THAN', 'Greater than') },\r\n          { operator: '>=' as OperatorString, description: this.getOutputText('GREATER_THAN_OR_EQUAL_TO', 'TEXT_GREATER_THAN_OR_EQUAL_TO', 'Greater than or equal to') },\r\n          { operator: '<>' as OperatorString, description: this.getOutputText('NOT_EQUAL_TO', 'TEXT_NOT_EQUAL_TO', 'Not equal to') }\r\n        ];\r\n        break;\r\n    }\r\n\r\n    return optionValues;\r\n  }\r\n\r\n  /** Get Locale, Translated or a Default Text if first two aren't detected */\r\n  private getOutputText(translationKey: string, localeText: string, defaultText: string): string {\r\n    if (this.gridOptions && this.gridOptions.enableTranslate && this.translate && this.translate.instant) {\r\n      const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n      return this.translate.instant(`${translationPrefix}${translationKey}`);\r\n    }\r\n    return this.locales && this.locales[localeText] || defaultText;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM element\r\n   */\r\n  private createDomElement(searchTerm?: SearchTerm) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM Select dropdown for the Operator\r\n    const selectOperatorHtmlString = buildSelectOperatorHtmlString(this.getOptionValues());\r\n    this.$selectOperatorElm = $(selectOperatorHtmlString);\r\n    this.$filterInputElm = $(this.buildInputHtmlString());\r\n    const $filterContainerElm = $(`<div class=\"form-group search-filter filter-${fieldId}\"></div>`);\r\n    const $containerInputGroup = $(`<div class=\"input-group\"></div>`);\r\n    const $operatorInputGroupAddon = $(`<div class=\"input-group-addon input-group-prepend operator\"></div>`);\r\n\r\n    /* the DOM element final structure will be\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-addon input-group-prepend operator\">\r\n          <select class=\"form-control\"></select>\r\n        </div>\r\n        <input class=\"form-control compount-input\" type=\"text\" />\r\n      </div>\r\n    */\r\n    $operatorInputGroupAddon.append(this.$selectOperatorElm);\r\n    $containerInputGroup.append($operatorInputGroupAddon);\r\n    $containerInputGroup.append(this.$filterInputElm);\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    $filterContainerElm.append($containerInputGroup);\r\n\r\n    this.$filterInputElm.val(searchTerm);\r\n    this.$filterInputElm.data('columnId', fieldId);\r\n\r\n    if (this.operator) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm) {\r\n      $filterContainerElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterContainerElm && typeof $filterContainerElm.appendTo === 'function') {\r\n      $filterContainerElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterContainerElm;\r\n  }\r\n\r\n  private onTriggerEvent(e: KeyboardEvent | undefined) {\r\n    // we'll use the \"input\" event for everything (keyup, change, mousewheel & spinner)\r\n    // with 1 small exception, we need to use the keyup event to handle ENTER key, everything will be processed by the \"input\" event\r\n    if (e && e.type === 'keyup' && e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    if (this._clearFilterTriggered) {\r\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n      this.$filterElm.removeClass('filled');\r\n    } else {\r\n      const selectedOperator = this.$selectOperatorElm.find('option:selected').val();\r\n      let value = this.$filterInputElm.val();\r\n      const enableWhiteSpaceTrim = this.gridOptions.enableFilterTrimWhiteSpace || this.columnFilter.enableTrimWhiteSpace;\r\n      if (typeof value === 'string' && enableWhiteSpaceTrim) {\r\n        value = value.trim();\r\n      }\r\n\r\n      (value !== null && value !== undefined && value !== '') ? this.$filterElm.addClass('filled') : this.$filterElm.removeClass('filled');\r\n      this.callback(e, { columnDef: this.columnDef, searchTerms: (value ? [value] : null), operator: selectedOperator || '', shouldTriggerQuery: this._shouldTriggerQuery });\r\n    }\r\n    // reset both flags for next use\r\n    this._clearFilterTriggered = false;\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { CompoundInputFilter } from './compoundInputFilter';\r\n\r\nexport class CompoundInputNumberFilter extends CompoundInputFilter {\r\n  /** Initialize the Filter */\r\n  constructor(protected translate: TranslateService) {\r\n    super(translate);\r\n    this.inputType = 'number';\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { CompoundInputFilter } from './compoundInputFilter';\r\n\r\nexport class CompoundInputPasswordFilter extends CompoundInputFilter {\r\n  /** Initialize the Filter */\r\n  constructor(protected translate: TranslateService) {\r\n    super(translate);\r\n    this.inputType = 'password';\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\n\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  GridOption,\r\n  Locale,\r\n  OperatorString,\r\n  OperatorType,\r\n  SearchTerm,\r\n} from './../models/index';\r\nimport { Constants } from '../constants';\r\nimport { buildSelectOperatorHtmlString } from './filterUtilities';\r\nimport { getTranslationPrefix, mapOperatorToShorthandDesignation } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nconst DEFAULT_MIN_VALUE = 0;\r\nconst DEFAULT_MAX_VALUE = 100;\r\nconst DEFAULT_STEP = 1;\r\n\r\nexport class CompoundSliderFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _currentValue: number;\r\n  private _shouldTriggerQuery = true;\r\n  private _elementRangeInputId: string;\r\n  private _elementRangeOutputId: string;\r\n  private _operator: OperatorType | OperatorString;\r\n  private $containerInputGroupElm: any;\r\n  private $filterElm: any;\r\n  private $filterInputElm: any;\r\n  private $selectOperatorElm: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor(protected translate: TranslateService) { }\r\n\r\n  /** Getter for the Filter Operator */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.empty;\r\n  }\r\n\r\n  /** Getter for the Filter Generic Params */\r\n  private get filterParams(): any {\r\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.params || {};\r\n  }\r\n\r\n  /** Getter for the `filter` properties */\r\n  private get filterProperties(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter for the single Locale texts provided by the user in main file or else use default English locales via the Constants */\r\n  get locales(): Locale {\r\n    return this.gridOptions.locales || Constants.locales;\r\n  }\r\n\r\n  /** Getter for the Filter Operator */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this._operator || this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the Filter Operator */\r\n  set operator(op: OperatorType | OperatorString) {\r\n    this._operator = op;\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.operator = args.operator || '';\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // define the input & slider number IDs\r\n    this._elementRangeInputId = `rangeInput_${this.columnDef.field}`;\r\n    this._elementRangeOutputId = `rangeOutput_${this.columnDef.field}`;\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create the DOM Element of the filter which contain the compound Operator+Input\r\n    // and initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(searchTerm);\r\n\r\n    // step 3, subscribe to the input change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterInputElm.on('change', this.onTriggerEvent.bind(this));\r\n    this.$selectOperatorElm.on('change', this.onTriggerEvent.bind(this));\r\n\r\n    // if user chose to display the slider number on the right side, then update it every time it changes\r\n    // we need to use both \"input\" and \"change\" event to be all cross-browser\r\n    if (!this.filterParams.hideSliderNumber) {\r\n      this.$filterInputElm.on('input change', (e: { target: HTMLInputElement }) => {\r\n        const value = e && e.target && e.target.value || '';\r\n        if (value) {\r\n          const elements = document.getElementsByClassName(this._elementRangeOutputId);\r\n          if (elements.length) {\r\n            elements[0].innerHTML = value;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm && this.$selectOperatorElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      const clearedValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : DEFAULT_MIN_VALUE;\r\n      this._currentValue = +clearedValue;\r\n      this.$selectOperatorElm.val(0);\r\n      this.$filterInputElm.val(clearedValue);\r\n      if (!this.filterParams.hideSliderNumber) {\r\n        this.$containerInputGroupElm.children('div.input-group-addon.input-group-append').children().last().html(clearedValue);\r\n      }\r\n      this.onTriggerEvent(undefined);\r\n      this.$filterElm.removeClass('filled');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.$filterInputElm) {\r\n      this.$filterInputElm.off('input change').remove();\r\n      this.$selectOperatorElm.off('change').remove();\r\n    }\r\n    this.$filterInputElm = null;\r\n    this.$filterElm = null;\r\n    this.$selectOperatorElm = null;\r\n    this.callback = null;\r\n    this.onTriggerEvent = null;\r\n  }\r\n\r\n  /**\r\n   * Get selected value retrieved from the slider element\r\n   * @params selected items\r\n   */\r\n  getValues(): number {\r\n    return this._currentValue;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    const newValue = Array.isArray(values) ? values[0] : values;\r\n    this._currentValue = +newValue;\r\n    this.$filterInputElm.val(newValue);\r\n    this.$containerInputGroupElm.children('div.input-group-addon.input-group-append').children().last().html(newValue);\r\n\r\n    // set the operator, in the DOM as well, when defined\r\n    this.operator = operator || this.defaultOperator;\r\n    if (operator && this.$selectOperatorElm) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  /** Build HTML Template for the input range (slider) */\r\n  private buildTemplateHtmlString() {\r\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\r\n    const maxValue = this.filterProperties.hasOwnProperty('maxValue') ? this.filterProperties.maxValue : DEFAULT_MAX_VALUE;\r\n    const defaultValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue;\r\n    const step = this.filterProperties.hasOwnProperty('valueStep') ? this.filterProperties.valueStep : DEFAULT_STEP;\r\n\r\n    return `<input type=\"range\" name=\"${this._elementRangeInputId}\"\r\n              defaultValue=\"${defaultValue}\" min=\"${minValue}\" max=\"${maxValue}\" step=\"${step}\"\r\n              class=\"form-control slider-filter-input range compound-slider ${this._elementRangeInputId}\" />`;\r\n  }\r\n\r\n  /** Build HTML Template for the text (number) that is shown appended to the slider */\r\n  private buildTemplateSliderTextHtmlString() {\r\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\r\n    const defaultValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue;\r\n\r\n    return `<div class=\"input-group-addon input-group-append slider-value\"><span class=\"input-group-text ${this._elementRangeOutputId}\">${defaultValue}</span></div>`;\r\n  }\r\n\r\n  /** Get the available operator option values */\r\n  private getOptionValues(): { operator: OperatorString, description: string }[] {\r\n    return [\r\n      { operator: '', description: '' },\r\n      { operator: '=', description: this.getOutputText('EQUAL_TO', 'TEXT_EQUAL_TO', 'Equal to') },\r\n      { operator: '<', description: this.getOutputText('LESS_THAN', 'TEXT_LESS_THAN', 'Less than') },\r\n      { operator: '<=', description: this.getOutputText('LESS_THAN_OR_EQUAL_TO', 'TEXT_LESS_THAN_OR_EQUAL_TO', 'Less than or equal to') },\r\n      { operator: '>', description: this.getOutputText('GREATER_THAN', 'TEXT_GREATER_THAN', 'Greater than') },\r\n      { operator: '>=', description: this.getOutputText('GREATER_THAN_OR_EQUAL_TO', 'TEXT_GREATER_THAN_OR_EQUAL_TO', 'Greater than or equal to') },\r\n      { operator: '<>', description: this.getOutputText('NOT_EQUAL_TO', 'TEXT_NOT_EQUAL_TO', 'Not equal to') }\r\n    ];\r\n  }\r\n\r\n  /** Get Locale, Translated or a Default Text if first two aren't detected */\r\n  private getOutputText(translationKey: string, localeText: string, defaultText: string): string {\r\n    if (this.gridOptions && this.gridOptions.enableTranslate && this.translate && this.translate.instant) {\r\n      const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n      return this.translate.instant(`${translationPrefix}${translationKey}`);\r\n    }\r\n    return this.locales && this.locales[localeText] || defaultText;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM element\r\n   */\r\n  private createDomElement(searchTerm?: SearchTerm) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\r\n    const startValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue;\r\n    const $headerElm = this.grid.getHeaderRowColumn(this.columnDef.id);\r\n    $($headerElm).empty();\r\n\r\n    let searchTermInput = (searchTerm || '0') as string;\r\n    if (+searchTermInput < minValue) {\r\n      searchTermInput = `${minValue}`;\r\n    }\r\n    if (+searchTermInput < startValue) {\r\n      searchTermInput = `${startValue}`;\r\n    }\r\n    this._currentValue = +searchTermInput;\r\n\r\n    // create the DOM Select dropdown for the Operator\r\n    const selectOperatorHtmlString = buildSelectOperatorHtmlString(this.getOptionValues());\r\n    this.$selectOperatorElm = $(selectOperatorHtmlString);\r\n    this.$filterInputElm = $(this.buildTemplateHtmlString());\r\n    const $filterContainerElm = $(`<div class=\"form-group slider-container search-filter filter-${fieldId}\"></div>`);\r\n    this.$containerInputGroupElm = $(`<div class=\"input-group search-filter filter-${fieldId}\"></div>`);\r\n    const $operatorInputGroupAddon = $(`<span class=\"input-group-addon input-group-prepend operator\"></span>`);\r\n\r\n    /* the DOM element final structure will be\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-addon input-group-prepend operator\">\r\n          <select class=\"form-control\"></select>\r\n        </div>\r\n        <input class=\"form-control\" type=\"text\" />\r\n        <div class=\"input-group-addon input-group-prepend rangeOuput_percentComplete\"><span class=\"input-group-text\">0</span></div>\r\n      </div>\r\n    */\r\n    $operatorInputGroupAddon.append(this.$selectOperatorElm);\r\n    this.$containerInputGroupElm.append($operatorInputGroupAddon);\r\n    this.$containerInputGroupElm.append(this.$filterInputElm);\r\n    if (!this.filterParams.hideSliderNumber) {\r\n      const $sliderTextInputAppendAddon = $(this.buildTemplateSliderTextHtmlString());\r\n      $sliderTextInputAppendAddon.children().html(searchTermInput);\r\n      this.$containerInputGroupElm.append($sliderTextInputAppendAddon);\r\n    }\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    $filterContainerElm.append(this.$containerInputGroupElm);\r\n\r\n    this.$filterInputElm.val(searchTermInput);\r\n    this.$filterInputElm.data('columnId', fieldId);\r\n\r\n    if (this.operator) {\r\n      const operatorShorthand = mapOperatorToShorthandDesignation(this.operator);\r\n      this.$selectOperatorElm.val(operatorShorthand);\r\n    }\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm !== '') {\r\n      $filterContainerElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterContainerElm && typeof $filterContainerElm.appendTo === 'function') {\r\n      $filterContainerElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterContainerElm;\r\n  }\r\n\r\n  private onTriggerEvent(e: Event | undefined) {\r\n    const value = this.$filterInputElm.val();\r\n    this._currentValue = +value;\r\n\r\n    if (this._clearFilterTriggered) {\r\n      this.$filterElm.removeClass('filled');\r\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n    } else {\r\n      this.$filterElm.addClass('filled');\r\n      const selectedOperator = this.$selectOperatorElm.find('option:selected').val();\r\n      this.callback(e, { columnDef: this.columnDef, searchTerms: (value ? [value || '0'] : null), operator: selectedOperator || '', shouldTriggerQuery: this._shouldTriggerQuery });\r\n    }\r\n    // reset both flags for next use\r\n    this._clearFilterTriggered = false;\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import {\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  GridOption,\r\n  OperatorType,\r\n  OperatorString,\r\n  SearchTerm,\r\n} from './../models/index';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class InputFilter implements Filter {\r\n  protected _clearFilterTriggered = false;\r\n  protected _shouldTriggerQuery = true;\r\n  protected _inputType = 'text';\r\n  protected $filterElm: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor() { }\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.empty;\r\n  }\r\n\r\n  /** Getter of input type (text, number, password) */\r\n  get inputType() {\r\n    return this._inputType;\r\n  }\r\n\r\n  /** Setter of input type (text, number, password) */\r\n  set inputType(type: string) {\r\n    this._inputType = type;\r\n  }\r\n\r\n  /** Getter of the Operator to use when doing the filter comparing */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  protected get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString();\r\n\r\n    // step 2, create the DOM Element of the filter & initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(filterTemplate, searchTerm);\r\n\r\n    // step 3, subscribe to the input change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterElm.on('keyup input', this.handleInputChange.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this.$filterElm.val('');\r\n      this.$filterElm.trigger('input');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.$filterElm) {\r\n      this.$filterElm.off('keyup input').remove();\r\n    }\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm, operator?: OperatorType | OperatorString) {\r\n    if (values) {\r\n      this.$filterElm.val(values);\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // protected functions\r\n  // ------------------\r\n\r\n  /**\r\n   * Create the HTML template as a string\r\n   */\r\n  protected buildTemplateHtmlString() {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    let placeholder = (this.gridOptions) ? (this.gridOptions.defaultFilterPlaceholder || '') : '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    return `<input type=\"${this._inputType || 'text'}\" role=\"presentation\" autocomplete=\"off\" class=\"form-control search-filter filter-${fieldId}\" placeholder=\"${placeholder}\"><span></span>`;\r\n  }\r\n\r\n  /**\r\n   * From the html template string, create a DOM element\r\n   * @param filterTemplate\r\n   */\r\n  protected createDomElement(filterTemplate: string, searchTerm?: SearchTerm) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    const $filterElm = $(filterTemplate);\r\n\r\n    $filterElm.val(searchTerm);\r\n    $filterElm.data('columnId', fieldId);\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm) {\r\n      $filterElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterElm && typeof $filterElm.appendTo === 'function') {\r\n      $filterElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterElm;\r\n  }\r\n\r\n  protected handleInputChange(e: any) {\r\n    // we'll use the \"input\" event for everything (keyup, change, mousewheel & spinner)\r\n    // with 1 small exception, we need to use the keyup event to handle ENTER key, everything will be processed by the \"input\" event\r\n    if (e && e.type === 'keyup' && e.key !== 'Enter') {\r\n      return;\r\n    }\r\n    let value = e && e.target && e.target.value || '';\r\n    const enableWhiteSpaceTrim = this.gridOptions.enableFilterTrimWhiteSpace || this.columnFilter.enableTrimWhiteSpace;\r\n    if (typeof value === 'string' && enableWhiteSpaceTrim) {\r\n      value = value.trim();\r\n    }\r\n\r\n    if (this._clearFilterTriggered) {\r\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n      this.$filterElm.removeClass('filled');\r\n    } else {\r\n      value === '' ? this.$filterElm.removeClass('filled') : this.$filterElm.addClass('filled');\r\n      this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: [value], shouldTriggerQuery: this._shouldTriggerQuery });\r\n    }\r\n    // reset both flags for next use\r\n    this._clearFilterTriggered = false;\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import { InputFilter } from './inputFilter';\r\nimport { FilterArguments } from '../models/filterArguments.interface';\r\n\r\nexport class InputMaskFilter extends InputFilter {\r\n  private _inputMask: string;\r\n\r\n  /** Initialize the Filter */\r\n  constructor() {\r\n    super();\r\n    this.inputType = 'text';\r\n  }\r\n\r\n  /** Getter of the input mask, when provided */\r\n  get inputMask(): string {\r\n    return this._inputMask;\r\n  }\r\n\r\n  /**\r\n   * Override the Filter init used by SlickGrid\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // get input mask from params (can be in columnDef or columnFilter params)\r\n    if (this.columnDef && this.columnDef.params && this.columnDef.params.mask) {\r\n      this._inputMask = this.columnDef.params.mask;\r\n    } else if (this.columnFilter && this.columnFilter.params && this.columnFilter.params.mask) {\r\n      this._inputMask = this.columnFilter.params.mask;\r\n    }\r\n\r\n    if (!this._inputMask) {\r\n      throw new Error(`[Angular-Slickgrid] The Filters.inputMask requires the mask to be passed in the filter params or the column definition params\r\n        for example:: this.columnDefinitions: [{ id: 'phone', field: 'phone', filter: { model: Filters.inputMask, params: { mask: '000-000-0000' }}}]`);\r\n    }\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString();\r\n\r\n    // step 2, create the DOM Element of the filter & initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(filterTemplate, searchTerm);\r\n\r\n    // step 3, subscribe to the input change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n\r\n    this.$filterElm.on('keyup input', (e: any) => {\r\n      let value = '';\r\n      if (e && e.target && e.target.value) {\r\n        let targetValue = e.target.value;\r\n        const enableWhiteSpaceTrim = this.gridOptions.enableFilterTrimWhiteSpace || this.columnFilter.enableTrimWhiteSpace;\r\n        if (typeof targetValue === 'string' && enableWhiteSpaceTrim) {\r\n          targetValue = targetValue.trim();\r\n        }\r\n\r\n        // if it has a mask, we need to do a bit more work\r\n        // and replace the filter string by the masked output without triggering an event\r\n        const unmaskedValue = this.unmaskValue(targetValue);\r\n        const maskedValue = this.maskValue(unmaskedValue);\r\n        value = unmaskedValue;\r\n\r\n        if (e.keyCode >= 48) {\r\n          this.$filterElm.val(maskedValue); // replace filter string with masked string\r\n          e.preventDefault();\r\n        }\r\n      }\r\n\r\n      if (this._clearFilterTriggered) {\r\n        this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n        this.$filterElm.removeClass('filled');\r\n      } else {\r\n        this.$filterElm.addClass('filled');\r\n        this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: [value], shouldTriggerQuery: this._shouldTriggerQuery });\r\n      }\r\n      // reset both flags for next use\r\n      this._clearFilterTriggered = false;\r\n      this._shouldTriggerQuery = true;\r\n    });\r\n  }\r\n\r\n  /** From a regular string, we will use the mask to output a new string */\r\n  private maskValue(inputValue: string): string {\r\n    let i = 0;\r\n    let maskedValue = '';\r\n\r\n    if (this._inputMask) {\r\n      maskedValue = this._inputMask.replace(/[09A]/gi, (match) => {\r\n        // only replace the char when the mask is a 0 or 9 for a digit OR the mask is \"A\" and the char is a non-digit meaning a string char\r\n        if (\r\n          ((match === '0' || match === '9') && /\\d+/g.test(inputValue[i]))    // mask is 0 or 9 and value is a digit\r\n          || (match.toUpperCase() === 'A' && /[^\\d]+/gi.test(inputValue[i]))  // OR mask is an \"A\" and value is non-digit\r\n        ) {\r\n          return inputValue[i++] || '';\r\n        }\r\n        return '';\r\n      });\r\n    }\r\n\r\n    return maskedValue;\r\n  }\r\n\r\n  /** From a masked string, we will remove the mask and make a regular string again */\r\n  private unmaskValue(maskedValue: string): string {\r\n    // remove anything else but digits and chars from both the input mask and the input masked value for later comparison\r\n    // e.g. (000) 000-0000 would return 0000000000\r\n    const valueWithoutSymbols = maskedValue.replace(/[^0-9a-z]*/gi, '');\r\n    const maskWithoutSymbols = this._inputMask.replace(/[^0-9a-z]*/gi, '');\r\n\r\n    // then we can analyze if each char on each indexes equals what the mask requires, if not the char will be disregarded from the output\r\n    // basically, if our mask is \"0A0\" and input value is \"2ab\", then only \"2a\" will be returned since the last char \"b\" is not part of the mask and is invalid\r\n    let output = '';\r\n    for (let i = 0; i < maskWithoutSymbols.length; i++) {\r\n      if (valueWithoutSymbols[i]) {\r\n        if (\r\n          ((maskWithoutSymbols[i] === '0' || maskWithoutSymbols[i] === '9') && /\\d+/g.test(valueWithoutSymbols[i]))    // mask is 0 or 9 and value is a digit\r\n          || (maskWithoutSymbols[i].toUpperCase() === 'A' && /[^\\d]+/gi.test(valueWithoutSymbols[i]))  // OR mask is an \"A\" and value is non-digit\r\n        ) {\r\n          output += valueWithoutSymbols[i]; // valid and matches the Mask, so we can add it up to the string output\r\n        }\r\n      }\r\n    }\r\n\r\n    return output;\r\n  }\r\n}\r\n","import { InputFilter } from './inputFilter';\r\n\r\nexport class InputNumberFilter extends InputFilter {\r\n  /** Initialize the Filter */\r\n  constructor() {\r\n    super();\r\n    this.inputType = 'number';\r\n  }\r\n}\r\n","import { InputFilter } from './inputFilter';\r\n\r\nexport class InputPasswordFilter extends InputFilter {\r\n  /** Initialize the Filter */\r\n  constructor() {\r\n    super();\r\n    this.inputType = 'password';\r\n  }\r\n}\r\n","import { Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport {\r\n  CollectionCustomStructure,\r\n  CollectionOption,\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  GridOption,\r\n  MultipleSelectOption,\r\n  OperatorType,\r\n  OperatorString,\r\n  SearchTerm,\r\n  SelectOption,\r\n} from './../models/index';\r\nimport { Constants } from './../constants';\r\nimport { Locale } from './../models/locale.interface';\r\nimport { CollectionService } from './../services/collection.service';\r\nimport { castToPromise, getDescendantProperty, getTranslationPrefix, htmlEncode, unsubscribeAllObservables } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class SelectFilter implements Filter {\r\n  private _isMultipleSelect = true;\r\n  private _locales: Locale;\r\n  private _shouldTriggerQuery = true;\r\n\r\n  /** DOM Element Name, useful for auto-detecting positioning (dropup / dropdown) */\r\n  elementName: string;\r\n\r\n  /** Filter Multiple-Select options */\r\n  filterElmOptions: MultipleSelectOption;\r\n\r\n  /** The JQuery DOM element */\r\n  $filterElm: any;\r\n\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n  defaultOptions: MultipleSelectOption;\r\n  isFilled = false;\r\n  labelName: string;\r\n  labelPrefixName: string;\r\n  labelSuffixName: string;\r\n  optionLabel: string;\r\n  valueName: string;\r\n  enableTranslateLabel = false;\r\n  subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  constructor(@Optional() protected translate: TranslateService, protected collectionService: CollectionService, isMultipleSelect = true) {\r\n    this._isMultipleSelect = isMultipleSelect;\r\n  }\r\n\r\n  /** Getter for the Column Filter itself */\r\n  protected get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter;\r\n  }\r\n\r\n  /** Getter for the Collection Options */\r\n  protected get collectionOptions(): CollectionOption {\r\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.collectionOptions;\r\n  }\r\n\r\n  /** Getter for the Custom Structure if exist */\r\n  protected get customStructure(): CollectionCustomStructure {\r\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.customStructure;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  protected get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return this.isMultipleSelect ? OperatorType.in : OperatorType.equal;\r\n  }\r\n\r\n  /** Getter to know if the current filter is a multiple-select (false means it's a single select) */\r\n  get isMultipleSelect(): boolean {\r\n    return this._isMultipleSelect;\r\n  }\r\n\r\n  /** Getter for the filter operator */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the filter template\r\n   */\r\n  init(args: FilterArguments): Promise<boolean> {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    if (!this.grid || !this.columnDef || !this.columnFilter || (!this.columnFilter.collection && !this.columnFilter.collectionAsync)) {\r\n      throw new Error(`[Angular-SlickGrid] You need to pass a \"collection\" (or \"collectionAsync\") for the MultipleSelect/SingleSelect Filter to work correctly. Also each option should include a value/label pair (or value/labelKey when using Locale). For example:: { filter: model: Filters.multipleSelect, collection: [{ value: true, label: 'True' }, { value: false, label: 'False'}] }`);\r\n    }\r\n\r\n    this.enableTranslateLabel = this.columnFilter.enableTranslateLabel;\r\n    this.labelName = this.customStructure && this.customStructure.label || 'label';\r\n    this.labelPrefixName = this.customStructure && this.customStructure.labelPrefix || 'labelPrefix';\r\n    this.labelSuffixName = this.customStructure && this.customStructure.labelSuffix || 'labelSuffix';\r\n    this.optionLabel = this.customStructure && this.customStructure.optionLabel || 'value';\r\n    this.valueName = this.customStructure && this.customStructure.value || 'value';\r\n\r\n    if (this.enableTranslateLabel && !this.gridOptions.enableTranslate && (!this.translate || typeof this.translate.instant !== 'function')) {\r\n      throw new Error(`[select-filter] The ngx-translate TranslateService is required for the Select Filter to work correctly when \"enableTranslateLabel\" is set.`);\r\n    }\r\n\r\n    // get locales provided by user in forRoot or else use default English locales via the Constants\r\n    this._locales = this.gridOptions && this.gridOptions.locales || Constants.locales;\r\n\r\n    // create the multiple select element\r\n    this.initMultipleSelect();\r\n\r\n    // add placeholder when found\r\n    let placeholder = this.gridOptions && this.gridOptions.defaultFilterPlaceholder || '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    this.defaultOptions.placeholder = placeholder || '';\r\n\r\n    // always render the Select (dropdown) DOM element, even if user passed a \"collectionAsync\",\r\n    // if that is the case, the Select will simply be without any options but we still have to render it (else SlickGrid would throw an error)\r\n    const newCollection = this.columnFilter.collection || [];\r\n    this.renderDomElement(newCollection);\r\n\r\n    // on every Filter which have a \"collection\" or a \"collectionAsync\"\r\n    // we will add (or replace) a Subject to the \"collectionAsync\" property so that user has possibility to change the collection\r\n    // if \"collectionAsync\" is already set by the user, it will resolve it first then after it will replace it with a Subject\r\n    const collectionAsync = this.columnFilter && this.columnFilter.collectionAsync;\r\n    if (collectionAsync) {\r\n      return this.renderOptionsAsync(collectionAsync); // create Subject after resolve (createCollectionAsyncSubject)\r\n    } else {\r\n      return new Promise((resolve) => resolve(true));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the filter values\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm && this.$filterElm.multipleSelect) {\r\n      // reload the filter element by it's id, to make sure it's still a valid element (because of some issue in the GraphQL example)\r\n      this.$filterElm.multipleSelect('setSelects', []);\r\n      this.$filterElm.removeClass('filled');\r\n      this.$filterElm.siblings('div .search-filter').removeClass('filled');\r\n      this.searchTerms = [];\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.callback(undefined, { columnDef: this.columnDef, clearFilterTriggered: true, shouldTriggerQuery: this._shouldTriggerQuery });\r\n      // reset both flags for next use\r\n      this._shouldTriggerQuery = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    // also dispose of all Subscriptions\r\n    this.subscriptions = unsubscribeAllObservables(this.subscriptions);\r\n\r\n    if (this.$filterElm && typeof this.$filterElm.multipleSelect === 'function') {\r\n      this.$filterElm.multipleSelect('destroy');\r\n      this.$filterElm.remove();\r\n      const elementClassName = this.elementName.toString().replace('.', '\\\\.'); // make sure to escape any dot \".\" from CSS class to avoid console error\r\n      $(`[name=${elementClassName}].ms-drop`).remove();\r\n    }\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n    this.onTriggerEvent = null;\r\n  }\r\n\r\n  /**\r\n   * Get selected values retrieved from the multiple-selected element\r\n   * @params selected items\r\n   */\r\n  getValues(): any[] {\r\n    if (this.$filterElm && typeof this.$filterElm.multipleSelect === 'function') {\r\n      return this.$filterElm.multipleSelect('getSelects');\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (values && this.$filterElm && typeof this.$filterElm.multipleSelect === 'function') {\r\n      values = Array.isArray(values) ? values : [values];\r\n      this.$filterElm.multipleSelect('setSelects', values);\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // protected functions\r\n  // ------------------\r\n\r\n  /**\r\n   * user might want to filter certain items of the collection\r\n   * @param inputCollection\r\n   * @return outputCollection filtered and/or sorted collection\r\n   */\r\n  protected filterCollection(inputCollection) {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to filter certain items of the collection\r\n    if (this.columnDef && this.columnFilter && this.columnFilter.collectionFilterBy) {\r\n      const filterBy = this.columnFilter.collectionFilterBy;\r\n      const filterCollectionBy = this.columnFilter.collectionOptions && this.columnFilter.collectionOptions.filterResultAfterEachPass || null;\r\n      outputCollection = this.collectionService.filterCollection(outputCollection, filterBy, filterCollectionBy);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  /**\r\n   * user might want to sort the collection in a certain way\r\n   * @param inputCollection\r\n   * @return outputCollection filtered and/or sorted collection\r\n   */\r\n  protected sortCollection(inputCollection) {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to sort the collection\r\n    if (this.columnDef && this.columnFilter && this.columnFilter.collectionSortBy) {\r\n      const sortBy = this.columnFilter.collectionSortBy;\r\n      outputCollection = this.collectionService.sortCollection(this.columnDef, outputCollection, sortBy, this.enableTranslateLabel);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  protected async renderOptionsAsync(collectionAsync: Promise<any> | Observable<any> | Subject<any>): Promise<boolean> {\r\n    let awaitedCollection: any = [];\r\n\r\n    if (collectionAsync) {\r\n      awaitedCollection = await castToPromise(collectionAsync);\r\n      this.renderDomElementFromCollectionAsync(awaitedCollection);\r\n\r\n      // because we accept Promises & HttpClient Observable only execute once\r\n      // we will re-create an RxJs Subject which will replace the \"collectionAsync\" which got executed once anyway\r\n      // doing this provide the user a way to call a \"collectionAsync.next()\"\r\n      this.createCollectionAsyncSubject();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /** Create or recreate an Observable Subject and reassign it to the \"collectionAsync\" object so user can call a \"collectionAsync.next()\" on it */\r\n  protected createCollectionAsyncSubject() {\r\n    const newCollectionAsync = new Subject<any>();\r\n    this.columnFilter.collectionAsync = newCollectionAsync;\r\n    this.subscriptions.push(\r\n      newCollectionAsync.subscribe(collection => this.renderDomElementFromCollectionAsync(collection))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When user use a CollectionAsync we will use the returned collection to render the filter DOM element\r\n   * and reinitialize filter collection with this new collection\r\n   */\r\n  protected renderDomElementFromCollectionAsync(collection) {\r\n    if (this.collectionOptions && (this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty)) {\r\n      const collectionInsideObjectProperty = this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty;\r\n      collection = getDescendantProperty(collection, collectionInsideObjectProperty);\r\n    }\r\n    if (!Array.isArray(collection)) {\r\n      throw new Error('Something went wrong while trying to pull the collection from the \"collectionAsync\" call in the Select Filter, the collection is not a valid array.');\r\n    }\r\n\r\n    // copy over the array received from the async call to the \"collection\" as the new collection to use\r\n    // this has to be BEFORE the `collectionObserver().subscribe` to avoid going into an infinite loop\r\n    this.columnFilter.collection = collection;\r\n\r\n    // recreate Multiple Select after getting async collection\r\n    this.renderDomElement(collection);\r\n  }\r\n\r\n  protected renderDomElement(inputCollection: any[]) {\r\n    if (!Array.isArray(inputCollection) && this.collectionOptions && (this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty)) {\r\n      const collectionInsideObjectProperty = this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty;\r\n      inputCollection = getDescendantProperty(inputCollection, collectionInsideObjectProperty);\r\n    }\r\n    if (!Array.isArray(inputCollection)) {\r\n      throw new Error('The \"collection\" passed to the Select Filter is not a valid array.');\r\n    }\r\n\r\n    // make a copy of the collection so that we don't impact SelectEditor, this could happen when calling \"addBlankEntry\" or \"addCustomFirstEntry\"\r\n    let collection: any[] = [];\r\n    if (inputCollection.length > 0) {\r\n      collection = [...inputCollection];\r\n      inputCollection = null;\r\n    }\r\n\r\n    // user can optionally add a blank entry at the beginning of the collection\r\n    // make sure however that it wasn't added more than once\r\n    if (this.collectionOptions && this.collectionOptions.addBlankEntry && Array.isArray(collection) && collection.length > 0 && collection[0][this.valueName] !== '') {\r\n      collection.unshift(this.createBlankEntry());\r\n    }\r\n\r\n    // user can optionally add his own custom entry at the beginning of the collection\r\n    if (this.collectionOptions && this.collectionOptions.addCustomFirstEntry && Array.isArray(collection) && collection.length > 0 && collection[0][this.valueName] !== this.collectionOptions.addCustomFirstEntry[this.valueName]) {\r\n      collection.unshift(this.collectionOptions.addCustomFirstEntry);\r\n    }\r\n\r\n    // user can optionally add his own custom entry at the end of the collection\r\n    if (this.collectionOptions && this.collectionOptions.addCustomLastEntry && Array.isArray(collection) && collection.length > 0) {\r\n      const lastCollectionIndex = collection.length - 1;\r\n      if (collection[lastCollectionIndex][this.valueName] !== this.collectionOptions.addCustomLastEntry[this.valueName]) {\r\n        collection.push(this.collectionOptions.addCustomLastEntry);\r\n      }\r\n    }\r\n\r\n    let newCollection = collection;\r\n\r\n    // user might want to filter and/or sort certain items of the collection\r\n    newCollection = this.filterCollection(newCollection);\r\n    newCollection = this.sortCollection(newCollection);\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString(newCollection, this.searchTerms);\r\n\r\n    // step 2, create the DOM Element of the filter & pre-load search terms\r\n    // also subscribe to the onClose event\r\n    this.createDomElement(filterTemplate);\r\n  }\r\n\r\n  /** Create the HTML template as a string */\r\n  protected buildTemplateHtmlString(optionCollection: any[], searchTerms: SearchTerm[]) {\r\n    let options = '';\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const separatorBetweenLabels = this.collectionOptions && this.collectionOptions.separatorBetweenTextLabels || '';\r\n    const isEnableTranslate = this.gridOptions && this.gridOptions.enableTranslate;\r\n    const isRenderHtmlEnabled = this.columnFilter && this.columnFilter.enableRenderHtml || false;\r\n    const sanitizedOptions = this.gridOptions && this.gridOptions.sanitizeHtmlOptions || {};\r\n\r\n    // collection could be an Array of Strings OR Objects\r\n    if (Array.isArray(optionCollection)) {\r\n      if (optionCollection.every(x => typeof x === 'string')) {\r\n        optionCollection.forEach((option: string) => {\r\n          const selected = (searchTerms.findIndex((term) => term === option) >= 0) ? 'selected' : '';\r\n          options += `<option value=\"${option}\" label=\"${option}\" ${selected}>${option}</option>`;\r\n\r\n          // if there's at least 1 search term found, we will add the \"filled\" class for styling purposes\r\n          // on a single select, we'll also make sure the single value is not an empty string to consider this being filled\r\n          if ((selected && this.isMultipleSelect) || (selected && !this.isMultipleSelect && option !== '')) {\r\n            this.isFilled = true;\r\n          }\r\n        });\r\n      } else {\r\n        // array of objects will require a label/value pair unless a customStructure is passed\r\n        optionCollection.forEach((option: SelectOption) => {\r\n          if (!option || (option[this.labelName] === undefined && option.labelKey === undefined)) {\r\n            throw new Error(`[select-filter] A collection with value/label (or value/labelKey when using Locale) is required to populate the Select list, for example:: { filter: model: Filters.multipleSelect, collection: [ { value: '1', label: 'One' } ]')`);\r\n          }\r\n          const labelKey = (option.labelKey || option[this.labelName]) as string;\r\n          const selected = (searchTerms.findIndex((term) => term === option[this.valueName]) >= 0) ? 'selected' : '';\r\n          const labelText = ((option.labelKey || this.enableTranslateLabel) && labelKey && isEnableTranslate) ? this.translate && this.translate.currentLang && this.translate.instant(labelKey || ' ') : labelKey;\r\n          let prefixText = option[this.labelPrefixName] || '';\r\n          let suffixText = option[this.labelSuffixName] || '';\r\n          let optionLabel = option.hasOwnProperty(this.optionLabel) ? option[this.optionLabel] : '';\r\n          if (optionLabel && optionLabel.toString) {\r\n            optionLabel = optionLabel.toString().replace(/\\\"/g, '\\''); // replace double quotes by single quotes to avoid interfering with regular html\r\n          }\r\n\r\n          // also translate prefix/suffix if enableTranslateLabel is true and text is a string\r\n          prefixText = (this.enableTranslateLabel && isEnableTranslate && prefixText && typeof prefixText === 'string') ? this.translate && this.translate.currentLang && this.translate.instant(prefixText || ' ') : prefixText;\r\n          suffixText = (this.enableTranslateLabel && isEnableTranslate && suffixText && typeof suffixText === 'string') ? this.translate && this.translate.currentLang && this.translate.instant(suffixText || ' ') : suffixText;\r\n          optionLabel = (this.enableTranslateLabel && isEnableTranslate && optionLabel && typeof optionLabel === 'string') ? this.translate && this.translate.currentLang && this.translate.instant(optionLabel || ' ') : optionLabel;\r\n\r\n          // add to a temp array for joining purpose and filter out empty text\r\n          const tmpOptionArray = [prefixText, (typeof labelText === 'string' || typeof labelText === 'number') ? labelText.toString() : labelText, suffixText].filter((text) => text);\r\n          let optionText = tmpOptionArray.join(separatorBetweenLabels);\r\n\r\n          // if user specifically wants to render html text, he needs to opt-in else it will stripped out by default\r\n          // also, the 3rd party lib will saninitze any html code unless it's encoded, so we'll do that\r\n          if (isRenderHtmlEnabled) {\r\n            // sanitize any unauthorized html tags like script and others\r\n            // for the remaining allowed tags we'll permit all attributes\r\n            const sanitizedText = (DOMPurify.sanitize(optionText, sanitizedOptions) || '').toString();\r\n            optionText = htmlEncode(sanitizedText);\r\n          }\r\n\r\n          // html text of each select option\r\n          let optionValue = option[this.valueName];\r\n          if (optionValue === undefined || optionValue === null) {\r\n            optionValue = '';\r\n          }\r\n          options += `<option value=\"${optionValue}\" label=\"${optionLabel}\" ${selected}>${optionText}</option>`;\r\n\r\n          // if there's at least 1 search term found, we will add the \"filled\" class for styling purposes\r\n          // on a single select, we'll also make sure the single value is not an empty string to consider this being filled\r\n          if ((selected && this.isMultipleSelect) || (selected && !this.isMultipleSelect && option[this.valueName] !== '')) {\r\n            this.isFilled = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    return `<select class=\"ms-filter search-filter filter-${columnId}\" ${this.isMultipleSelect ? 'multiple=\"multiple\"' : ''}>${options}</select>`;\r\n  }\r\n\r\n  /** Create a blank entry that can be added to the collection. It will also reuse the same customStructure if need be */\r\n  protected createBlankEntry() {\r\n    const blankEntry = {\r\n      [this.labelName]: '',\r\n      [this.valueName]: ''\r\n    };\r\n    if (this.labelPrefixName) {\r\n      blankEntry[this.labelPrefixName] = '';\r\n    }\r\n    if (this.labelSuffixName) {\r\n      blankEntry[this.labelSuffixName] = '';\r\n    }\r\n    return blankEntry;\r\n  }\r\n\r\n  /**\r\n   * From the html template string, create a DOM element\r\n   * Subscribe to the onClose event and run the callback when that happens\r\n   * @param filterTemplate\r\n   */\r\n  protected createDomElement(filterTemplate: string) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n\r\n    // provide the name attribute to the DOM element which will be needed to auto-adjust drop position (dropup / dropdown)\r\n    this.elementName = `filter-${fieldId}`;\r\n    this.defaultOptions.name = this.elementName;\r\n\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    this.$filterElm = $(filterTemplate);\r\n    if (typeof this.$filterElm.multipleSelect !== 'function') {\r\n      throw new Error(`multiple-select.js was not found, make sure to modify your \"angular-cli.json\" file and include \"../node_modules/angular-slickgrid/lib/multiple-select/multiple-select.js\" and it's css or SASS file`);\r\n    }\r\n    this.$filterElm.attr('name', this.elementName);\r\n    this.$filterElm.data('columnId', fieldId);\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (this.isFilled) {\r\n      this.$filterElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if (this.$filterElm && typeof this.$filterElm.appendTo === 'function') {\r\n      this.$filterElm.appendTo($headerElm);\r\n    }\r\n\r\n    // merge options & attach multiSelect\r\n    const filterOptions: MultipleSelectOption = { ...this.defaultOptions, ...this.columnFilter.filterOptions };\r\n    this.filterElmOptions = { ...this.defaultOptions, ...(filterOptions as MultipleSelectOption) };\r\n    this.$filterElm = this.$filterElm.multipleSelect(this.filterElmOptions);\r\n  }\r\n\r\n  /** Initialize the Multiple Select element and its options to use */\r\n  protected initMultipleSelect() {\r\n    const isTranslateEnabled = this.gridOptions && this.gridOptions.enableTranslate;\r\n\r\n    // default options used by this Filter, user can overwrite any of these by passing \"otions\"\r\n    const options: MultipleSelectOption = {\r\n      autoAdjustDropHeight: true,\r\n      autoAdjustDropPosition: true,\r\n      autoAdjustDropWidthByTextSize: true,\r\n      container: 'body',\r\n      filter: false,  // input search term on top of the select option list\r\n      maxHeight: 275,\r\n      single: true,\r\n\r\n      textTemplate: ($elm) => {\r\n        // are we rendering HTML code? by default it is sanitized and won't be rendered\r\n        const isRenderHtmlEnabled = this.columnDef && this.columnDef.filter && this.columnDef.filter.enableRenderHtml || false;\r\n        return isRenderHtmlEnabled ? $elm.text() : $elm.html();\r\n      },\r\n      onClose: () => {\r\n        // we will subscribe to the onClose event for triggering our callback\r\n        // also add/remove \"filled\" class for styling purposes\r\n        this.onTriggerEvent(undefined);\r\n      }\r\n    };\r\n\r\n    if (this.isMultipleSelect) {\r\n      options.single = false;\r\n      options.okButton = true;\r\n      options.addTitle = true; // show tooltip of all selected items while hovering the filter\r\n      const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n      options.countSelected = (isTranslateEnabled && this.translate && this.translate.instant) ? this.translate.instant(`${translationPrefix}X_OF_Y_SELECTED`) : this._locales && this._locales.TEXT_X_OF_Y_SELECTED;\r\n      options.allSelected = (isTranslateEnabled && this.translate && this.translate.instant) ? this.translate.instant(`${translationPrefix}ALL_SELECTED`) : this._locales && this._locales.TEXT_ALL_SELECTED;\r\n      options.okButtonText = (isTranslateEnabled && this.translate && this.translate.instant) ? this.translate.instant(`${translationPrefix}OK`) : this._locales && this._locales.TEXT_OK;\r\n      options.selectAllText = (isTranslateEnabled && this.translate && this.translate.instant) ? this.translate.instant(`${translationPrefix}SELECT_ALL`) : this._locales && this._locales.TEXT_SELECT_ALL;\r\n      options.selectAllDelimiter = ['', '']; // remove default square brackets of default text \"[Select All]\" => \"Select All\"\r\n    }\r\n\r\n    this.defaultOptions = options;\r\n  }\r\n\r\n  private onTriggerEvent(e: Event | undefined) {\r\n    const selectedItems = this.getValues();\r\n    if (Array.isArray(selectedItems) && selectedItems.length > 1 || (selectedItems.length === 1 && selectedItems[0] !== '')) {\r\n      this.isFilled = true;\r\n      this.$filterElm.addClass('filled').siblings('div .search-filter').addClass('filled');\r\n    } else {\r\n      this.isFilled = false;\r\n      this.$filterElm.removeClass('filled');\r\n      this.$filterElm.siblings('div .search-filter').removeClass('filled');\r\n    }\r\n\r\n    this.searchTerms = selectedItems;\r\n    this.callback(undefined, { columnDef: this.columnDef, operator: this.operator, searchTerms: selectedItems, shouldTriggerQuery: this._shouldTriggerQuery });\r\n    // reset flag for next use\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { CollectionService } from './../services/collection.service';\r\nimport { SelectFilter } from './selectFilter';\r\n\r\nexport class MultipleSelectFilter extends SelectFilter {\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  constructor(protected translate: TranslateService, protected collectionService: CollectionService) {\r\n    super(translate, collectionService, true);\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  GridOption,\r\n  OperatorType,\r\n  OperatorString,\r\n  SearchTerm,\r\n} from './../models/index';\r\nimport { Optional } from '@angular/core';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class NativeSelectFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _shouldTriggerQuery = true;\r\n  private _currentValues: any | any[] = [];\r\n  $filterElm: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor(@Optional() private translate: TranslateService) { }\r\n\r\n  /** Getter for the Column Filter itself */\r\n  protected get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter;\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.equal;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  protected get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    if (!this.grid || !this.columnDef || !this.columnFilter || !this.columnFilter.collection) {\r\n      throw new Error(`[Angular-SlickGrid] You need to pass a \"collection\" for the Native Select Filter to work correctly.`);\r\n    }\r\n\r\n    if (this.columnFilter.enableTranslateLabel && !this.gridOptions.enableTranslate && (!this.translate || typeof this.translate.instant !== 'function')) {\r\n      throw new Error(`The ngx-translate TranslateService is required for the Native Select Filter to work correctly when \"enableTranslateLabel\" is set.`);\r\n    }\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    let searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n    if (typeof searchTerm === 'boolean' || typeof searchTerm === 'number') {\r\n      searchTerm = `${searchTerm}`;\r\n    }\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString();\r\n\r\n    // step 2, create the DOM Element of the filter & initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(filterTemplate, searchTerm);\r\n\r\n    // step 3, subscribe to the change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterElm.change((e: any) => {\r\n      const value = e && e.target && e.target.value || '';\r\n      this._currentValues = [value];\r\n\r\n      if (this._clearFilterTriggered) {\r\n        this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n        this.$filterElm.removeClass('filled');\r\n      } else {\r\n        value === '' ? this.$filterElm.removeClass('filled') : this.$filterElm.addClass('filled');\r\n        this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: [value], shouldTriggerQuery: this._shouldTriggerQuery });\r\n      }\r\n      // reset both flags for next use\r\n      this._clearFilterTriggered = false;\r\n      this._shouldTriggerQuery = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the filter values\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this._currentValues = [];\r\n      this.$filterElm.val('');\r\n      this.$filterElm.trigger('change');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.$filterElm) {\r\n      this.$filterElm.off('change').remove();\r\n    }\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n  }\r\n\r\n  /**\r\n   * Get selected values retrieved from the select element\r\n   * @params selected items\r\n   */\r\n  getValues(): any[] {\r\n    return this._currentValues;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (Array.isArray(values)) {\r\n      this.$filterElm.val(values[0]);\r\n      this._currentValues = values;\r\n    } else if (values) {\r\n      this.$filterElm.val(values);\r\n      this._currentValues = [values];\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  private buildTemplateHtmlString() {\r\n    const collection = this.columnFilter && this.columnFilter.collection || [];\r\n    if (!Array.isArray(collection)) {\r\n      throw new Error('The \"collection\" passed to the Native Select Filter is not a valid array.');\r\n    }\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const labelName = (this.columnDef.filter.customStructure) ? this.columnDef.filter.customStructure.label : 'label';\r\n    const valueName = (this.columnDef.filter.customStructure) ? this.columnDef.filter.customStructure.value : 'value';\r\n\r\n    let options = '';\r\n\r\n    // collection could be an Array of Strings OR Objects\r\n    if (collection.every(x => typeof x === 'string')) {\r\n      collection.forEach((option: string) => {\r\n        options += `<option value=\"${option}\" label=\"${option}\">${option}</option>`;\r\n      });\r\n    } else {\r\n      collection.forEach((option: any) => {\r\n        if (!option || (option[labelName] === undefined && option.labelKey === undefined)) {\r\n          throw new Error(`A collection with value/label (or value/labelKey when using Locale) is required to populate the Native Select Filter list, for example:: { filter: model: Filters.select, collection: [ { value: '1', label: 'One' } ]')`);\r\n        }\r\n        const labelKey = option.labelKey || option[labelName];\r\n        const textLabel = ((option.labelKey || this.columnDef.filter.enableTranslateLabel) && this.translate && this.translate.currentLang && this.translate.instant) ? this.translate.instant(labelKey || ' ') : labelKey;\r\n        options += `<option value=\"${option[valueName]}\">${textLabel}</option>`;\r\n      });\r\n    }\r\n    return `<select class=\"form-control search-filter filter-${fieldId}\">${options}</select>`;\r\n  }\r\n\r\n  /**\r\n   * From the html template string, create a DOM element\r\n   * @param filterTemplate\r\n   */\r\n  private createDomElement(filterTemplate: string, searchTerm?: SearchTerm) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    const $filterElm = $(filterTemplate);\r\n    const searchTermInput = (searchTerm || '') as string;\r\n\r\n    $filterElm.val(searchTermInput);\r\n    $filterElm.data('columnId', fieldId);\r\n\r\n    if (searchTermInput) {\r\n      this._currentValues = [searchTermInput];\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterElm && typeof $filterElm.appendTo === 'function') {\r\n      $filterElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterElm;\r\n  }\r\n}\r\n","import { Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { destroyObjectDomElementProps, mapFlatpickrDateFormatWithFieldType, mapMomentDateFormatWithFieldType } from '../services/utilities';\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  FieldType,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  FlatpickrOption,\r\n  GridOption,\r\n  OperatorString,\r\n  OperatorType,\r\n  SearchTerm,\r\n} from '../models/index';\r\nimport Flatpickr from 'flatpickr';\r\nimport { BaseOptions as FlatpickrBaseOptions } from 'flatpickr/dist/types/options';\r\nimport * as moment_ from 'moment-mini';\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\n// use Flatpickr from import or 'require', whichever works first\r\ndeclare function require(name: string): any;\r\nrequire('flatpickr');\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nexport class DateRangeFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _currentValue: string;\r\n  private _currentDates: Date[];\r\n  private _currentDateStrings: string[];\r\n  private _flatpickrOptions: FlatpickrOption;\r\n  private _shouldTriggerQuery = true;\r\n  private $filterElm: any;\r\n  private $filterInputElm: any;\r\n  flatInstance: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  constructor(@Optional() private translate: TranslateService) { }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter for the Current Dates selected */\r\n  get currentDates(): Date[] {\r\n    return this._currentDates;\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return this.gridOptions.defaultFilterRangeOperator || OperatorType.rangeExclusive;\r\n  }\r\n\r\n  /** Getter for the Flatpickr Options */\r\n  get flatpickrOptions(): FlatpickrOption {\r\n    return this._flatpickrOptions || {};\r\n  }\r\n\r\n  /** Getter of the Operator to use when doing the filter comparing */\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // step 1, create the DOM Element of the filter which contain the compound Operator+Input\r\n    this.$filterElm = this.createDomElement(this.searchTerms);\r\n\r\n    // step 3, subscribe to the keyup event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterInputElm.keyup((e: any) => {\r\n      this.onTriggerEvent(e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.flatInstance) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      this.flatInstance.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.flatInstance && typeof this.flatInstance.destroy === 'function') {\r\n      this.flatInstance.destroy();\r\n      if (this.flatInstance.element) {\r\n        destroyObjectDomElementProps(this.flatInstance);\r\n      }\r\n    }\r\n    if (this.$filterElm) {\r\n      this.$filterElm.off('keyup').remove();\r\n    }\r\n    this.flatInstance = null;\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n    this.onTriggerEvent = null;\r\n  }\r\n\r\n  hide() {\r\n    if (this.flatInstance && typeof this.flatInstance.close === 'function') {\r\n      this.flatInstance.close();\r\n    }\r\n  }\r\n\r\n  show() {\r\n    if (this.flatInstance && typeof this.flatInstance.open === 'function') {\r\n      this.flatInstance.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set value(s) on the DOM element\r\n   * @params searchTerms\r\n   */\r\n  setValues(searchTerms: SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    let pickerValues = [];\r\n\r\n    // get the picker values, if it's a string with the \"..\", we'll do the split else we'll use the array of search terms\r\n    if (typeof searchTerms === 'string' || (Array.isArray(searchTerms) && typeof searchTerms[0] === 'string') && (searchTerms[0] as string).indexOf('..') > 0) {\r\n      pickerValues = (typeof searchTerms === 'string') ? [(searchTerms as string)] : (searchTerms[0] as string).split('..');\r\n    } else if (Array.isArray(searchTerms)) {\r\n      pickerValues = searchTerms;\r\n    }\r\n\r\n    if (this.flatInstance && searchTerms) {\r\n      this._currentDates = pickerValues;\r\n      this.flatInstance.setDate(pickerValues);\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n  private buildDatePickerInput(searchTerms?: SearchTerm | SearchTerm[]) {\r\n    const columnId = this.columnDef && this.columnDef.id || '';\r\n    const inputFormat = mapFlatpickrDateFormatWithFieldType(this.columnFilter.type || this.columnDef.type || FieldType.dateIso);\r\n    const outputFormat = mapFlatpickrDateFormatWithFieldType(this.columnDef.outputType || this.columnFilter.type || this.columnDef.type || FieldType.dateUtc);\r\n    const userFilterOptions = (this.columnFilter && this.columnFilter.filterOptions || {}) as FlatpickrOption;\r\n\r\n    // get current locale, if user defined a custom locale just use or get it the Translate Service if it exist else just use English\r\n    let currentLocale = (userFilterOptions && userFilterOptions.locale) || (this.translate && this.translate.currentLang) || this.gridOptions.locale || 'en';\r\n    if (currentLocale.length > 2) {\r\n      currentLocale = currentLocale.substring(0, 2);\r\n    }\r\n\r\n    let pickerValues = [];\r\n\r\n    // get the picker values, if it's a string with the \"..\", we'll do the split else we'll use the array of search terms\r\n    if (typeof searchTerms === 'string' || (Array.isArray(searchTerms) && typeof searchTerms[0] === 'string') && (searchTerms[0] as string).indexOf('..') > 0) {\r\n      pickerValues = (typeof searchTerms === 'string') ? [(searchTerms as string)] : (searchTerms[0] as string).split('..');\r\n    } else if (Array.isArray(searchTerms)) {\r\n      pickerValues = searchTerms;\r\n    }\r\n\r\n    // if we are preloading searchTerms, we'll keep them for reference\r\n    if (pickerValues) {\r\n      this._currentDates = pickerValues;\r\n      const outFormat = mapMomentDateFormatWithFieldType(this.columnFilter.type || this.columnDef.type || FieldType.dateIso);\r\n      this._currentDateStrings = pickerValues.map(date => moment(date).format(outFormat));\r\n    }\r\n\r\n    const pickerOptions: FlatpickrOption = {\r\n      defaultDate: pickerValues || '',\r\n      altInput: true,\r\n      altFormat: outputFormat,\r\n      dateFormat: inputFormat,\r\n      mode: 'range',\r\n      wrap: true,\r\n      closeOnSelect: true,\r\n      locale: (currentLocale !== 'en') ? this.loadFlatpickrLocale(currentLocale) : 'en',\r\n      onChange: (selectedDates: Date[] | Date, dateStr: string, instance: any) => {\r\n        if (Array.isArray(selectedDates)) {\r\n          this._currentDates = selectedDates;\r\n          const outFormat = mapMomentDateFormatWithFieldType(this.columnDef.outputType || this.columnFilter.type || this.columnDef.type || FieldType.dateIso);\r\n          this._currentDateStrings = selectedDates.map(date => moment(date).format(outFormat));\r\n          this._currentValue = this._currentDateStrings.join('..');\r\n        }\r\n\r\n        // when using the time picker, we can simulate a keyup event to avoid multiple backend request\r\n        // since backend request are only executed after user start typing, changing the time should be treated the same way\r\n        const newEvent = pickerOptions.enableTime ? new CustomEvent('keyup') : undefined;\r\n        this.onTriggerEvent(newEvent);\r\n      }\r\n    };\r\n\r\n    // add the time picker when format is UTC (Z) or has the 'h' (meaning hours)\r\n    if (outputFormat && (outputFormat === 'Z' || outputFormat.toLowerCase().includes('h'))) {\r\n      pickerOptions.enableTime = true;\r\n    }\r\n\r\n    // merge options with optional user's custom options\r\n    this._flatpickrOptions = { ...pickerOptions, ...userFilterOptions };\r\n\r\n    let placeholder = (this.gridOptions) ? (this.gridOptions.defaultFilterPlaceholder || '') : '';\r\n    if (this.columnFilter && this.columnFilter.placeholder) {\r\n      placeholder = this.columnFilter.placeholder;\r\n    }\r\n    const $filterInputElm: any = $(`<div class=\"flatpickr search-filter filter-${columnId}\"><input type=\"text\" class=\"form-control\" data-input placeholder=\"${placeholder}\"></div>`);\r\n    this.flatInstance = ($filterInputElm[0] && typeof $filterInputElm[0].flatpickr === 'function') ? $filterInputElm[0].flatpickr(this._flatpickrOptions) : Flatpickr($filterInputElm, this._flatpickrOptions as unknown as Partial<FlatpickrBaseOptions>);\r\n    return $filterInputElm;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM element\r\n   * @params searchTerms\r\n   */\r\n  private createDomElement(searchTerms?: SearchTerm[]) {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM Select dropdown for the Operator\r\n    this.$filterInputElm = this.buildDatePickerInput(searchTerms);\r\n\r\n    /* the DOM element final structure will be\r\n      <div class=flatpickr>\r\n        <input type=\"text\" class=\"form-control\" data-input>\r\n      </div>\r\n    */\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    this.$filterInputElm.data('columnId', fieldId);\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (Array.isArray(searchTerms) && searchTerms.length > 0 && searchTerms[0] !== '') {\r\n      this.$filterInputElm.addClass('filled');\r\n      this._currentDates = searchTerms as Date[];\r\n      this._currentValue = searchTerms[0] as string;\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if (this.$filterInputElm && typeof this.$filterInputElm.appendTo === 'function') {\r\n      this.$filterInputElm.appendTo($headerElm);\r\n    }\r\n\r\n    return this.$filterInputElm;\r\n  }\r\n\r\n  /** Load a different set of locales for Flatpickr to be localized */\r\n  private loadFlatpickrLocale(language: string) {\r\n    let locales = 'en';\r\n\r\n    try {\r\n      if (language !== 'en') {\r\n        // change locale if needed, Flatpickr reference: https://chmln.github.io/flatpickr/localization/\r\n        const localeDefault: any = require(`flatpickr/dist/l10n/${language}.js`).default;\r\n        locales = (localeDefault && localeDefault[language]) ? localeDefault[language] : 'en';\r\n      }\r\n    } catch (e) {\r\n      console.warn(`[Angular-Slickgrid - DateRange Filter] It seems that \"${language}\" is not a locale supported by Flatpickr, we will use \"en\" instead. `\r\n        + `To avoid seeing this message, you can specifically set \"filter: { filterOptions: { locale: 'en' } }\" in your column definition.`);\r\n      return 'en';\r\n    }\r\n    return locales;\r\n  }\r\n\r\n  private onTriggerEvent(e: Event | undefined) {\r\n    if (this._clearFilterTriggered) {\r\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\r\n      this.$filterElm.removeClass('filled');\r\n    } else {\r\n      (this._currentDateStrings) ? this.$filterElm.addClass('filled') : this.$filterElm.removeClass('filled');\r\n      this.callback(e, { columnDef: this.columnDef, searchTerms: (this._currentDateStrings ? this._currentDateStrings : [this._currentValue]), operator: this.operator || '', shouldTriggerQuery: this._shouldTriggerQuery });\r\n    }\r\n    // reset both flags for next use\r\n    this._clearFilterTriggered = false;\r\n    this._shouldTriggerQuery = true;\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { CollectionService } from './../services/collection.service';\r\nimport { SelectFilter } from './selectFilter';\r\n\r\nexport class SingleSelectFilter extends SelectFilter {\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  constructor(protected translate: TranslateService, protected collectionService: CollectionService) {\r\n    super(translate, collectionService, false);\r\n  }\r\n}\r\n","import {\r\n  Column,\r\n  ColumnFilter,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallback,\r\n  OperatorType,\r\n  OperatorString,\r\n  SearchTerm,\r\n} from './../models/index';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nconst DEFAULT_MIN_VALUE = 0;\r\nconst DEFAULT_MAX_VALUE = 100;\r\nconst DEFAULT_STEP = 1;\r\n\r\nexport class SliderFilter implements Filter {\r\n  private _clearFilterTriggered = false;\r\n  private _currentValue: number;\r\n  private _shouldTriggerQuery = true;\r\n  private _elementRangeInputId: string;\r\n  private _elementRangeOutputId: string;\r\n  private $filterElm: any;\r\n  private $filterInputElm: any;\r\n  private $filterNumberElm: any;\r\n  grid: any;\r\n  searchTerms: SearchTerm[];\r\n  columnDef: Column;\r\n  callback: FilterCallback;\r\n\r\n  /** Getter for the Column Filter */\r\n  get columnFilter(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter || {};\r\n  }\r\n\r\n  /** Getter to know what would be the default operator when none is specified */\r\n  get defaultOperator(): OperatorType | OperatorString {\r\n    return OperatorType.equal;\r\n  }\r\n\r\n  /** Getter for the Filter Generic Params */\r\n  private get filterParams(): any {\r\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.params || {};\r\n  }\r\n\r\n  /** Getter for the `filter` properties */\r\n  private get filterProperties(): ColumnFilter {\r\n    return this.columnDef && this.columnDef.filter;\r\n  }\r\n\r\n  get operator(): OperatorType | OperatorString {\r\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\r\n  }\r\n\r\n  /** Setter for the filter operator */\r\n  set operator(operator: OperatorType | OperatorString) {\r\n    if (this.columnFilter) {\r\n      this.columnFilter.operator = operator;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the Filter\r\n   */\r\n  init(args: FilterArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.callback = args.callback;\r\n    this.columnDef = args.columnDef;\r\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\r\n\r\n    // define the input & slider number IDs\r\n    this._elementRangeInputId = `rangeInput_${this.columnDef.field}`;\r\n    this._elementRangeOutputId = `rangeOutput_${this.columnDef.field}`;\r\n\r\n    // filter input can only have 1 search term, so we will use the 1st array index if it exist\r\n    const searchTerm = (Array.isArray(this.searchTerms) && this.searchTerms.length >= 0) ? this.searchTerms[0] : '';\r\n\r\n    // step 1, create HTML string template\r\n    const filterTemplate = this.buildTemplateHtmlString();\r\n\r\n    // step 2, create the DOM Element of the filter & initialize it if searchTerm is filled\r\n    this.$filterElm = this.createDomElement(filterTemplate, searchTerm);\r\n\r\n    // step 3, subscribe to the change event and run the callback when that happens\r\n    // also add/remove \"filled\" class for styling purposes\r\n    this.$filterInputElm.change((e: any) => {\r\n      const value = e && e.target && e.target.value;\r\n      this._currentValue = +value;\r\n\r\n      if (this._clearFilterTriggered) {\r\n        this.$filterElm.removeClass('filled');\r\n        this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, searchTerms: [], shouldTriggerQuery: this._shouldTriggerQuery });\r\n      } else {\r\n        this.$filterElm.addClass('filled');\r\n        this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: [value || '0'], shouldTriggerQuery: this._shouldTriggerQuery });\r\n      }\r\n      // reset both flags for next use\r\n      this._clearFilterTriggered = false;\r\n      this._shouldTriggerQuery = true;\r\n    });\r\n\r\n    // if user chose to display the slider number on the right side, then update it every time it changes\r\n    // we need to use both \"input\" and \"change\" event to be all cross-browser\r\n    if (!this.filterParams.hideSliderNumber) {\r\n      this.$filterInputElm.on('input change', (e: { target: HTMLInputElement }) => {\r\n        const value = e && e.target && e.target.value;\r\n        if (value !== undefined && value !== null) {\r\n          const elements = document.getElementsByClassName(this._elementRangeOutputId);\r\n          if (elements.length) {\r\n            elements[0].innerHTML = value;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the filter value\r\n   */\r\n  clear(shouldTriggerQuery = true) {\r\n    if (this.$filterElm) {\r\n      this._clearFilterTriggered = true;\r\n      this._shouldTriggerQuery = shouldTriggerQuery;\r\n      this.searchTerms = [];\r\n      const clearedValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : DEFAULT_MIN_VALUE;\r\n      this._currentValue = +clearedValue;\r\n      this.$filterInputElm.val(clearedValue);\r\n      this.$filterNumberElm.html(clearedValue);\r\n      this.$filterInputElm.trigger('change');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * destroy the filter\r\n   */\r\n  destroy() {\r\n    if (this.$filterInputElm) {\r\n      this.$filterInputElm.off('input change').remove();\r\n    }\r\n    this.$filterInputElm = null;\r\n    this.$filterElm = null;\r\n    this.callback = null;\r\n  }\r\n\r\n  /**\r\n   * Get selected value retrieved from the slider element\r\n   * @params selected items\r\n   */\r\n  getValues(): number {\r\n    return this._currentValue;\r\n  }\r\n\r\n  /** Set value(s) on the DOM element */\r\n  setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\r\n    if (Array.isArray(values)) {\r\n      this.$filterInputElm.val(`${values[0]}`);\r\n      this.$filterNumberElm.html(`${values[0]}`);\r\n      this._currentValue = +values[0];\r\n    } else if (values) {\r\n      this.$filterInputElm.val(values);\r\n      this._currentValue = +values;\r\n    }\r\n\r\n    // set the operator when defined\r\n    this.operator = operator || this.defaultOperator;\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  /**\r\n   * Create the HTML template as a string\r\n   */\r\n  private buildTemplateHtmlString() {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\r\n    const maxValue = this.filterProperties.hasOwnProperty('maxValue') ? this.filterProperties.maxValue : DEFAULT_MAX_VALUE;\r\n    const defaultValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue;\r\n    const step = this.filterProperties.hasOwnProperty('valueStep') ? this.filterProperties.valueStep : DEFAULT_STEP;\r\n\r\n    if (this.filterParams.hideSliderNumber) {\r\n      return `\r\n      <div class=\"search-filter slider-container filter-${fieldId}\">\r\n        <input type=\"range\" name=\"${this._elementRangeInputId}\"\r\n          defaultValue=\"${defaultValue}\" value=\"${defaultValue}\"\r\n          min=\"${minValue}\" max=\"${maxValue}\" step=\"${step}\"\r\n          class=\"form-control slider-filter-input range ${this._elementRangeInputId}\" />\r\n      </div>`;\r\n    }\r\n\r\n    return `\r\n      <div class=\"input-group slider-container search-filter filter-${fieldId}\">\r\n        <input type=\"range\" name=\"${this._elementRangeInputId}\"\r\n          defaultValue=\"${defaultValue}\" value=\"${defaultValue}\"\r\n          min=\"${minValue}\" max=\"${maxValue}\" step=\"${step}\"\r\n          class=\"form-control slider-filter-input range ${this._elementRangeInputId}\" />\r\n        <div class=\"input-group-addon input-group-append slider-value\">\r\n          <span class=\"input-group-text ${this._elementRangeOutputId}\">${defaultValue}</span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  /**\r\n   * From the html template string, create a DOM element\r\n   * @param filterTemplate string\r\n   * @param searchTerm optional preset search terms\r\n   */\r\n  private createDomElement(filterTemplate: string, searchTerm?: SearchTerm) {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\r\n    const startValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue;\r\n    const $headerElm = this.grid.getHeaderRowColumn(columnId);\r\n    $($headerElm).empty();\r\n\r\n    // create the DOM element & add an ID and filter class\r\n    const $filterElm = $(filterTemplate);\r\n    let searchTermInput = (searchTerm || '0') as string;\r\n    if (+searchTermInput < minValue) {\r\n      searchTermInput = `${minValue}`;\r\n    }\r\n    if (+searchTermInput < startValue) {\r\n      searchTermInput = `${startValue}`;\r\n    }\r\n    this._currentValue = +searchTermInput;\r\n\r\n    this.$filterInputElm = $filterElm.children('input');\r\n    this.$filterNumberElm = $filterElm.children('div.input-group-addon.input-group-append').children();\r\n    this.$filterInputElm.val(searchTermInput);\r\n    this.$filterNumberElm.html(searchTermInput);\r\n    $filterElm.data('columnId', columnId);\r\n\r\n    // if there's a search term, we will add the \"filled\" class for styling purposes\r\n    if (searchTerm) {\r\n      $filterElm.addClass('filled');\r\n    }\r\n\r\n    // append the new DOM element to the header row\r\n    if ($filterElm && typeof $filterElm.appendTo === 'function') {\r\n      $filterElm.appendTo($headerElm);\r\n    }\r\n\r\n    return $filterElm;\r\n  }\r\n}\r\n","import {\n  Column,\n  ColumnFilter,\n  Filter,\n  FilterArguments,\n  FilterCallback,\n  GridOption,\n  JQueryUiSliderOption,\n  JQueryUiSliderResponse,\n  OperatorType,\n  OperatorString,\n  SearchTerm,\n} from '../models/index';\n\n// using external non-typed js libraries\ndeclare const $: any;\n\nconst DEFAULT_MIN_VALUE = 0;\nconst DEFAULT_MAX_VALUE = 100;\nconst DEFAULT_STEP = 1;\n\n/** A Slider Range Filter which uses jQuery UI, this is only meant to be used as a range filter (with 2 handles lowest & highest values) */\nexport class SliderRangeFilter implements Filter {\n  private _clearFilterTriggered = false;\n  private _currentValues: number[];\n  private _shouldTriggerQuery = true;\n  private _sliderOptions: JQueryUiSliderOption;\n  private $filterElm: any;\n  private $filterContainerElm: any;\n  grid: any;\n  searchTerms: SearchTerm[];\n  columnDef: Column;\n  callback: FilterCallback;\n\n  /** Getter for the Filter Generic Params */\n  private get filterParams(): any {\n    return this.columnDef && this.columnDef.filter && this.columnDef.filter.params || {};\n  }\n\n  /** Getter for the `filter` properties */\n  private get filterProperties(): ColumnFilter {\n    return this.columnDef && this.columnDef.filter;\n  }\n\n  /** Getter for the Column Filter */\n  get columnFilter(): ColumnFilter {\n    return this.columnDef && this.columnDef.filter || {};\n  }\n\n  /** Getter for the Current Slider Values */\n  get currentValues(): number[] {\n    return this._currentValues;\n  }\n\n  /** Getter to know what would be the default operator when none is specified */\n  get defaultOperator(): OperatorType | OperatorString {\n    return this.gridOptions.defaultFilterRangeOperator || OperatorType.rangeExclusive;\n  }\n\n  /** Getter for the Grid Options pulled through the Grid Object */\n  get gridOptions(): GridOption {\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\n  }\n\n  /** Getter for the JQuery UI Slider Options */\n  get sliderOptions(): JQueryUiSliderOption {\n    return this._sliderOptions || {};\n  }\n\n  /** Getter of the Operator to use when doing the filter comparing */\n  get operator(): OperatorType | OperatorString {\n    return this.columnFilter && this.columnFilter.operator || this.defaultOperator;\n  }\n\n  /** Setter for the filter operator */\n  set operator(operator: OperatorType | OperatorString) {\n    if (this.columnFilter) {\n      this.columnFilter.operator = operator;\n    }\n  }\n\n  /**\n   * Initialize the Filter\n   */\n  init(args: FilterArguments) {\n    if (!args) {\n      throw new Error('[Angular-SlickGrid] A filter must always have an \"init()\" with valid arguments.');\n    }\n    this.grid = args.grid;\n    this.callback = args.callback;\n    this.columnDef = args.columnDef;\n    this.searchTerms = (args.hasOwnProperty('searchTerms') ? args.searchTerms : []) || [];\n\n    // step 1, create the DOM Element of the filter & initialize it if searchTerm is filled\n    this.$filterElm = this.createDomElement(this.searchTerms);\n  }\n\n  /**\n   * Clear the filter value\n   */\n  clear(shouldTriggerQuery = true) {\n    if (this.$filterElm) {\n      this._clearFilterTriggered = true;\n      this._shouldTriggerQuery = shouldTriggerQuery;\n      this.searchTerms = [];\n      const lowestValue = this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : DEFAULT_MIN_VALUE;\n      const highestValue = this.filterParams.hasOwnProperty('sliderEndValue') ? this.filterParams.sliderEndValue : DEFAULT_MAX_VALUE;\n      this._currentValues = [lowestValue, highestValue];\n      this.$filterElm.slider('values', [lowestValue, highestValue]);\n      if (!this.filterParams.hideSliderNumbers) {\n        this.renderSliderValues(lowestValue, highestValue);\n      }\n      this.callback(null, { columnDef: this.columnDef, clearFilterTriggered: true, shouldTriggerQuery });\n      this.$filterContainerElm.removeClass('filled');\n    }\n  }\n\n  /**\n   * destroy the filter\n   */\n  destroy() {\n    if (this.$filterElm) {\n      this.$filterElm.off('change').remove();\n      this.$filterContainerElm.remove();\n    }\n    this.$filterElm = null;\n    this.$filterContainerElm = null;\n    this.callback = null;\n    this.onValueChanged = null;\n  }\n\n  /**\n   * Render both slider values (low/high) on screen\n   * @param lowestValue number\n   * @param highestValue number\n   */\n  renderSliderValues(lowestValue: number | string, highestValue: number | string) {\n    const columndId = this.columnDef && this.columnDef.id;\n    const lowerElm = document.querySelector(`.lowest-range-${columndId}`);\n    const highestElm = document.querySelector(`.highest-range-${columndId}`);\n    if (lowerElm && lowerElm.innerHTML) {\n      lowerElm.innerHTML = lowestValue.toString();\n    }\n    if (highestElm && highestElm.innerHTML) {\n      highestElm.innerHTML = highestValue.toString();\n    }\n  }\n\n  /**\n   * Set value(s) on the DOM element\n   * @params searchTerms\n   */\n  setValues(searchTerms: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString) {\n    if (searchTerms) {\n      let sliderValues = [];\n\n      // get the slider values, if it's a string with the \"..\", we'll do the split else we'll use the array of search terms\n      if (typeof searchTerms === 'string' || (Array.isArray(searchTerms) && typeof searchTerms[0] === 'string') && (searchTerms[0] as string).indexOf('..') > 0) {\n        sliderValues = (typeof searchTerms === 'string') ? [(searchTerms as string)] : (searchTerms[0] as string).split('..');\n      } else if (Array.isArray(searchTerms)) {\n        sliderValues = searchTerms;\n      }\n\n      if (Array.isArray(sliderValues) && sliderValues.length === 2) {\n        this.$filterElm.slider('values', sliderValues);\n        if (!this.filterParams.hideSliderNumbers) {\n          this.renderSliderValues(sliderValues[0], sliderValues[1]);\n        }\n      }\n    }\n\n    // set the operator when defined\n    this.operator = operator || this.defaultOperator;\n  }\n\n  //\n  // private functions\n  // ------------------\n\n  /**\n   * From the html template string, create a DOM element\n   * @param searchTerm optional preset search terms\n   */\n  private createDomElement(searchTerms?: SearchTerm | SearchTerm[]) {\n    if (this.columnFilter && this.columnFilter.filterOptions && (this.columnFilter.filterOptions.change || this.columnFilter.filterOptions.slide)) {\n      throw new Error(`[Angular-Slickgrid] You cannot override the \"change\" and/or the \"slide\" callback methods\n        since they are used in SliderRange Filter itself, however any other methods can be used for example the \"create\", \"start\", \"stop\" methods.`);\n    }\n    const fieldId = this.columnDef && this.columnDef.id;\n    const $headerElm = this.grid.getHeaderRowColumn(fieldId);\n    const minValue = this.filterProperties.hasOwnProperty('minValue') ? this.filterProperties.minValue : DEFAULT_MIN_VALUE;\n    const maxValue = this.filterProperties.hasOwnProperty('maxValue') ? this.filterProperties.maxValue : DEFAULT_MAX_VALUE;\n    const step = this.filterProperties.hasOwnProperty('valueStep') ? this.filterProperties.valueStep : DEFAULT_STEP;\n\n    let defaultStartValue: number = DEFAULT_MIN_VALUE;\n    let defaultEndValue: number = DEFAULT_MAX_VALUE;\n    if (Array.isArray(searchTerms) && searchTerms.length > 1) {\n      defaultStartValue = +searchTerms[0];\n      defaultEndValue = +searchTerms[1];\n    } else {\n      defaultStartValue = +(this.filterParams.hasOwnProperty('sliderStartValue') ? this.filterParams.sliderStartValue : minValue);\n      defaultEndValue = +(this.filterParams.hasOwnProperty('sliderEndValue') ? this.filterParams.sliderEndValue : maxValue);\n    }\n\n    $($headerElm).empty();\n\n    // create the DOM element & add an ID and filter class\n    const $lowestSliderValueElm = $(`\n    <div class=\"input-group-addon input-group-prepend slider-range-value\">\n      <span class=\"input-group-text lowest-range-${fieldId}\">${defaultStartValue}</span>\n    </div>`);\n    const $highestSliderValueElm = $(`\n    <div class=\"input-group-addon input-group-append slider-range-value\">\n      <span class=\"input-group-text highest-range-${fieldId}\">${defaultEndValue}</span>\n    </div>`);\n    this.$filterElm = $(`<div class=\"filter-input filter-${fieldId}\"></div>`);\n    this.$filterContainerElm = $(`<div class=\"input-group form-control search-filter slider-range-container slider-values filter-${fieldId}\">`);\n\n    if (this.filterParams.hideSliderNumbers) {\n      this.$filterContainerElm.append(this.$filterElm);\n    } else {\n      this.$filterContainerElm.append($lowestSliderValueElm);\n      this.$filterContainerElm.append(this.$filterElm);\n      this.$filterContainerElm.append($highestSliderValueElm);\n    }\n\n    // if we are preloading searchTerms, we'll keep them for reference\n    this._currentValues = [defaultStartValue, defaultEndValue];\n\n    const definedOptions: JQueryUiSliderOption = {\n      range: true,\n      min: +minValue,\n      max: +maxValue,\n      step: +step,\n      values: [defaultStartValue, defaultEndValue],\n      change: (e: Event, ui: JQueryUiSliderResponse) => this.onValueChanged(e, ui),\n      slide: (e: Event, ui: JQueryUiSliderResponse) => {\n        const values = ui.values;\n        if (!this.filterParams.hideSliderNumbers && Array.isArray(values)) {\n          this.renderSliderValues(values[0], values[1]);\n        }\n      }\n    };\n\n    // merge options with optional user's custom options\n    this._sliderOptions = { ...definedOptions, ...(this.columnFilter.filterOptions as JQueryUiSliderOption) };\n    this.$filterElm.slider(this._sliderOptions);\n\n    // if there's a search term, we will add the \"filled\" class for styling purposes\n    if (Array.isArray(searchTerms) && searchTerms.length > 0 && searchTerms[0] !== '') {\n      this.$filterContainerElm.addClass('filled');\n    }\n\n    // append the new DOM element to the header row\n    if (this.$filterContainerElm && typeof this.$filterContainerElm.appendTo === 'function') {\n      this.$filterContainerElm.appendTo($headerElm);\n    }\n\n    return this.$filterElm;\n  }\n\n  /** On a value change event triggered */\n  private onValueChanged(e: Event, ui: JQueryUiSliderResponse) {\n    const values = ui && Array.isArray(ui.values) ? ui.values : [];\n    const value = values.join('..');\n\n    if (this._clearFilterTriggered) {\n      this.callback(e, { columnDef: this.columnDef, clearFilterTriggered: this._clearFilterTriggered, shouldTriggerQuery: this._shouldTriggerQuery });\n      this.$filterContainerElm.removeClass('filled');\n    } else {\n      value === '' ? this.$filterContainerElm.removeClass('filled') : this.$filterContainerElm.addClass('filled');\n      this.callback(e, { columnDef: this.columnDef, operator: this.operator, searchTerms: values, shouldTriggerQuery: this._shouldTriggerQuery });\n    }\n    // reset both flags for next use\n    this._clearFilterTriggered = false;\n    this._shouldTriggerQuery = true;\n  }\n}\n","import { Column, Filter } from './../models/index';\r\nimport { AutoCompleteFilter } from './autoCompleteFilter';\r\nimport { CompoundDateFilter } from './compoundDateFilter';\r\nimport { CompoundInputFilter } from './compoundInputFilter';\r\nimport { CompoundInputNumberFilter } from './compoundInputNumberFilter';\r\nimport { CompoundInputPasswordFilter } from './compoundInputPasswordFilter';\r\nimport { CompoundSliderFilter } from './compoundSliderFilter';\r\nimport { InputFilter } from './inputFilter';\r\nimport { InputMaskFilter } from './inputMaskFilter';\r\nimport { InputNumberFilter } from './inputNumberFilter';\r\nimport { InputPasswordFilter } from './inputPasswordFilter';\r\nimport { MultipleSelectFilter } from './multipleSelectFilter';\r\nimport { NativeSelectFilter } from './nativeSelectFilter';\r\nimport { DateRangeFilter } from './dateRangeFilter';\r\nimport { SingleSelectFilter } from './singleSelectFilter';\r\nimport { SliderFilter } from './sliderFilter';\r\nimport { SliderRangeFilter } from './sliderRangeFilter';\r\n\r\nexport const Filters = {\r\n  /** AutoComplete Filter (using jQuery UI autocomplete feature) */\r\n  autoComplete: AutoCompleteFilter,\r\n\r\n  /** Compound Date Filter (compound of Operator + Date picker) */\r\n  compoundDate: CompoundDateFilter,\r\n\r\n  /** Alias to compoundInputText to Compound Input Filter (compound of Operator + Input Text) */\r\n  compoundInput: CompoundInputFilter,\r\n\r\n  /** Compound Input Number Filter (compound of Operator + Input of type Number) */\r\n  compoundInputNumber: CompoundInputNumberFilter,\r\n\r\n  /** Compound Input Password Filter (compound of Operator + Input of type Password, also note that only the text shown in the UI will be masked, filter query is still plain text) */\r\n  compoundInputPassword: CompoundInputPasswordFilter,\r\n\r\n  /** Compound Input Text Filter (compound of Operator + Input Text) */\r\n  compoundInputText: CompoundInputFilter,\r\n\r\n  /** Compound Slider Filter (compound of Operator + Slider) */\r\n  compoundSlider: CompoundSliderFilter,\r\n\r\n  /** Range Date Filter (uses the Flactpickr Date picker with range option) */\r\n  dateRange: DateRangeFilter,\r\n\r\n  /** Alias to inputText, input type text filter */\r\n  input: InputFilter,\r\n\r\n  /**\r\n   * Input Filter of type text that will be formatted with a mask output\r\n   * e.g.: column: { filter: { model: Filters.inputMask }, params: { mask: '(000) 000-0000' }}\r\n   */\r\n  inputMask: InputMaskFilter,\r\n\r\n  /** Input Filter of type Number */\r\n  inputNumber: InputNumberFilter,\r\n\r\n  /** Input Filter of type Password (note that only the text shown in the UI will be masked, filter query is still plain text) */\r\n  inputPassword: InputPasswordFilter,\r\n\r\n  /** Default Filter, input type text filter */\r\n  inputText: InputFilter,\r\n\r\n  /** Multiple Select filter, which uses 3rd party lib \"multiple-select.js\" */\r\n  multipleSelect: MultipleSelectFilter,\r\n\r\n  /** Select filter, which uses native DOM element select */\r\n  select: NativeSelectFilter,\r\n\r\n  /** Single Select filter, which uses 3rd party lib \"multiple-select.js\" */\r\n  singleSelect: SingleSelectFilter,\r\n\r\n  /** Slider Filter (only 1 value) */\r\n  slider: SliderFilter,\r\n\r\n  /** Slider Range Filter, uses jQuery UI Range Slider (2 values, lowest/highest search range) */\r\n  sliderRange: SliderRangeFilter,\r\n};\r\n","import { Column, DelimiterType, FileType, GridOption, OperatorType } from './models/index';\r\nimport { Filters } from './filters/index';\r\n\r\n/** Global Grid Options Defaults */\r\nexport const GlobalGridOptions: Partial<GridOption> = {\r\n  alwaysShowVerticalScroll: true,\r\n  autoEdit: false,\r\n  asyncEditorLoading: false,\r\n  autoFitColumnsOnFirstLoad: true,\r\n  autoResize: {\r\n    calculateAvailableSizeBy: 'window',\r\n    bottomPadding: 20,\r\n    minHeight: 180,\r\n    minWidth: 300,\r\n    sidePadding: 0\r\n  },\r\n  cellHighlightCssClass: 'slick-cell-modified',\r\n  checkboxSelector: {\r\n    cssClass: 'slick-cell-checkboxsel'\r\n  },\r\n  columnPicker: {\r\n    fadeSpeed: 0,\r\n    hideForceFitButton: false,\r\n    hideSyncResizeButton: true,\r\n    headerColumnValueExtractor: pickerHeaderColumnValueExtractor\r\n  },\r\n  cellMenu: {\r\n    autoAdjustDrop: true,\r\n    autoAlignSide: true,\r\n    hideCloseButton: true,\r\n    hideCommandSection: false,\r\n    hideOptionSection: false,\r\n  },\r\n  contextMenu: {\r\n    autoAdjustDrop: true,\r\n    autoAlignSide: true,\r\n    hideCloseButton: true,\r\n    hideClearAllGrouping: false,\r\n    hideCollapseAllGroups: false,\r\n    hideCommandSection: false,\r\n    hideCopyCellValueCommand: false,\r\n    hideExpandAllGroups: false,\r\n    hideExportCsvCommand: false,\r\n    hideExportExcelCommand: false,\r\n    hideExportTextDelimitedCommand: true,\r\n    hideMenuOnScroll: true,\r\n    hideOptionSection: false,\r\n    iconCopyCellValueCommand: 'fa fa-clone',\r\n    iconExportCsvCommand: 'fa fa-download',\r\n    iconExportExcelCommand: 'fa fa-file-excel-o text-success',\r\n    iconExportTextDelimitedCommand: 'fa fa-download',\r\n    width: 200,\r\n  },\r\n  customFooterOptions: {\r\n    dateFormat: 'yyyy-MM-dd, hh:mm aaaaa\\'m\\'',\r\n    hideTotalItemCount: false,\r\n    hideLastUpdateTimestamp: true,\r\n    footerHeight: 20,\r\n    leftContainerClass: 'col-xs-12 col-sm-5',\r\n    rightContainerClass: 'col-xs-6 col-sm-7',\r\n    metricSeparator: '|',\r\n    metricTexts: {\r\n      items: 'items',\r\n      of: 'of',\r\n      itemsKey: 'ITEMS',\r\n      ofKey: 'OF',\r\n    }\r\n  },\r\n  dataView: {\r\n    syncGridSelection: true, // when enabled, this will preserve the row selection even after filtering/sorting/grouping\r\n    syncGridSelectionWithBackendService: false, // but disable it when using backend services\r\n  },\r\n  datasetIdPropertyName: 'id',\r\n  defaultColumnSortFieldId: 'id',\r\n  defaultFilter: Filters.input,\r\n  enableFilterTrimWhiteSpace: false, // do we want to trim white spaces on all Filters?\r\n  defaultFilterPlaceholder: '&#128269;',\r\n  defaultFilterRangeOperator: OperatorType.rangeExclusive,\r\n  editable: false,\r\n  enableAutoResize: true,\r\n  enableAutoSizeColumns: true,\r\n  enableCellNavigation: false,\r\n  enableColumnPicker: true,\r\n  enableColumnReorder: true,\r\n  enableContextMenu: true,\r\n  enableExcelExport: true, // Excel Export is the new default,\r\n  enableExport: false, // CSV/Text with Tab Delimited\r\n  enableGridMenu: true,\r\n  enableHeaderMenu: true,\r\n  enableEmptyDataWarningMessage: true,\r\n  emptyDataWarning: {\r\n    className: 'slick-empty-data-warning',\r\n    message: 'No data to display.',\r\n    messageKey: 'EMPTY_DATA_WARNING_MESSAGE',\r\n    hideFrozenLeftWarning: false,\r\n    hideFrozenRightWarning: false,\r\n    leftViewportMarginLeft: '40%',\r\n    rightViewportMarginLeft: '40%',\r\n    frozenLeftViewportMarginLeft: '0px',\r\n    frozenRightViewportMarginLeft: '40%',\r\n  },\r\n  enableMouseHoverHighlightRow: true,\r\n  enableSorting: true,\r\n  enableTextSelectionOnCells: true,\r\n  explicitInitialization: true,\r\n  excelExportOptions: {\r\n    addGroupIndentation: true,\r\n    exportWithFormatter: false,\r\n    filename: 'export',\r\n    format: FileType.xlsx,\r\n    groupingColumnHeaderTitle: 'Group By',\r\n    groupCollapsedSymbol: '\\u25B9',\r\n    groupExpandedSymbol: '\\u25BF',\r\n    groupingAggregatorRowText: '',\r\n    sanitizeDataExport: false,\r\n  },\r\n  exportOptions: {\r\n    delimiter: DelimiterType.comma,\r\n    exportWithFormatter: false,\r\n    filename: 'export',\r\n    format: FileType.csv,\r\n    groupingColumnHeaderTitle: 'Group By',\r\n    groupingAggregatorRowText: '',\r\n    sanitizeDataExport: false,\r\n    useUtf8WithBom: true\r\n  },\r\n  forceFitColumns: false,\r\n  frozenHeaderWidthCalcDifferential: 1,\r\n  gridMenu: {\r\n    hideClearAllFiltersCommand: false,\r\n    hideClearAllSortingCommand: false,\r\n    hideClearFrozenColumnsCommand: true, // opt-in command\r\n    hideExportCsvCommand: false,\r\n    hideExportExcelCommand: false,\r\n    hideExportTextDelimitedCommand: true,\r\n    hideForceFitButton: false,\r\n    hideRefreshDatasetCommand: false,\r\n    hideSyncResizeButton: true,\r\n    hideToggleFilterCommand: false,\r\n    hideTogglePreHeaderCommand: false,\r\n    iconCssClass: 'fa fa-bars',\r\n    iconClearAllFiltersCommand: 'fa fa-filter text-danger',\r\n    iconClearAllSortingCommand: 'fa fa-unsorted text-danger',\r\n    iconClearFrozenColumnsCommand: 'fa fa-times',\r\n    iconExportCsvCommand: 'fa fa-download',\r\n    iconExportExcelCommand: 'fa fa-file-excel-o text-success',\r\n    iconExportTextDelimitedCommand: 'fa fa-download',\r\n    iconRefreshDatasetCommand: 'fa fa-refresh',\r\n    iconToggleFilterCommand: 'fa fa-random',\r\n    iconTogglePreHeaderCommand: 'fa fa-random',\r\n    menuWidth: 16,\r\n    resizeOnShowHeaderRow: true,\r\n    useClickToRepositionMenu: false, // use icon location to reposition instead\r\n    headerColumnValueExtractor: pickerHeaderColumnValueExtractor\r\n  },\r\n  headerMenu: {\r\n    autoAlign: true,\r\n    autoAlignOffset: 12,\r\n    minWidth: 140,\r\n    iconClearFilterCommand: 'fa fa-filter text-danger',\r\n    iconClearSortCommand: 'fa fa-unsorted',\r\n    iconFreezeColumns: 'fa fa-thumb-tack',\r\n    iconSortAscCommand: 'fa fa-sort-amount-asc',\r\n    iconSortDescCommand: 'fa fa-sort-amount-desc',\r\n    iconColumnHideCommand: 'fa fa-times',\r\n    hideColumnHideCommand: false,\r\n    hideClearFilterCommand: false,\r\n    hideClearSortCommand: false,\r\n    hideFreezeColumnsCommand: true, // opt-in command\r\n    hideSortCommands: false\r\n  },\r\n  headerRowHeight: 35,\r\n  multiColumnSort: true,\r\n  numberedMultiColumnSort: true,\r\n  tristateMultiColumnSort: false,\r\n  sortColNumberInSeparateSpan: true,\r\n  suppressActiveCellChangeOnEdit: true,\r\n  pagination: {\r\n    pageSizes: [10, 15, 20, 25, 30, 40, 50, 75, 100],\r\n    pageSize: 25,\r\n    totalItems: 0\r\n  },\r\n  // technically speaking the Row Detail requires the process & viewComponent but we'll ignore it just to set certain options\r\n  // @ts-ignore\r\n  rowDetailView: {\r\n    cssClass: 'detail-view-toggle',\r\n    panelRows: 1,\r\n    keyPrefix: '__',\r\n    useRowClick: false,\r\n    useSimpleViewportCalc: true,\r\n    saveDetailViewOnScroll: false,\r\n  },\r\n  rowHeight: 35,\r\n  topPanelHeight: 35,\r\n  translationNamespaceSeparator: ':',\r\n};\r\n\r\n/**\r\n * Value Extractor for both ColumnPicker & GridMenu Picker\r\n * when using Column Header Grouping, we'll prefix the column group title\r\n * else we'll simply return the column name title\r\n */\r\nfunction pickerHeaderColumnValueExtractor(column: Column) {\r\n  const headerGroup = column && column.columnGroup || '';\r\n  if (headerGroup) {\r\n    return headerGroup + ' - ' + column.name;\r\n  }\r\n  return column && column.name || '';\r\n}\r\n","import { GridOption } from './models/gridOption.interface';\r\nimport { GlobalGridOptions } from './global-grid-options';\r\n\r\nexport class SlickgridConfig {\r\n  options: Partial<GridOption>;\r\n\r\n  constructor() {\r\n    this.options = GlobalGridOptions;\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Filter } from '../models/filter.interface';\r\nimport { ColumnFilter } from '../models';\r\nimport { SlickgridConfig } from '../slickgrid-config';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CollectionService } from '../services/collection.service';\r\n\r\n@Injectable()\r\nexport class FilterFactory {\r\n  /**\r\n   * The options from the SlickgridConfig\r\n   */\r\n  private _options: any;\r\n\r\n  constructor(private config: SlickgridConfig, @Optional() private translate: TranslateService, private collectionService: CollectionService) {\r\n    this._options = this.config.options;\r\n  }\r\n\r\n  // Uses the User model to create a new User\r\n  createFilter(columnFilter: ColumnFilter | undefined): Filter | undefined {\r\n    let filter: Filter | undefined;\r\n\r\n    if (columnFilter && columnFilter.model) {\r\n      filter = typeof columnFilter.model === 'function' ? new columnFilter.model(this.translate, this.collectionService) : columnFilter.model;\r\n    }\r\n\r\n    // fallback to the default filter\r\n    if (!filter && this._options.defaultFilter) {\r\n      filter = new this._options.defaultFilter(this.translate, this.collectionService);\r\n    }\r\n\r\n    return filter;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { isObservable, Subject } from 'rxjs';\r\n\r\nimport * as isequal_ from 'lodash.isequal';\r\nconst isequal = isequal_; // patch to fix rollup to work\r\n\r\nimport {\r\n  Column,\r\n  ColumnFilter,\r\n  ColumnFilters,\r\n  CurrentFilter,\r\n  EmitterType,\r\n  FieldType,\r\n  Filter,\r\n  FilterArguments,\r\n  FilterCallbackArg,\r\n  FilterChangedArgs,\r\n  FilterConditionOption,\r\n  GridOption,\r\n  KeyCode,\r\n  OperatorString,\r\n  OperatorType,\r\n  SearchTerm,\r\n  SlickEvent,\r\n  SlickEventHandler,\r\n} from './../models/index';\r\nimport { executeBackendCallback, refreshBackendDataset } from './backend-utilities';\r\nimport { getDescendantProperty } from './utilities';\r\nimport { FilterConditions } from './../filter-conditions';\r\nimport { FilterFactory } from '../filters/filterFactory';\r\nimport { SharedService } from './shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\ndeclare const $: any;\r\n\r\n// timer for keeping track of user typing waits\r\nlet timer: any;\r\nconst DEFAULT_FILTER_TYPING_DEBOUNCE = 500;\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _isFilterFirstRender = true;\r\n  private _firstColumnIdRendered = '';\r\n  private _filtersMetadata: any[] = [];\r\n  private _columnFilters: ColumnFilters = {};\r\n  private _grid: any;\r\n  private _onSearchChange: SlickEvent | null;\r\n  private _tmpPreFilteredData: number[];\r\n  private httpCancelRequests$: Subject<void> = new Subject<void>(); // this will be used to cancel any pending http request\r\n  onFilterChanged = new Subject<CurrentFilter[]>();\r\n  onFilterCleared = new Subject<boolean>();\r\n\r\n  constructor(private filterFactory: FilterFactory, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n    this._onSearchChange = new Slick.Event();\r\n  }\r\n\r\n  /** Getter of the SlickGrid Event Handler */\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  /** Getter to know if the filter was already rendered or if it was its first time render */\r\n  get isFilterFirstRender(): boolean {\r\n    return this._isFilterFirstRender;\r\n  }\r\n\r\n  /** Getter of the SlickGrid Event Handler */\r\n  get onSearchChange(): SlickEvent | null {\r\n    return this._onSearchChange;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter for the Column Definitions pulled through the Grid Object */\r\n  private get _columnDefinitions(): Column[] {\r\n    return (this._grid && this._grid.getColumns) ? this._grid.getColumns() : [];\r\n  }\r\n\r\n  /** Getter of SlickGrid DataView object */\r\n  private get _dataView(): any {\r\n    return (this._grid && this._grid.getData) ? this._grid.getData() : {};\r\n  }\r\n\r\n  init(grid: any): void {\r\n    this._grid = grid;\r\n\r\n    if (this._gridOptions && this._gridOptions.enableTreeData && this._gridOptions.treeDataOptions) {\r\n      this._grid.setSortColumns([{ columnId: this._gridOptions.treeDataOptions.columnId, sortAsc: true }]);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    if (this._eventHandler && this._eventHandler.unsubscribeAll) {\r\n      this._eventHandler.unsubscribeAll();\r\n    }\r\n    if (isObservable(this.httpCancelRequests$)) {\r\n      this.httpCancelRequests$.next(); // this cancels any pending http requests\r\n    }\r\n    this.disposeColumnFilters();\r\n    this._onSearchChange = null;\r\n    this.addFilterTemplateToHeaderRow = null;\r\n    this.customLocalFilter = null;\r\n    this.callbackSearchEvent = null;\r\n    this.handleBackendOnSearchChange = null;\r\n    this.handleLocalOnSearchChange = null;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the filters, since it's a singleton, we don't want to affect other grids with same columns\r\n   */\r\n  disposeColumnFilters() {\r\n    // we need to loop through all columnFilters and delete them 1 by 1\r\n    // only trying to make columnFilter an empty (without looping) would not trigger a dataset change\r\n    if (typeof this._columnFilters === 'object') {\r\n      for (const columnId in this._columnFilters) {\r\n        if (columnId && this._columnFilters[columnId]) {\r\n          delete this._columnFilters[columnId];\r\n        }\r\n      }\r\n    }\r\n\r\n    // also destroy each Filter instances\r\n    if (Array.isArray(this._filtersMetadata)) {\r\n      this._filtersMetadata.forEach((filter) => {\r\n        if (filter && filter.destroy) {\r\n          filter.destroy(true);\r\n        }\r\n      });\r\n    }\r\n    this._filtersMetadata = [];\r\n  }\r\n\r\n  /**\r\n   * When clearing or disposing of all filters, we need to loop through all columnFilters and delete them 1 by 1\r\n   * only trying to make columnFilter an empty (without looping) would not trigger a dataset change\r\n   */\r\n  resetColumnFilters() {\r\n    if (typeof this._columnFilters === 'object') {\r\n      for (const columnId in this._columnFilters) {\r\n        if (columnId && this._columnFilters[columnId]) {\r\n          delete this._columnFilters[columnId];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind a backend filter hook to the grid\r\n   * @param grid SlickGrid Grid object\r\n   */\r\n  bindBackendOnFilter(grid: any) {\r\n    this._filtersMetadata = [];\r\n\r\n    // subscribe to SlickGrid onHeaderRowCellRendered event to create filter template\r\n    this._eventHandler.subscribe(grid.onHeaderRowCellRendered, this.handleBackendOnSearchChange.bind(this));\r\n\r\n    // subscribe to the SlickGrid event and call the backend execution\r\n    if (this._onSearchChange) {\r\n      this._eventHandler.subscribe(this._onSearchChange, this.onBackendFilterChange.bind(this));\r\n    }\r\n  }\r\n\r\n  handleBackendOnSearchChange(_e: KeyboardEvent, args: any) {\r\n    // firstColumnIdRendered is null at first, so if it changes to being filled and equal, then we would know that it was already rendered\r\n    // this is to avoid rendering the filter twice (only the Select Filter for now), rendering it again also clears the filter which has unwanted side effect\r\n    if (args.column.id === this._firstColumnIdRendered) {\r\n      this._isFilterFirstRender = false;\r\n    }\r\n    this.addFilterTemplateToHeaderRow(null, args, this._isFilterFirstRender);\r\n    if (this._firstColumnIdRendered === '') {\r\n      this._firstColumnIdRendered = args.column.id;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind a local filter hook to the grid\r\n   * @param grid SlickGrid Grid object\r\n   * @param dataView\r\n   */\r\n  bindLocalOnFilter(grid: any) {\r\n    this._filtersMetadata = [];\r\n\r\n    this._dataView.setFilterArgs({ columnFilters: this._columnFilters, grid: this._grid, dataView: this._dataView });\r\n    this._dataView.setFilter(this.customLocalFilter.bind(this));\r\n\r\n    // bind any search filter change (e.g. input filter input change event)\r\n    if (this._onSearchChange) {\r\n      this._eventHandler.subscribe(this._onSearchChange, this.handleLocalOnSearchChange.bind(this));\r\n\r\n      // subscribe to SlickGrid onHeaderRowCellRendered event to create filter template\r\n      this._eventHandler.subscribe(grid.onHeaderRowCellRendered, this.addFilterTemplateToHeaderRow.bind(this));\r\n    }\r\n  }\r\n\r\n  handleLocalOnSearchChange(_e: KeyboardEvent, args: any) {\r\n    const isGridWithTreeData = this._gridOptions && this._gridOptions.enableTreeData || false;\r\n\r\n    // When using Tree Data, we need to do it in 2 steps\r\n    // step 1. we need to prefilter (search) the data prior, the result will be an array of IDs which are the node(s) and their parent nodes when necessary.\r\n    // step 2. calling the DataView.refresh() is what triggers the final filtering, with \"customLocalFilter()\" which will decide which rows should persist\r\n    if (isGridWithTreeData) {\r\n      this._tmpPreFilteredData = this.preFilterTreeData(this._dataView.getItems(), this._columnFilters);\r\n    }\r\n\r\n    const columnId = args.columnId;\r\n    if (columnId !== null) {\r\n      this._dataView.refresh();\r\n    }\r\n    // emit an onFilterChanged event when it's not called by a clear filter\r\n    if (args && !args.clearFilterTriggered) {\r\n      this.emitFilterChanged(EmitterType.local);\r\n    }\r\n  }\r\n\r\n  clearFilterByColumnId(event: Event, columnId: number | string) {\r\n    // get current column filter before clearing, this allow us to know if the filter was empty prior to calling the clear filter\r\n    const currentColumnFilters = Object.keys(this._columnFilters) as ColumnFilter[];\r\n    let currentColFilter: ColumnFilter;\r\n    if (Array.isArray(currentColumnFilters)) {\r\n      currentColFilter = currentColumnFilters.find((name) => name === columnId);\r\n    }\r\n\r\n    // find the filter object and call its clear method with true (the argument tells the method it was called by a clear filter)\r\n    const colFilter: Filter = this._filtersMetadata.find((filter: Filter) => filter.columnDef.id === columnId);\r\n    if (colFilter && colFilter.clear) {\r\n      colFilter.clear(true);\r\n    }\r\n\r\n    let emitter: EmitterType = EmitterType.local;\r\n    const isBackendApi = this._gridOptions && this._gridOptions.backendServiceApi || false;\r\n\r\n    // when using a backend service, we need to manually trigger a filter change but only if the filter was previously filled\r\n    if (isBackendApi) {\r\n      emitter = EmitterType.remote;\r\n      if (currentColFilter) {\r\n        this.onBackendFilterChange(event as KeyboardEvent, { grid: this._grid, columnFilters: this._columnFilters });\r\n      }\r\n    }\r\n\r\n    // emit an event when filter is cleared\r\n    this.emitFilterChanged(emitter);\r\n  }\r\n\r\n  /** Clear the search filters (below the column titles) */\r\n  clearFilters(triggerChange = true) {\r\n    this._filtersMetadata.forEach((filter: Filter) => {\r\n      if (filter && filter.clear) {\r\n        // clear element but don't trigger individual clear change,\r\n        // we'll do 1 trigger for all filters at once afterward\r\n        filter.clear(false);\r\n      }\r\n    });\r\n\r\n    // also reset the columnFilters object and remove any filters from the object\r\n    this.resetColumnFilters();\r\n\r\n    // we also need to refresh the dataView and optionally the grid (it's optional since we use DataView)\r\n    if (this._dataView && this._grid) {\r\n      this._dataView.refresh();\r\n      this._grid.invalidate();\r\n    }\r\n\r\n    // when using backend service, we need to query only once so it's better to do it here\r\n    const backendApi = this._gridOptions && this._gridOptions.backendServiceApi;\r\n    if (backendApi && triggerChange) {\r\n      const callbackArgs = { clearFilterTriggered: true, shouldTriggerQuery: triggerChange, grid: this._grid, columnFilters: this._columnFilters };\r\n      const queryResponse = backendApi.service.processOnFilterChanged(undefined, callbackArgs as FilterChangedArgs);\r\n      if (queryResponse instanceof Promise && queryResponse.then) {\r\n        // @deprecated, processOnFilterChanged in the future should be returned as a query string NOT as a Promise\r\n        console.warn(`[Angular-Slickgrid] please note that the \"processOnFilterChanged\" from your Backend Service, should now return a string instead of a Promise.\r\n          Returning a Promise will be deprecated in the future.`);\r\n        queryResponse.then((query: string) => {\r\n          const totalItems = this._gridOptions && this._gridOptions.pagination && this._gridOptions.pagination.totalItems;\r\n          executeBackendCallback(backendApi, query, callbackArgs, new Date(), totalItems, this.emitFilterChanged.bind(this));\r\n        });\r\n      } else {\r\n        const query = queryResponse as string;\r\n        const totalItems = this._gridOptions && this._gridOptions.pagination && this._gridOptions.pagination.totalItems;\r\n        executeBackendCallback(backendApi, query, callbackArgs, new Date(), totalItems, this.emitFilterChanged.bind(this));\r\n      }\r\n    }\r\n\r\n    // emit an event when filters are all cleared\r\n    if (triggerChange) {\r\n      this.onFilterCleared.next(true);\r\n    }\r\n  }\r\n\r\n  /** Local Grid Filter search */\r\n  customLocalFilter(item: any, args: any): boolean {\r\n    const dataView = args && args.dataView;\r\n    const grid = args && args.grid;\r\n    const isGridWithTreeData = this._gridOptions && this._gridOptions.enableTreeData || false;\r\n    const columnFilters = args && args.columnFilters || {};\r\n    let treeDataOptions;\r\n\r\n    // when the column is a Tree Data structure and the parent is collapsed, we won't go further and just continue with next row\r\n    // so we always run this check even when there are no filter search, the reason is because the user might click on the expand/collapse\r\n    if (isGridWithTreeData && this._gridOptions && this._gridOptions.treeDataOptions) {\r\n      treeDataOptions = this._gridOptions.treeDataOptions;\r\n      const collapsedPropName = treeDataOptions.collapsedPropName || '__collapsed';\r\n      const parentPropName = treeDataOptions.parentPropName || '__parentId';\r\n      const dataViewIdIdentifier = this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n      if (item[parentPropName] !== null) {\r\n        let parent = this._dataView.getItemById(item[parentPropName]);\r\n        while (parent) {\r\n          if (parent[collapsedPropName]) {\r\n            return false; // don't display any row that have their parent collapsed\r\n          }\r\n          parent = this._dataView.getItemById(parent[parentPropName]);\r\n        }\r\n      }\r\n\r\n      // filter out any row items that aren't part of our pre-processed \"preFilterTreeData()\" result\r\n      if (Array.isArray(this._tmpPreFilteredData)) {\r\n        return this._tmpPreFilteredData.includes(item[dataViewIdIdentifier]); // return true when found, false otherwise\r\n      }\r\n    } else {\r\n      if (typeof columnFilters === 'object') {\r\n        for (const columnId of Object.keys(columnFilters)) {\r\n          const columnFilter = columnFilters[columnId] as ColumnFilter;\r\n          const conditionOptions = this.getFilterConditionOptionsOrBoolean(item, columnFilter, columnId, grid, dataView);\r\n          if (typeof conditionOptions === 'boolean') {\r\n            return conditionOptions;\r\n          }\r\n\r\n          if (!FilterConditions.executeMappedCondition(conditionOptions as FilterConditionOption)) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // if it reaches here, that means the row is valid and passed all filter\r\n    return true;\r\n  }\r\n\r\n  getFilterConditionOptionsOrBoolean(item: any, columnFilter: ColumnFilter, columnId: string | number, grid: any, dataView: any): FilterConditionOption | boolean {\r\n    let columnIndex = grid.getColumnIndex(columnId) as number;\r\n    let columnDef = grid.getColumns()[columnIndex] as Column;\r\n\r\n    // it might be a hidden column, if so it won't be part of the getColumns (because it we hide a column via setColumns)\r\n    // when that happens we can try to get the column definition from all defined columns\r\n    if (!columnDef && this.sharedService && Array.isArray(this.sharedService.allColumns)) {\r\n      columnIndex = this.sharedService.allColumns.findIndex((col) => col.field === columnId);\r\n      columnDef = this.sharedService.allColumns[columnIndex];\r\n    }\r\n\r\n    // if we still don't have a column definition then we should return then row anyway (true)\r\n    if (!columnDef) {\r\n      return true;\r\n    }\r\n\r\n    // Row Detail View plugin, if the row is padding we just get the value we're filtering on from it's parent\r\n    if (this._gridOptions.enableRowDetailView) {\r\n      const metadataPrefix = this._gridOptions.rowDetailView && this._gridOptions.rowDetailView.keyPrefix || '__';\r\n      if (item[`${metadataPrefix}isPadding`] && item[`${metadataPrefix}parent`]) {\r\n        item = item[`${metadataPrefix}parent`];\r\n      }\r\n    }\r\n\r\n    const dataKey = columnDef.dataKey;\r\n    let queryFieldName = (columnDef.filter && columnDef.filter.queryField) || columnDef.queryFieldFilter || columnDef.queryField || columnDef.field || '';\r\n    if (typeof columnDef.queryFieldNameGetterFn === 'function') {\r\n      queryFieldName = columnDef.queryFieldNameGetterFn(item);\r\n    }\r\n    const fieldType = (columnDef.filter && columnDef.filter.type) || columnDef.type || FieldType.string;\r\n    const filterSearchType = (columnDef.filterSearchType) ? columnDef.filterSearchType : null;\r\n    let cellValue = item[queryFieldName];\r\n\r\n    // when item is a complex object (dot \".\" notation), we need to filter the value contained in the object tree\r\n    if (queryFieldName && queryFieldName.indexOf('.') >= 0) {\r\n      cellValue = getDescendantProperty(item, queryFieldName);\r\n    }\r\n\r\n    // if we find searchTerms use them but make a deep copy so that we don't affect original array\r\n    // we might have to overwrite the value(s) locally that are returned\r\n    // e.g: we don't want to operator within the search value, since it will fail filter condition check trigger afterward\r\n    const searchValues: SearchTerm[] = (columnFilter && columnFilter.searchTerms) ? $.extend(true, [], columnFilter.searchTerms) : [];\r\n    let fieldSearchValue = (Array.isArray(searchValues) && searchValues.length === 1) ? searchValues[0] : '';\r\n\r\n    let matches = null;\r\n    if (fieldType !== FieldType.object) {\r\n      fieldSearchValue = '' + fieldSearchValue; // make sure it's a string\r\n      matches = fieldSearchValue.match(/^([<>!=\\*]{0,2})(.*[^<>!=\\*])([\\*]?)$/); // group 1: Operator, 2: searchValue, 3: last char is '*' (meaning starts with, ex.: abc*)\r\n    }\r\n\r\n    let operator = columnFilter.operator || ((matches) ? matches[1] : '');\r\n    const searchTerm = (!!matches) ? matches[2] : '';\r\n    const lastValueChar = (!!matches) ? matches[3] : (operator === '*z' ? '*' : '');\r\n\r\n    if (searchValues && searchValues.length > 1) {\r\n      fieldSearchValue = searchValues.join(',');\r\n    } else if (typeof fieldSearchValue === 'string') {\r\n      // escaping the search value\r\n      fieldSearchValue = fieldSearchValue.replace(`'`, `''`); // escape single quotes by doubling them\r\n      if (operator === '*' || operator === 'a*' || operator === '*z' || lastValueChar === '*') {\r\n        operator = (operator === '*' || operator === '*z') ? OperatorType.endsWith : OperatorType.startsWith;\r\n      }\r\n    }\r\n\r\n    // no need to query if search value is empty or if the search value is in fact equal to the operator\r\n    if (searchTerm === '' && (!searchValues || (Array.isArray(searchValues) && (searchValues.length === 0 || searchValues.length === 1 && operator === searchValues[0])))) {\r\n      return true;\r\n    }\r\n\r\n    // if search value has a regex match we will only keep the value without the operator\r\n    // in this case we need to overwrite the returned search values to truncate operator from the string search\r\n    if (Array.isArray(matches) && matches.length >= 1 && (Array.isArray(searchValues) && searchValues.length === 1)) {\r\n      searchValues[0] = searchTerm;\r\n    }\r\n\r\n    // filter search terms should always be string type (even though we permit the end user to input numbers)\r\n    // so make sure each term are strings, if user has some default search terms, we will cast them to string\r\n    if (searchValues && Array.isArray(searchValues) && fieldType !== FieldType.object) {\r\n      for (let k = 0, ln = searchValues.length; k < ln; k++) {\r\n        // make sure all search terms are strings\r\n        searchValues[k] = ((searchValues[k] === undefined || searchValues[k] === null) ? '' : searchValues[k]) + '';\r\n      }\r\n    }\r\n\r\n    // when using localization (i18n), we should use the formatter output to search as the new cell value\r\n    if (columnDef && columnDef.params && columnDef.params.useFormatterOuputToFilter) {\r\n      const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n      const rowIndex = (dataView && typeof dataView.getIdxById === 'function') ? dataView.getIdxById(item[idPropName]) : 0;\r\n      cellValue = (columnDef && typeof columnDef.formatter === 'function') ? columnDef.formatter(rowIndex, columnIndex, cellValue, columnDef, item, this._grid) : '';\r\n    }\r\n\r\n    // make sure cell value is always a string\r\n    if (typeof cellValue === 'number') {\r\n      cellValue = cellValue.toString();\r\n    }\r\n\r\n    const currentCellValue = cellValue;\r\n    return {\r\n      dataKey,\r\n      fieldType,\r\n      searchTerms: searchValues,\r\n      cellValue: currentCellValue,\r\n      operator: operator as OperatorString,\r\n      cellValueLastChar: lastValueChar,\r\n      filterSearchType\r\n    } as FilterConditionOption;\r\n  }\r\n\r\n  /**\r\n   * When using Tree Data, we need to prefilter (search) the data prior, the result will be an array of IDs which are the node(s) and their parent nodes when necessary.\r\n   * This will then be passed to the DataView setFilter(customLocalFilter), which will itself loop through the list of IDs and display/hide the row if found that array of IDs\r\n   * We do this in 2 steps so that we can still use the DataSet setFilter()\r\n   */\r\n  preFilterTreeData(inputArray: any[], columnFilters: ColumnFilters) {\r\n    const treeDataOptions = this._gridOptions && this._gridOptions.treeDataOptions;\r\n    const parentPropName = treeDataOptions && treeDataOptions.parentPropName || '__parentId';\r\n    const dataViewIdIdentifier = this._gridOptions && this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n    const treeObj = {};\r\n    const filteredChildrenAndParents: any[] = [];\r\n\r\n    if (Array.isArray(inputArray)) {\r\n      for (let i = 0; i < inputArray.length; i++) {\r\n        treeObj[inputArray[i][dataViewIdIdentifier]] = inputArray[i];\r\n        // as the filtered data is then used again as each subsequent letter\r\n        // we need to delete the .__used property, otherwise the logic below\r\n        // in the while loop (which checks for parents) doesn't work:\r\n        delete treeObj[inputArray[i][dataViewIdIdentifier]].__used;\r\n      }\r\n\r\n      for (let i = 0; i < inputArray.length; i++) {\r\n        const item = inputArray[i];\r\n        let matchFilter = true; // valid until proven otherwise\r\n\r\n        // loop through all column filters and execute filter condition(s)\r\n        for (const columnId of Object.keys(columnFilters)) {\r\n          const columnFilter = columnFilters[columnId] as ColumnFilter;\r\n          const conditionOptionResult = this.getFilterConditionOptionsOrBoolean(item, columnFilter, columnId, this._grid, this._dataView);\r\n\r\n          if (conditionOptionResult) {\r\n            const conditionResult = (typeof conditionOptionResult === 'boolean') ? conditionOptionResult : FilterConditions.executeMappedCondition(conditionOptionResult as FilterConditionOption);\r\n            if (conditionResult) {\r\n              // don't return true since we still need to check other keys in columnFilters\r\n              continue;\r\n            }\r\n          }\r\n          matchFilter = false;\r\n          continue;\r\n        }\r\n\r\n        // build an array from the matched filters, anything valid from filter condition\r\n        // will be pushed to the filteredChildrenAndParents array\r\n        if (matchFilter) {\r\n          const len = filteredChildrenAndParents.length;\r\n          // add child (id):\r\n          filteredChildrenAndParents.splice(len, 0, item[dataViewIdIdentifier]);\r\n          let parent = treeObj[item[parentPropName]] || false;\r\n          while (parent) {\r\n            // only add parent (id) if not already added:\r\n            parent.__used || filteredChildrenAndParents.splice(len, 0, parent[dataViewIdIdentifier]);\r\n            // mark each parent as used to not use them again later:\r\n            treeObj[parent[dataViewIdIdentifier]].__used = true;\r\n            // try to find parent of the current parent, if exists:\r\n            parent = treeObj[parent[parentPropName]] || false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return filteredChildrenAndParents;\r\n  }\r\n\r\n  getColumnFilters() {\r\n    return this._columnFilters;\r\n  }\r\n\r\n  getFiltersMetadata() {\r\n    return this._filtersMetadata;\r\n  }\r\n\r\n  getCurrentLocalFilters(): CurrentFilter[] {\r\n    const currentFilters: CurrentFilter[] = [];\r\n    if (this._columnFilters) {\r\n      for (const colId of Object.keys(this._columnFilters)) {\r\n        const columnFilter = this._columnFilters[colId];\r\n        const filter = { columnId: colId || '' } as CurrentFilter;\r\n\r\n        if (columnFilter && columnFilter.searchTerms) {\r\n          filter.searchTerms = columnFilter.searchTerms;\r\n        }\r\n        if (columnFilter.operator) {\r\n          filter.operator = columnFilter.operator;\r\n        }\r\n        if (Array.isArray(filter.searchTerms) && filter.searchTerms.length > 0 && filter.searchTerms[0] !== '') {\r\n          currentFilters.push(filter);\r\n        }\r\n      }\r\n    }\r\n    return currentFilters;\r\n  }\r\n\r\n  /**\r\n   * A simple function that is binded to the subscriber and emit a change when the filter is called.\r\n   * Other services, like Pagination, can then subscribe to it.\r\n   * @param caller\r\n   */\r\n  emitFilterChanged(caller: EmitterType) {\r\n    if (caller === EmitterType.remote && this._gridOptions && this._gridOptions.backendServiceApi) {\r\n      let currentFilters: CurrentFilter[] = [];\r\n      const backendService = this._gridOptions.backendServiceApi.service;\r\n      if (backendService && backendService.getCurrentFilters) {\r\n        currentFilters = backendService.getCurrentFilters() as CurrentFilter[];\r\n      }\r\n      this.onFilterChanged.next(currentFilters);\r\n    } else if (caller === EmitterType.local) {\r\n      this.onFilterChanged.next(this.getCurrentLocalFilters());\r\n    }\r\n  }\r\n\r\n  async onBackendFilterChange(event: KeyboardEvent, args: any) {\r\n    if (!args || !args.grid) {\r\n      throw new Error('Something went wrong when trying to bind the \"onBackendFilterChange(event, args)\" function, it seems that \"args\" is not populated correctly');\r\n    }\r\n\r\n    // const gridOptions: GridOption = (args.grid && args.grid.getOptions) ? args.grid.getOptions() : {};\r\n    const backendApi = this._gridOptions.backendServiceApi;\r\n\r\n    if (!backendApi || !backendApi.process || !backendApi.service) {\r\n      throw new Error(`BackendServiceApi requires at least a \"process\" function and a \"service\" defined`);\r\n    }\r\n\r\n    // keep start time & end timestamps & return it after process execution\r\n    const startTime = new Date();\r\n\r\n    // run a preProcess callback if defined\r\n    if (backendApi.preProcess) {\r\n      backendApi.preProcess();\r\n    }\r\n\r\n    // only add a delay when user is typing, on select dropdown filter (or \"Clear Filter\") it will execute right away\r\n    let debounceTypingDelay = 0;\r\n    const isTriggeredByClearFilter = args && args.clearFilterTriggered; // was it trigger by a \"Clear Filter\" command?\r\n\r\n    const eventType = event && event.type;\r\n    const eventKeyCode = event && event.keyCode;\r\n    if (!isTriggeredByClearFilter && eventKeyCode !== KeyCode.ENTER && (eventType === 'input' || eventType === 'keyup' || eventType === 'keydown')) {\r\n      debounceTypingDelay = backendApi.hasOwnProperty('filterTypingDebounce') ? backendApi.filterTypingDebounce as number : DEFAULT_FILTER_TYPING_DEBOUNCE;\r\n    }\r\n\r\n    // query backend, except when it's called by a ClearFilters then we won't\r\n    if (args && args.shouldTriggerQuery) {\r\n      // call the service to get a query back\r\n      // @deprecated TODO: remove async/await on next major change, refer to processOnFilterChanged in BackendService interface (with @deprecated)\r\n      clearTimeout(timer);\r\n      if (debounceTypingDelay > 0) {\r\n        timer = setTimeout(async () => {\r\n          const query = await backendApi.service.processOnFilterChanged(event, args);\r\n          const totalItems = this._gridOptions && this._gridOptions.pagination && this._gridOptions.pagination.totalItems;\r\n          executeBackendCallback(backendApi, query, args, startTime, totalItems, this.emitFilterChanged.bind(this), this.httpCancelRequests$);\r\n        }, debounceTypingDelay);\r\n      } else {\r\n        const query = await backendApi.service.processOnFilterChanged(event, args);\r\n        const totalItems = this._gridOptions && this._gridOptions.pagination && this._gridOptions.pagination.totalItems;\r\n        executeBackendCallback(backendApi, query, args, startTime, totalItems, this.emitFilterChanged.bind(this), this.httpCancelRequests$);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When user passes an array of preset filters, we need to pre-populate each column filter searchTerm(s)\r\n   * The process is to loop through the preset filters array, find the associated column from columnDefinitions and fill in the filter object searchTerm(s)\r\n   * This is basically the same as if we would manually add searchTerm(s) to a column filter object in the column definition, but we do it programmatically.\r\n   * At the end of the day, when creating the Filter (DOM Element), it will use these searchTerm(s) so we can take advantage of that without recoding each Filter type (DOM element)\r\n   */\r\n  populateColumnFilterSearchTermPresets(filters: CurrentFilter[]) {\r\n    if (Array.isArray(filters) && filters.length > 0) {\r\n      this._columnDefinitions.forEach((columnDef: Column) => {\r\n        // clear any columnDef searchTerms before applying Presets\r\n        if (columnDef.filter && columnDef.filter.searchTerms) {\r\n          delete columnDef.filter.searchTerms;\r\n        }\r\n\r\n        // from each presets, we will find the associated columnDef and apply the preset searchTerms & operator if there is\r\n        const columnPreset = filters.find((presetFilter: CurrentFilter) => presetFilter.columnId === columnDef.id);\r\n        if (columnPreset && columnPreset.searchTerms && Array.isArray(columnPreset.searchTerms)) {\r\n          columnDef.filter = columnDef.filter || {};\r\n          columnDef.filter.operator = columnPreset.operator || columnDef.filter.operator || '';\r\n          columnDef.filter.searchTerms = columnPreset.searchTerms;\r\n        }\r\n      });\r\n\r\n      // when we have a Filter Presets on a Tree Data View grid, we need to call the pre-filtering of tree data\r\n      this.refreshTreeDataFilters();\r\n    }\r\n    return this._columnDefinitions;\r\n  }\r\n\r\n  /**\r\n   * when we have a Filter Presets on a Tree Data View grid, we need to call the pre-filtering of tree data\r\n   * we need to do this because Tree Data is the only type of grid that requires a pre-filter (preFilterTreeData) to be executed before the final filtering\r\n   * @param filters\r\n   */\r\n  refreshTreeDataFilters() {\r\n    if (this._dataView && this._dataView.getItems && this._gridOptions && this._gridOptions.enableTreeData) {\r\n      this._tmpPreFilteredData = this.preFilterTreeData(this._dataView.getItems(), this._columnFilters);\r\n      this._dataView.refresh(); // and finally this refresh() is what triggers a DataView filtering check\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the Filter Functionality\r\n   * @param {boolean} isFilterDisabled - optionally force a disable/enable of the Sort Functionality? Defaults to True\r\n   * @param {boolean} clearFiltersWhenDisabled - when disabling the Filter, do we also want to clear all the filters as well? Defaults to True\r\n   */\r\n  disableFilterFunctionality(isFilterDisabled = true, clearFiltersWhenDisabled = true) {\r\n    const prevShowFilterFlag = this._gridOptions.enableFiltering;\r\n    const newShowFilterFlag = !prevShowFilterFlag;\r\n\r\n    if (newShowFilterFlag !== isFilterDisabled) {\r\n      if (clearFiltersWhenDisabled && isFilterDisabled) {\r\n        this.clearFilters();\r\n      }\r\n      this.disableAllFilteringCommands(isFilterDisabled);\r\n      this._grid.setOptions({ enableFiltering: newShowFilterFlag }, false, true);\r\n      this._grid.setHeaderRowVisibility(newShowFilterFlag);\r\n      this._gridOptions.enableFiltering = !isFilterDisabled;\r\n      this.sharedService.gridOptions = this._gridOptions;\r\n\r\n      // when displaying header row, we'll call \"setColumns\" which in terms will recreate the header row filters\r\n      this._grid.setColumns(this.sharedService.columnDefinitions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle the Filter Functionality (show/hide the header row filter bar as well)\r\n   * @param {boolean} clearFiltersWhenDisabled - when disabling the filters, do we want to clear the filters before hiding the filters? Defaults to True\r\n   */\r\n  toggleFilterFunctionality(clearFiltersWhenDisabled = true) {\r\n    const prevShowFilterFlag = this._gridOptions.enableFiltering;\r\n    this.disableFilterFunctionality(prevShowFilterFlag, clearFiltersWhenDisabled);\r\n  }\r\n\r\n  /**\r\n   * Toggle the Header Row filter bar (this does not disable the Filtering itself, you can use \"toggleFilterFunctionality()\" instead, however this will reset any column positions)\r\n   */\r\n  toggleHeaderFilterRow() {\r\n    let showHeaderRow = this._gridOptions && this._gridOptions.showHeaderRow || false;\r\n    showHeaderRow = !showHeaderRow; // inverse show header flag\r\n    this._grid.setHeaderRowVisibility(showHeaderRow);\r\n\r\n    // when displaying header row, we'll call \"setColumns\" which in terms will recreate the header row filters\r\n    if (showHeaderRow === true) {\r\n      this._grid.setColumns(this.sharedService.columnDefinitions);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the sort icons in the UI (ONLY the icons, it does not do any sorting)\r\n   * The column sort icons are not necessarily inter-connected to the sorting functionality itself,\r\n   * you can change the sorting icons separately by passing an array of columnId/sortAsc and that will change ONLY the icons\r\n   * @param sortColumns\r\n   */\r\n  setSortColumnIcons(sortColumns: { columnId: string, sortAsc: boolean }[]) {\r\n    if (this._grid && Array.isArray(sortColumns)) {\r\n      this._grid.setSortColumns(sortColumns);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update Filters dynamically just by providing an array of filter(s).\r\n   * You can also choose emit (default) a Filter Changed event that will be picked by the Grid State Service.\r\n   *\r\n   * Also for backend service only, you can choose to trigger a backend query (default) or not if you wish to do it later,\r\n   * this could be useful when using updateFilters & updateSorting and you wish to only send the backend query once.\r\n   * @param filters array\r\n   * @param triggerEvent defaults to True, do we want to emit a filter changed event?\r\n   * @param triggerBackendQuery defaults to True, which will query the backend.\r\n   */\r\n  updateFilters(filters: CurrentFilter[], emitChangedEvent = true, triggerBackendQuery = true, triggerOnSearchChangeEvent = false) {\r\n    if (!this._filtersMetadata || this._filtersMetadata.length === 0 || !this._gridOptions || !this._gridOptions.enableFiltering) {\r\n      throw new Error('[Angular-Slickgrid] in order to use \"updateFilters\" method, you need to have Filterable Columns defined in your grid and \"enableFiltering\" set in your Grid Options');\r\n    }\r\n\r\n    if (Array.isArray(filters)) {\r\n      // start by clearing all filters (without triggering an event) before applying any new filters\r\n      this.clearFilters(false);\r\n\r\n      // pre-fill (value + operator) and render all filters in the DOM\r\n      // loop through each Filters provided (which has a columnId property)\r\n      // then find their associated Filter instances that were originally created in the grid\r\n      filters.forEach((newFilter) => {\r\n        const uiFilter = this._filtersMetadata.find((filter) => newFilter.columnId === filter.columnDef.id);\r\n        if (newFilter && uiFilter) {\r\n          const newOperator = newFilter.operator || uiFilter.defaultOperator;\r\n          this.updateColumnFilters(newFilter.searchTerms, uiFilter.columnDef, newOperator);\r\n          uiFilter.setValues(newFilter.searchTerms, newOperator);\r\n\r\n          if (triggerOnSearchChangeEvent) {\r\n            this.callbackSearchEvent(null, { columnDef: uiFilter.columnDef, operator: newOperator, searchTerms: newFilter.searchTerms, shouldTriggerQuery: true });\r\n          }\r\n        }\r\n      });\r\n\r\n      const backendApi = this._gridOptions && this._gridOptions.backendServiceApi;\r\n\r\n      // refresh the DataView and trigger an event after all filters were updated and rendered\r\n      this._dataView.refresh();\r\n\r\n      if (backendApi) {\r\n        const backendApiService = backendApi && backendApi.service;\r\n        if (backendApiService) {\r\n          backendApiService.updateFilters(filters, true);\r\n          if (triggerBackendQuery) {\r\n            refreshBackendDataset(this._gridOptions);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (emitChangedEvent) {\r\n        const emitterType = backendApi ? EmitterType.remote : EmitterType.local;\r\n        this.emitFilterChanged(emitterType);\r\n      }\r\n    }\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // -------------------\r\n\r\n  /** Add all created filters (from their template) to the header row section area */\r\n  private addFilterTemplateToHeaderRow(_event: Event, args: { column: Column; grid: any; node: HTMLElement }, isFilterFirstRender = true) {\r\n    const columnDef = args.column;\r\n    const columnId = columnDef && columnDef.id || '';\r\n\r\n    if (columnDef && columnId !== 'selector' && columnDef.filterable) {\r\n      let searchTerms: SearchTerm[] | undefined;\r\n      let operator: OperatorType | OperatorString;\r\n      const newFilter: Filter | undefined = this.filterFactory.createFilter(args.column.filter);\r\n      operator = (columnDef && columnDef.filter && columnDef.filter.operator) || (newFilter && newFilter.operator) || undefined;\r\n\r\n      if (this._columnFilters[columnDef.id]) {\r\n        searchTerms = this._columnFilters[columnDef.id].searchTerms || undefined;\r\n        operator = this._columnFilters[columnDef.id].operator || undefined;\r\n      } else if (columnDef.filter) {\r\n        // when hiding/showing (with Column Picker or Grid Menu), it will try to re-create yet again the filters (since SlickGrid does a re-render)\r\n        // because of that we need to first get searchTerm(s) from the columnFilters (that is what the user last typed in a filter search input)\r\n        searchTerms = columnDef.filter.searchTerms || undefined;\r\n        this.updateColumnFilters(searchTerms, columnDef, operator);\r\n      }\r\n\r\n      const filterArguments: FilterArguments = {\r\n        grid: this._grid,\r\n        operator,\r\n        searchTerms,\r\n        columnDef,\r\n        callback: this.callbackSearchEvent.bind(this)\r\n      };\r\n\r\n      if (newFilter) {\r\n        newFilter.init(filterArguments, isFilterFirstRender);\r\n        const filterExistIndex = this._filtersMetadata.findIndex((filter) => newFilter.columnDef.id === filter.columnDef.id);\r\n\r\n        // add to the filters arrays or replace it when found\r\n        if (filterExistIndex === -1) {\r\n          this._filtersMetadata.push(newFilter);\r\n        } else {\r\n          this._filtersMetadata[filterExistIndex] = newFilter;\r\n        }\r\n\r\n        // when hiding/showing (with Column Picker or Grid Menu), it will try to re-create yet again the filters (since SlickGrid does a re-render)\r\n        // we need to also set again the values in the DOM elements if the values were set by a searchTerm(s)\r\n        if (searchTerms && newFilter.setValues) {\r\n          newFilter.setValues(searchTerms);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback method that is called and executed by the individual Filter (DOM element),\r\n   * for example when user type in a word to search (which uses InputFilter), this Filter will execute the callback from an input change event.\r\n   */\r\n  private callbackSearchEvent(event: any, args: FilterCallbackArg) {\r\n    if (args) {\r\n      const searchTerm = ((event && event.target) ? (event.target as HTMLInputElement).value : undefined);\r\n      const searchTerms = (args.searchTerms && Array.isArray(args.searchTerms)) ? args.searchTerms : (searchTerm ? [searchTerm] : undefined);\r\n      const columnDef = args.columnDef || null;\r\n      const columnId = columnDef && columnDef.id || '';\r\n      const operator = args.operator || undefined;\r\n      const hasSearchTerms = searchTerms && Array.isArray(searchTerms);\r\n      const termsCount = hasSearchTerms && searchTerms && searchTerms.length;\r\n      const oldColumnFilters = { ...this._columnFilters };\r\n\r\n      if (columnDef && columnId) {\r\n        if (!hasSearchTerms || termsCount === 0 || (termsCount === 1 && Array.isArray(searchTerms) && searchTerms[0] === '')) {\r\n          // delete the property from the columnFilters when it becomes empty\r\n          // without doing this, it would leave an incorrect state of the previous column filters when filtering on another column\r\n          delete this._columnFilters[columnId];\r\n        } else {\r\n          const colId = '' + columnId as string;\r\n          const colFilter: ColumnFilter = {\r\n            columnId: colId,\r\n            columnDef,\r\n            searchTerms,\r\n          };\r\n          if (operator) {\r\n            colFilter.operator = operator;\r\n          }\r\n          this._columnFilters[colId] = colFilter;\r\n        }\r\n      }\r\n\r\n      // event might have been created as a CustomEvent (e.g. CompoundDateFilter), without being a valid Slick.EventData,\r\n      // if so we will create a new Slick.EventData and merge it with that CustomEvent to avoid having SlickGrid errors\r\n      const eventData = (event && typeof event.isPropagationStopped !== 'function') ? $.extend({}, new Slick.EventData(), event) : event;\r\n\r\n      // trigger an event only if Filters changed or if ENTER key was pressed\r\n      const eventKey = event && event.key;\r\n      const eventKeyCode = event && event.keyCode;\r\n      if (this._onSearchChange && (eventKey === 'Enter' || eventKeyCode === KeyCode.ENTER || !isequal(oldColumnFilters, this._columnFilters))) {\r\n        this._onSearchChange.notify({\r\n          clearFilterTriggered: args.clearFilterTriggered,\r\n          shouldTriggerQuery: args.shouldTriggerQuery,\r\n          columnId,\r\n          columnDef,\r\n          columnFilters: this._columnFilters,\r\n          operator,\r\n          searchTerms,\r\n          grid: this._grid\r\n        }, eventData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loop through all column definitions and do the following thing\r\n   * 1. loop through each Header Menu commands and change the \"hidden\" commands to show/hide depending if it's enabled/disabled\r\n   * Also note that we aren't deleting any properties, we just toggle their flags so that we can reloop through at later point in time.\r\n   * (if we previously deleted these properties we wouldn't be able to change them back since these properties wouldn't exist anymore, hence why we just hide the commands)\r\n   * @param {boolean} isDisabling - are we disabling the filter functionality? Defaults to true\r\n   */\r\n  private disableAllFilteringCommands(isDisabling = true): Column[] {\r\n    const columnDefinitions = this._grid.getColumns();\r\n\r\n    // loop through column definition to hide/show header menu commands\r\n    columnDefinitions.forEach((col) => {\r\n      if (col && col.header && col.header.menu) {\r\n        col.header.menu.items.forEach(menuItem => {\r\n          if (menuItem && typeof menuItem !== 'string') {\r\n            const menuCommand = menuItem.command;\r\n            if (menuCommand === 'clear-filter') {\r\n              menuItem.hidden = isDisabling;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // loop through column definition to hide/show grid menu commands\r\n    if (this._gridOptions && this._gridOptions.gridMenu && this._gridOptions.gridMenu.customItems) {\r\n      this._gridOptions.gridMenu.customItems.forEach((menuItem) => {\r\n        if (menuItem && typeof menuItem !== 'string') {\r\n          const menuCommand = menuItem.command;\r\n          if (menuCommand === 'clear-filter' || menuCommand === 'toggle-filter') {\r\n            menuItem.hidden = isDisabling;\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return columnDefinitions;\r\n  }\r\n\r\n  private updateColumnFilters(searchTerms: SearchTerm[] | undefined, columnDef: any, operator?: OperatorType | OperatorString) {\r\n    if (searchTerms && columnDef) {\r\n      this._columnFilters[columnDef.id] = {\r\n        columnId: columnDef.id,\r\n        columnDef,\r\n        searchTerms,\r\n        operator\r\n      };\r\n    }\r\n  }\r\n}\r\n","import { isObservable, Subject } from 'rxjs';\n\nimport {\n  Column,\n  ColumnSort,\n  CurrentSorter,\n  EmitterType,\n  FieldType,\n  GridOption,\n  SlickEventHandler,\n  SortDirection,\n  SortDirectionNumber,\n  SortDirectionString,\n  TreeDataOption,\n} from './../models/index';\nimport { executeBackendCallback, refreshBackendDataset } from './backend-utilities';\nimport { convertHierarchicalViewToParentChildArray, getDescendantProperty } from './utilities';\nimport { sortByFieldType } from '../sorters/sorterUtilities';\nimport { SharedService } from './shared.service';\nimport { Injectable } from '@angular/core';\n\n// using external non-typed js libraries\ndeclare const Slick: any;\n\n@Injectable()\nexport class SortService {\n  private _currentLocalSorters: CurrentSorter[] = [];\n  private _eventHandler: SlickEventHandler;\n  private _grid: any;\n  private _isBackendGrid = false;\n  private httpCancelRequests$: Subject<void> = new Subject<void>(); // this will be used to cancel any pending http request\n  onSortChanged = new Subject<CurrentSorter[]>();\n  onSortCleared = new Subject<boolean>();\n\n  constructor(private sharedService: SharedService) {\n    this._eventHandler = new Slick.EventHandler();\n  }\n\n  /** Getter of the SlickGrid Event Handler */\n  get eventHandler(): SlickEventHandler {\n    return this._eventHandler;\n  }\n\n  /** Getter for the Grid Options pulled through the Grid Object */\n  private get _gridOptions(): GridOption {\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\n  }\n\n  /** Getter for the Column Definitions pulled through the Grid Object */\n  private get _columnDefinitions(): Column[] {\n    return (this._grid && this._grid.getColumns) ? this._grid.getColumns() : [];\n  }\n\n  /** Getter of SlickGrid DataView object */\n  private get _dataView(): any {\n    return (this._grid && this._grid.getData) ? this._grid.getData() : {};\n  }\n\n  /**\n   * Bind a backend sort (single/multi) hook to the grid\n   * @param grid SlickGrid Grid object\n   * @param dataView SlickGrid DataView object\n   */\n  bindBackendOnSort(grid: any) {\n    this._isBackendGrid = true;\n    this._grid = grid;\n\n    // subscribe to the SlickGrid event and call the backend execution\n    this._eventHandler.subscribe(grid.onSort, this.onBackendSortChanged.bind(this));\n  }\n\n  /**\n   * Bind a local sort (single/multi) hook to the grid\n   * @param grid SlickGrid Grid object\n   * @param gridOptions Grid Options object\n   * @param dataView\n   */\n  bindLocalOnSort(grid: any) {\n    this._isBackendGrid = false;\n    this._grid = grid;\n\n    this.processTreeDataInitialSort();\n    this._eventHandler.subscribe(grid.onSort, this.handleLocalOnSort.bind(this));\n  }\n\n  handleLocalOnSort(_e: any, args: any) {\n    if (args && (args.sortCols || args.sortCol)) {\n      // multiSort and singleSort are not exactly the same, but we want to structure it the same for the (for loop) after\n      // also to avoid having to rewrite the for loop in the sort, we will make the singleSort an array of 1 object\n      const sortColumns = (args.multiColumnSort) ? args.sortCols : new Array({ sortAsc: args.sortAsc, sortCol: args.sortCol });\n\n      // keep current sorters\n      this._currentLocalSorters = []; // reset current local sorters\n      if (Array.isArray(sortColumns)) {\n        sortColumns.forEach((sortColumn: { sortCol: Column; sortAsc: boolean; }) => {\n          if (sortColumn.sortCol) {\n            this._currentLocalSorters.push({\n              columnId: sortColumn.sortCol.id,\n              direction: sortColumn.sortAsc ? SortDirection.ASC : SortDirection.DESC\n            });\n          }\n        });\n      }\n\n      this.onLocalSortChanged(this._grid, sortColumns);\n      this.emitSortChanged(EmitterType.local);\n    }\n  }\n\n  clearSortByColumnId(event: Event | undefined, columnId: string | number) {\n    // get previously sorted columns\n    const allSortedCols: ColumnSort[] = this.getCurrentColumnSorts();\n    const sortedColsWithoutCurrent: ColumnSort[] = this.getCurrentColumnSorts(`${columnId}`);\n\n    if (Array.isArray(allSortedCols) && Array.isArray(sortedColsWithoutCurrent) && allSortedCols.length !== sortedColsWithoutCurrent.length) {\n      if (this._gridOptions.backendServiceApi) {\n        this.onBackendSortChanged(event, { multiColumnSort: true, sortCols: sortedColsWithoutCurrent, grid: this._grid });\n      } else if (this._dataView) {\n        this.onLocalSortChanged(this._grid, sortedColsWithoutCurrent, true, true);\n      } else {\n        // when using customDataView, we will simply send it as a onSort event with notify\n        const isMultiSort = this._gridOptions && this._gridOptions.multiColumnSort || false;\n        const sortOutput = isMultiSort ? sortedColsWithoutCurrent : sortedColsWithoutCurrent[0];\n        this._grid.onSort.notify(sortOutput);\n      }\n\n      // update the grid sortColumns array which will at the same add the visual sort icon(s) on the UI\n      const updatedSortColumns: ColumnSort[] = sortedColsWithoutCurrent.map((col) => {\n        return {\n          columnId: col && col.sortCol && col.sortCol.id,\n          sortAsc: col && col.sortAsc,\n          sortCol: col && col.sortCol,\n        };\n      });\n      this._grid.setSortColumns(updatedSortColumns); // add sort icon in UI\n    }\n\n    // when there's no more sorting, we re-sort by the default sort field, user can customize it \"defaultColumnSortFieldId\", defaults to \"id\"\n    if (Array.isArray(sortedColsWithoutCurrent) && sortedColsWithoutCurrent.length === 0) {\n      this.sortLocalGridByDefaultSortFieldId();\n    }\n  }\n\n  /**\n   * Clear Sorting\n   * - 1st, remove the SlickGrid sort icons (this setSortColumns function call really does only that)\n   * - 2nd, we also need to trigger a sort change\n   *   - for a backend grid, we will trigger a backend sort changed with an empty sort columns array\n   *   - however for a local grid, we need to pass a sort column and so we will sort by the 1st column\n   * @param trigger query event after executing clear filter?\n   */\n  clearSorting(triggerQueryEvent = true) {\n    if (this._grid && this._gridOptions && this._dataView) {\n      // remove any sort icons (this setSortColumns function call really does only that)\n      this._grid.setSortColumns([]);\n\n      // we also need to trigger a sort change\n      // for a backend grid, we will trigger a backend sort changed with an empty sort columns array\n      // however for a local grid, we need to pass a sort column and so we will sort by the 1st column\n      if (triggerQueryEvent) {\n        if (this._isBackendGrid) {\n          this.onBackendSortChanged(undefined, { grid: this._grid, sortCols: [], clearSortTriggered: true });\n        } else {\n          if (this._columnDefinitions && Array.isArray(this._columnDefinitions)) {\n            this.sortLocalGridByDefaultSortFieldId();\n          }\n        }\n      } else if (this._isBackendGrid) {\n        const backendService = this._gridOptions && this._gridOptions.backendServiceApi && this._gridOptions.backendServiceApi.service;\n        if (backendService && backendService.clearSorters) {\n          backendService.clearSorters();\n        }\n      }\n    }\n\n    // set current sorter to empty & emit a sort changed event\n    this._currentLocalSorters = [];\n\n    // emit an event when sorts are all cleared\n    this.onSortCleared.next(true);\n  }\n\n  dispose() {\n    // unsubscribe all SlickGrid events\n    if (this._eventHandler && this._eventHandler.unsubscribeAll) {\n      this._eventHandler.unsubscribeAll();\n    }\n    if (isObservable(this.httpCancelRequests$)) {\n      this.httpCancelRequests$.next(); // this cancels any pending http requests\n    }\n  }\n\n  /**\n   * Toggle the Sorting Functionality\n   * @param {boolean} isSortingDisabled - optionally force a disable/enable of the Sort Functionality? Defaults to True\n   * @param {boolean} clearSortingWhenDisabled - when disabling the sorting, do we also want to clear the sorting as well? Defaults to True\n   */\n  disableSortFunctionality(isSortingDisabled = true, clearSortingWhenDisabled = true) {\n    const prevSorting = this._gridOptions.enableSorting;\n    const newSorting = !prevSorting;\n\n    this._gridOptions.enableSorting = newSorting;\n    let updatedColumnDefinitions;\n    if (isSortingDisabled) {\n      if (clearSortingWhenDisabled) {\n        this.clearSorting();\n      }\n      this._eventHandler.unsubscribeAll();\n      updatedColumnDefinitions = this.disableAllSortingCommands(true);\n    } else {\n      updatedColumnDefinitions = this.disableAllSortingCommands(false);\n      const onSortHandler = this._grid.onSort;\n      this._eventHandler.subscribe(onSortHandler, (e: Event, args: any) => this.handleLocalOnSort(e, args));\n    }\n    this._grid.setOptions({ enableSorting: this._gridOptions.enableSorting }, false, true);\n    this.sharedService.gridOptions = this._gridOptions;\n\n    // reset columns so that it recreate the column headers and remove/add the sort icon hints\n    // basically without this, the sort icon hints were still showing up even after disabling the Sorting\n    this._grid.setColumns(updatedColumnDefinitions);\n  }\n\n  /**\n   * Toggle the Sorting functionality\n   * @param {boolean} clearSortingWhenDisabled - when disabling the sorting, do we also want to clear the sorting as well? Defaults to True\n   */\n  toggleSortFunctionality(clearSortingOnDisable = true) {\n    const previousSorting = this._gridOptions.enableSorting;\n    this.disableSortFunctionality(previousSorting, clearSortingOnDisable);\n  }\n\n  /**\n   * A simple function that is binded to the subscriber and emit a change when the sort is called.\n   * Other services, like Pagination, can then subscribe to it.\n   * @param sender\n   */\n  emitSortChanged(sender: EmitterType, currentLocalSorters?: CurrentSorter[]) {\n    if (sender === EmitterType.remote && this._gridOptions && this._gridOptions.backendServiceApi) {\n      let currentSorters: CurrentSorter[] = [];\n      const backendService = this._gridOptions.backendServiceApi.service;\n      if (backendService && backendService.getCurrentSorters) {\n        currentSorters = backendService.getCurrentSorters() as CurrentSorter[];\n      }\n      this.onSortChanged.next(currentSorters);\n    } else if (sender === EmitterType.local) {\n      if (currentLocalSorters) {\n        this._currentLocalSorters = currentLocalSorters;\n      }\n      this.onSortChanged.next(this.getCurrentLocalSorters());\n    }\n  }\n\n  getCurrentLocalSorters(): CurrentSorter[] {\n    return this._currentLocalSorters;\n  }\n\n  /**\n   * Get current column sorts,\n   * If a column is passed as an argument, that will be exclusion so we won't add this column to our output array since it is already in the array.\n   * The usage of this method is that we want to know the sort prior to calling the next sorting command\n   */\n  getCurrentColumnSorts(excludedColumnId?: string): { sortCol: Column; sortAsc: boolean; }[] {\n    // getSortColumns() only returns sortAsc & columnId, we want the entire column definition\n    const oldSortColumns = this._grid && this._grid.getSortColumns();\n\n    // get the column definition but only keep column which are not equal to our current column\n    if (Array.isArray(oldSortColumns)) {\n      const sortedCols = oldSortColumns.reduce((cols, col) => {\n        if (!excludedColumnId || col.columnId !== excludedColumnId) {\n          cols.push({ sortCol: this._columnDefinitions[this._grid.getColumnIndex(col.columnId)], sortAsc: col.sortAsc });\n        }\n        return cols;\n      }, []);\n\n      return sortedCols;\n    }\n    return [];\n  }\n\n  /** Load defined Sorting (sorters) into the grid */\n  loadGridSorters(sorters: CurrentSorter[]): ColumnSort[] {\n    this._currentLocalSorters = []; // reset current local sorters\n    const sortCols: ColumnSort[] = [];\n\n    if (Array.isArray(sorters)) {\n      sorters.forEach((sorter: CurrentSorter) => {\n        const gridColumn = this._columnDefinitions.find((col: Column) => col.id === sorter.columnId);\n        if (gridColumn) {\n          sortCols.push({\n            columnId: gridColumn.id,\n            sortAsc: ((sorter.direction.toUpperCase() === SortDirection.ASC) ? true : false),\n            sortCol: gridColumn\n          });\n\n          // keep current sorters\n          this._currentLocalSorters.push({\n            columnId: gridColumn.id + '',\n            direction: sorter.direction.toUpperCase() as SortDirectionString\n          });\n        }\n      });\n    }\n\n    if (sortCols.length > 0) {\n      this.onLocalSortChanged(this._grid, sortCols);\n      this._grid.setSortColumns(sortCols); // use this to add sort icon(s) in UI\n    }\n\n    return sortCols;\n  }\n\n  /** Process the initial sort, typically it will sort ascending by the column that has the Tree Data unless user specifies a different initialSort */\n  processTreeDataInitialSort() {\n    // when a Tree Data view is defined, we must sort the data so that the UI works correctly\n    if (this._gridOptions && this._gridOptions.enableTreeData && this._gridOptions.treeDataOptions) {\n      // first presort it once by tree level\n      const treeDataOptions = this._gridOptions.treeDataOptions;\n      const columnWithTreeData = this._columnDefinitions.find((col: Column) => col && col.id === treeDataOptions.columnId);\n      if (columnWithTreeData) {\n        let sortDirection = SortDirection.ASC;\n        let sortTreeLevelColumn: ColumnSort = { columnId: treeDataOptions.columnId, sortCol: columnWithTreeData, sortAsc: true };\n\n        // user could provide a custom sort field id, if so get that column and sort by it\n        if (treeDataOptions && treeDataOptions.initialSort && treeDataOptions.initialSort.columnId) {\n          const initialSortColumnId = treeDataOptions.initialSort.columnId;\n          const initialSortColumn = this._columnDefinitions.find((col: Column) => col.id === initialSortColumnId);\n          sortDirection = (treeDataOptions.initialSort.direction || SortDirection.ASC).toUpperCase() as SortDirection;\n          sortTreeLevelColumn = { columnId: initialSortColumnId, sortCol: initialSortColumn, sortAsc: (sortDirection === SortDirection.ASC) } as ColumnSort;\n        }\n\n        // when we have a valid column with Tree Data, we can sort by that column\n        if (sortTreeLevelColumn && sortTreeLevelColumn.columnId) {\n          this.updateSorting([{ columnId: sortTreeLevelColumn.columnId || '', direction: sortDirection }]);\n        }\n      }\n    }\n  }\n\n  onBackendSortChanged(event: Event, args: { multiColumnSort?: boolean; grid: any; sortCols: ColumnSort[]; clearSortTriggered?: boolean; }) {\n    if (!args || !args.grid) {\n      throw new Error('Something went wrong when trying to bind the \"onBackendSortChanged(event, args)\" function, it seems that \"args\" is not populated correctly');\n    }\n    const gridOptions: GridOption = (args.grid && args.grid.getOptions) ? args.grid.getOptions() : {};\n    const backendApi = gridOptions.backendServiceApi;\n\n    if (!backendApi || !backendApi.process || !backendApi.service) {\n      throw new Error(`BackendServiceApi requires at least a \"process\" function and a \"service\" defined`);\n    }\n\n    // keep start time & end timestamps & return it after process execution\n    const startTime = new Date();\n\n    if (backendApi.preProcess) {\n      backendApi.preProcess();\n    }\n\n    // query backend\n    const query = backendApi.service.processOnSortChanged(event, args);\n    const totalItems = gridOptions && gridOptions.pagination && gridOptions.pagination.totalItems;\n    executeBackendCallback(backendApi, query, args, startTime, totalItems, this.emitSortChanged.bind(this), this.httpCancelRequests$);\n  }\n\n  /** When a Sort Changes on a Local grid (JSON dataset) */\n  onLocalSortChanged(grid: any, sortColumns: ColumnSort[], forceReSort = false, emitSortChanged = false) {\n    const isTreeDataEnabled = this._gridOptions && this._gridOptions.enableTreeData || false;\n    const dataView = grid && grid.getData && grid.getData();\n\n    if (grid && dataView) {\n      if (forceReSort && !isTreeDataEnabled) {\n        dataView.reSort();\n      }\n\n      if (isTreeDataEnabled && this.sharedService && Array.isArray(this.sharedService.hierarchicalDataset)) {\n        const hierarchicalDataset = this.sharedService.hierarchicalDataset;\n        this.sortTreeData(hierarchicalDataset, sortColumns);\n        const dataViewIdIdentifier = this._gridOptions && this._gridOptions.datasetIdPropertyName || 'id';\n        const treeDataOpt: TreeDataOption = this._gridOptions && this._gridOptions.treeDataOptions || { columnId: '' };\n        const treeDataOptions = { ...treeDataOpt, identifierPropName: treeDataOpt.identifierPropName || dataViewIdIdentifier };\n        const sortedFlatArray = convertHierarchicalViewToParentChildArray(hierarchicalDataset, treeDataOptions);\n        dataView.setItems(sortedFlatArray, this._gridOptions && this._gridOptions.datasetIdPropertyName || 'id');\n      } else {\n        dataView.sort(this.sortComparers.bind(this, sortColumns));\n      }\n\n      grid.invalidate();\n      grid.render();\n\n      if (emitSortChanged) {\n        this.emitSortChanged(EmitterType.local, sortColumns.map(col => {\n          return {\n            columnId: col.sortCol && col.sortCol.id || 'id',\n            direction: col.sortAsc ? SortDirection.ASC : SortDirection.DESC\n          };\n        }));\n      }\n    }\n  }\n\n  /** Call a local grid sort by its default sort field id (user can customize default field by configuring \"defaultColumnSortFieldId\" in the grid options, defaults to \"id\") */\n  sortLocalGridByDefaultSortFieldId() {\n    const sortColFieldId = this._gridOptions && this._gridOptions.defaultColumnSortFieldId || this._gridOptions.datasetIdPropertyName || 'id';\n    const sortCol = { id: sortColFieldId, field: sortColFieldId } as Column;\n    this.onLocalSortChanged(this._grid, new Array({ sortAsc: true, sortCol, clearSortTriggered: true }));\n  }\n\n  sortComparers(sortColumns: ColumnSort[], dataRow1: any, dataRow2: any): number {\n    if (Array.isArray(sortColumns)) {\n      for (const sortColumn of sortColumns) {\n        const result = this.sortComparer(sortColumn, dataRow1, dataRow2);\n        if (result !== undefined) {\n          return result;\n        }\n      }\n    }\n    return SortDirectionNumber.neutral;\n  }\n\n  sortComparer(sortColumn: ColumnSort, dataRow1: any, dataRow2: any, querySortField?: string): number | undefined {\n    if (sortColumn && sortColumn.sortCol) {\n      const columnDef = sortColumn.sortCol;\n      const sortDirection = sortColumn.sortAsc ? SortDirectionNumber.asc : SortDirectionNumber.desc;\n      let queryFieldName1 = querySortField || columnDef.queryFieldSorter || columnDef.queryField || columnDef.field;\n      let queryFieldName2 = queryFieldName1;\n      const fieldType = columnDef.type || FieldType.string;\n\n      // if user provided a query field name getter callback, we need to get the name on each item independently\n      if (typeof columnDef.queryFieldNameGetterFn === 'function') {\n        queryFieldName1 = columnDef.queryFieldNameGetterFn(dataRow1);\n        queryFieldName2 = columnDef.queryFieldNameGetterFn(dataRow2);\n      }\n\n      let value1 = dataRow1[queryFieldName1];\n      let value2 = dataRow2[queryFieldName2];\n\n      // when item is a complex object (dot \".\" notation), we need to filter the value contained in the object tree\n      if (queryFieldName1 && queryFieldName1.indexOf('.') >= 0) {\n        value1 = getDescendantProperty(dataRow1, queryFieldName1);\n      }\n      if (queryFieldName2 && queryFieldName2.indexOf('.') >= 0) {\n        value2 = getDescendantProperty(dataRow2, queryFieldName2);\n      }\n\n      // user could provide his own custom Sorter\n      if (columnDef.sorter) {\n        const customSortResult = columnDef.sorter(value1, value2, sortDirection, columnDef);\n        if (customSortResult !== SortDirectionNumber.neutral) {\n          return customSortResult;\n        }\n      } else {\n        const sortResult = sortByFieldType(fieldType, value1, value2, sortDirection, columnDef);\n        if (sortResult !== SortDirectionNumber.neutral) {\n          return sortResult;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  sortTreeData(hierarchicalArray: any[], sortColumns: ColumnSort[]) {\n    if (Array.isArray(sortColumns)) {\n      for (const sortColumn of sortColumns) {\n        this.sortTreeChild(hierarchicalArray, sortColumn, 0);\n      }\n    }\n  }\n\n  /** Sort the Tree Children of a hierarchical dataset by recursion */\n  sortTreeChild(hierarchicalArray: any[], sortColumn: ColumnSort, treeLevel: number) {\n    const treeDataOptions = this._gridOptions && this._gridOptions.treeDataOptions;\n    const childrenPropName = treeDataOptions && treeDataOptions.childrenPropName || 'children';\n    hierarchicalArray.sort((a: any, b: any) => this.sortComparer(sortColumn, a, b) || SortDirectionNumber.neutral);\n\n    // when item has a child, we'll sort recursively\n    for (const item of hierarchicalArray) {\n      if (item) {\n        const hasChildren = item.hasOwnProperty(childrenPropName) && Array.isArray(item[childrenPropName]);\n        // when item has a child, we'll sort recursively\n        if (hasChildren) {\n          treeLevel++;\n          this.sortTreeChild(item[childrenPropName], sortColumn, treeLevel);\n          treeLevel--;\n        }\n      }\n    }\n  }\n\n  /**\n   * Update Sorting (sorters) dynamically just by providing an array of sorter(s).\n   * You can also choose emit (default) a Sort Changed event that will be picked by the Grid State Service.\n   *\n   * Also for backend service only, you can choose to trigger a backend query (default) or not if you wish to do it later,\n   * this could be useful when using updateFilters & updateSorting and you wish to only send the backend query once.\n   * @param sorters array\n   * @param triggerEvent defaults to True, do we want to emit a sort changed event?\n   * @param triggerBackendQuery defaults to True, which will query the backend.\n   */\n  updateSorting(sorters: CurrentSorter[], emitChangedEvent = true, triggerBackendQuery = true) {\n    if (!this._gridOptions || !this._gridOptions.enableSorting) {\n      throw new Error('[Angular-Slickgrid] in order to use \"updateSorting\" method, you need to have Sortable Columns defined in your grid and \"enableSorting\" set in your Grid Options');\n    }\n\n    if (Array.isArray(sorters)) {\n      const backendApi = this._gridOptions && this._gridOptions.backendServiceApi;\n\n      if (backendApi) {\n        const backendApiService = backendApi && backendApi.service;\n        if (backendApiService) {\n          backendApiService.updateSorters(undefined, sorters);\n          if (triggerBackendQuery) {\n            refreshBackendDataset(this._gridOptions);\n          }\n        }\n      } else {\n        this.loadGridSorters(sorters);\n      }\n\n      if (emitChangedEvent) {\n        const emitterType = backendApi ? EmitterType.remote : EmitterType.local;\n        this.emitSortChanged(emitterType);\n      }\n    }\n  }\n\n  // --\n  // private functions\n  // -------------------\n\n  /**\n   * Loop through all column definitions and do the following 2 things\n   * 1. disable/enable the \"sortable\" property of each column\n   * 2. loop through each Header Menu commands and change the \"hidden\" commands to show/hide depending if it's enabled/disabled\n   * Also note that we aren't deleting any properties, we just toggle their flags so that we can reloop through at later point in time.\n   * (if we previously deleted these properties we wouldn't be able to change them back since these properties wouldn't exist anymore, hence why we just hide the commands)\n   * @param {boolean} isDisabling - are we disabling the sort functionality? Defaults to true\n   */\n  private disableAllSortingCommands(isDisabling = true): Column[] {\n    const columnDefinitions = this._grid.getColumns();\n\n    // loop through column definition to hide/show header menu commands\n    columnDefinitions.forEach((col) => {\n      if (typeof col.sortable !== undefined) {\n        col.sortable = !isDisabling;\n      }\n      if (col && col.header && col.header.menu) {\n        col.header.menu.items.forEach(menuItem => {\n          if (menuItem && typeof menuItem !== 'string') {\n            const menuCommand = menuItem.command;\n            if (menuCommand === 'sort-asc' || menuCommand === 'sort-desc' || menuCommand === 'clear-sort') {\n              menuItem.hidden = isDisabling;\n            }\n          }\n        });\n      }\n    });\n\n    // loop through column definition to hide/show grid menu commands\n    if (this._gridOptions && this._gridOptions.gridMenu && this._gridOptions.gridMenu.customItems) {\n      this._gridOptions.gridMenu.customItems.forEach((menuItem) => {\n        if (menuItem && typeof menuItem !== 'string') {\n          const menuCommand = menuItem.command;\n          if (menuCommand === 'clear-sorting') {\n            menuItem.hidden = isDisabling;\n          }\n        }\n      });\n    }\n\n    return columnDefinitions;\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from '../constants';\r\nimport {\r\n  Column,\r\n  DelimiterType,\r\n  Extension,\r\n  ExtensionName,\r\n  FileType,\r\n  GridOption,\r\n  GridMenu,\r\n  GridMenuItem,\r\n  Locale,\r\n  MenuCommandItemCallbackArgs,\r\n  SlickEventHandler,\r\n} from '../models';\r\nimport { ExcelExportService } from '../services/excelExport.service';\r\nimport { ExportService } from '../services/export.service';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { FilterService } from '../services/filter.service';\r\nimport { SortService } from '../services/sort.service';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { refreshBackendDataset } from '../services/backend-utilities';\r\nimport { getTranslationPrefix } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\ndeclare const $: any;\r\n\r\n@Injectable()\r\nexport class GridMenuExtension implements Extension {\r\n  private _addon: any;\r\n  private _gridMenuOptions: GridMenu | null;\r\n  private _areVisibleColumnDifferent = false;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _locales: Locale;\r\n  private _userOriginalGridMenu: GridMenu;\r\n\r\n  constructor(\r\n    private excelExportService: ExcelExportService,\r\n    private exportService: ExportService,\r\n    private extensionUtility: ExtensionUtility,\r\n    private filterService: FilterService,\r\n    private sharedService: SharedService,\r\n    private sortService: SortService,\r\n    @Optional() private translate: TranslateService,\r\n  ) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.gridMenu && this.sharedService.gridOptions.gridMenu.customItems) {\r\n      this.sharedService.gridOptions.gridMenu = this._userOriginalGridMenu;\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._gridMenuOptions);\r\n    this._addon = null;\r\n    this._gridMenuOptions = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  /** Create the Header Menu and expose all the available hooks that user can subscribe (onCommand, onBeforeMenuShow, ...) */\r\n  register(): any {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    if (this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.gridMenu) {\r\n      // keep original user grid menu, useful when switching locale to translate\r\n      this._userOriginalGridMenu = { ...this.sharedService.gridOptions.gridMenu };\r\n\r\n      // get locales provided by user in forRoot or else use default English locales via the Constants\r\n      this._locales = this.sharedService.gridOptions && this.sharedService.gridOptions.locales || Constants.locales;\r\n\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.gridMenu);\r\n      this._gridMenuOptions = { ...this.getDefaultGridMenuOptions(), ...this.sharedService.gridOptions.gridMenu };\r\n      this.sharedService.gridOptions.gridMenu = this._gridMenuOptions;\r\n\r\n      // merge original user grid menu items with internal items\r\n      // then sort all Grid Menu Custom Items (sorted by pointer, no need to use the return)\r\n      const originalCustomItems = this._userOriginalGridMenu && Array.isArray(this._userOriginalGridMenu.customItems) ? this._userOriginalGridMenu.customItems : [];\r\n      this._gridMenuOptions.customItems = [...originalCustomItems, ...this.addGridMenuCustomCommands(originalCustomItems)];\r\n      this.extensionUtility.translateItems(this._gridMenuOptions.customItems, 'titleKey', 'title');\r\n      this.extensionUtility.sortItems(this._gridMenuOptions.customItems, 'positionOrder');\r\n\r\n      this._addon = new Slick.Controls.GridMenu(this.sharedService.allColumns, this.sharedService.grid, this.sharedService.gridOptions);\r\n\r\n      // hook all events\r\n      if (this._gridMenuOptions) {\r\n        if (this._gridMenuOptions.onExtensionRegistered) {\r\n          this._gridMenuOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        if (this._gridMenuOptions && typeof this._gridMenuOptions.onBeforeMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onBeforeMenuShow, (e: any, args: { grid: any; menu: any; columns: Column[] }) => {\r\n            this._gridMenuOptions.onBeforeMenuShow(e, args);\r\n          });\r\n        }\r\n        if (this._gridMenuOptions && typeof this._gridMenuOptions.onAfterMenuShow === 'function') {\r\n          this._eventHandler.subscribe(this._addon.onAfterMenuShow, (e: any, args: { grid: any; menu: any; columns: Column[] }) => {\r\n            this._gridMenuOptions.onAfterMenuShow(e, args);\r\n          });\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onColumnsChanged, (e: any, args: { columnId: string; showing: boolean; columns: Column[]; allColumns: Column[]; grid: any; }) => {\r\n          this._areVisibleColumnDifferent = true;\r\n          if (this._gridMenuOptions && typeof this._gridMenuOptions.onColumnsChanged === 'function') {\r\n            this._gridMenuOptions.onColumnsChanged(e, args);\r\n          }\r\n          if (args && Array.isArray(args.columns) && args.columns.length > this.sharedService.visibleColumns.length) {\r\n            this.sharedService.visibleColumns = args.columns;\r\n          }\r\n          // if we're using frozen columns, we need to readjust pinning when the new hidden column becomes visible again on the left pinning container\r\n          // we need to readjust frozenColumn index because SlickGrid freezes by index and has no knowledge of the columns themselves\r\n          const frozenColumnIndex = this.sharedService.gridOptions.frozenColumn !== undefined ? this.sharedService.gridOptions.frozenColumn : -1;\r\n          if (frozenColumnIndex >= 0) {\r\n            const { showing: isColumnShown, columnId, allColumns, columns: visibleColumns } = args;\r\n            this.extensionUtility.readjustFrozenColumnIndexWhenNeeded(columnId, frozenColumnIndex, isColumnShown, allColumns, visibleColumns);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onCommand, (e: any, args: MenuCommandItemCallbackArgs) => {\r\n          this.executeGridMenuInternalCustomCommands(e, args);\r\n          if (this._gridMenuOptions && typeof this._gridMenuOptions.onCommand === 'function') {\r\n            this._gridMenuOptions.onCommand(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onMenuClose, (e: any, args: { grid: any; menu: any; allColumns: Column[], visibleColumns: Column[] }) => {\r\n          if (this._gridMenuOptions && typeof this._gridMenuOptions.onMenuClose === 'function') {\r\n            this._gridMenuOptions.onMenuClose(e, args);\r\n          }\r\n\r\n          // we also want to resize the columns if the user decided to hide certain column(s)\r\n          if (this.sharedService.grid && typeof this.sharedService.grid.autosizeColumns === 'function') {\r\n            // make sure that the grid still exist (by looking if the Grid UID is found in the DOM tree)\r\n            const gridUid = this.sharedService.grid.getUID();\r\n            if (this._areVisibleColumnDifferent && gridUid && document.querySelector(`.${gridUid}`) !== null) {\r\n              if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableAutoSizeColumns) {\r\n                this.sharedService.grid.autosizeColumns();\r\n              }\r\n              this._areVisibleColumnDifferent = false;\r\n            }\r\n          }\r\n        });\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Refresh the dataset through the Backend Service */\r\n  refreshBackendDataset(gridOptions?: GridOption) {\r\n    // user can pass new set of grid options which will override current ones\r\n    if (gridOptions) {\r\n      this.sharedService.gridOptions = { ...this.sharedService.gridOptions, ...gridOptions };\r\n    }\r\n    refreshBackendDataset(this.sharedService.gridOptions);\r\n  }\r\n\r\n  showGridMenu(e) {\r\n    this._addon.showGridMenu(e);\r\n  }\r\n\r\n  /** Translate the Grid Menu titles and column picker */\r\n  translateGridMenu() {\r\n    // update the properties by pointers, that is the only way to get Grid Menu Control to see the new values\r\n    // we also need to call the control init so that it takes the new Grid object with latest values\r\n    if (this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.gridMenu) {\r\n      this.sharedService.gridOptions.gridMenu.customItems = [];\r\n      this.emptyGridMenuTitles();\r\n\r\n      // merge original user grid menu items with internal items\r\n      // then sort all Grid Menu Custom Items (sorted by pointer, no need to use the return)\r\n      const originalCustomItems = this._userOriginalGridMenu && Array.isArray(this._userOriginalGridMenu.customItems) ? this._userOriginalGridMenu.customItems : [];\r\n      this.sharedService.gridOptions.gridMenu.customItems = [...originalCustomItems, ...this.addGridMenuCustomCommands(originalCustomItems)];\r\n      this.extensionUtility.translateItems(this.sharedService.gridOptions.gridMenu.customItems, 'titleKey', 'title');\r\n      this.extensionUtility.sortItems(this.sharedService.gridOptions.gridMenu.customItems, 'positionOrder');\r\n\r\n      this.sharedService.gridOptions.gridMenu.columnTitle = this.extensionUtility.getPickerTitleOutputString('columnTitle', 'gridMenu');\r\n      this.sharedService.gridOptions.gridMenu.forceFitTitle = this.extensionUtility.getPickerTitleOutputString('forceFitTitle', 'gridMenu');\r\n      this.sharedService.gridOptions.gridMenu.syncResizeTitle = this.extensionUtility.getPickerTitleOutputString('syncResizeTitle', 'gridMenu');\r\n\r\n      // translate all columns (including non-visible)\r\n      // eventually deprecate the \"headerKey\" and use only the \"nameKey\"\r\n      this.extensionUtility.translateItems(this.sharedService.allColumns, 'headerKey', 'name');\r\n      this.extensionUtility.translateItems(this.sharedService.allColumns, 'nameKey', 'name');\r\n\r\n      // update the Titles of each sections (command, customTitle, ...)\r\n      if (this._addon && this._addon.updateAllTitles) {\r\n        this._addon.updateAllTitles(this.sharedService.gridOptions.gridMenu);\r\n      }\r\n    }\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // ------------------\r\n\r\n  /** Create Grid Menu with Custom Commands if user has enabled Filters and/or uses a Backend Service (OData, GraphQL) */\r\n  private addGridMenuCustomCommands(originalCustomItems: Array<GridMenuItem | 'divider'>) {\r\n    const backendApi = this.sharedService.gridOptions.backendServiceApi || null;\r\n    const gridMenuCustomItems: Array<GridMenuItem | 'divider'> = [];\r\n    const gridOptions = this.sharedService.gridOptions;\r\n    const translationPrefix = getTranslationPrefix(gridOptions);\r\n\r\n    // show grid menu: Clear Frozen Columns\r\n    if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideClearFrozenColumnsCommand) {\r\n      const commandName = 'clear-frozen-columns';\r\n      if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        gridMenuCustomItems.push(\r\n          {\r\n            iconCssClass: this._gridMenuOptions.iconClearFrozenColumnsCommand || 'fa fa-times',\r\n            title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}CLEAR_FROZEN_COLUMNS`) : this._locales && this._locales.TEXT_CLEAR_FROZEN_COLUMNS,\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 49\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.gridOptions && (this.sharedService.gridOptions.enableFiltering && !this.sharedService.hideHeaderRowAfterPageLoad)) {\r\n      // show grid menu: Clear all Filters\r\n      if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideClearAllFiltersCommand) {\r\n        const commandName = 'clear-filter';\r\n        if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          gridMenuCustomItems.push(\r\n            {\r\n              iconCssClass: this._gridMenuOptions.iconClearAllFiltersCommand || 'fa fa-filter text-danger',\r\n              title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}CLEAR_ALL_FILTERS`) : this._locales && this._locales.TEXT_CLEAR_ALL_FILTERS,\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 50\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      // show grid menu: toggle filter row\r\n      if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideToggleFilterCommand) {\r\n        const commandName = 'toggle-filter';\r\n        if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          gridMenuCustomItems.push(\r\n            {\r\n              iconCssClass: this._gridMenuOptions.iconToggleFilterCommand || 'fa fa-random',\r\n              title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}TOGGLE_FILTER_ROW`) : this._locales && this._locales.TEXT_TOGGLE_FILTER_ROW,\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 52\r\n            }\r\n          );\r\n        }\r\n      }\r\n\r\n      // show grid menu: refresh dataset\r\n      if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideRefreshDatasetCommand && backendApi) {\r\n        const commandName = 'refresh-dataset';\r\n        if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          gridMenuCustomItems.push(\r\n            {\r\n              iconCssClass: this._gridMenuOptions.iconRefreshDatasetCommand || 'fa fa-refresh',\r\n              title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}REFRESH_DATASET`) : this._locales && this._locales.TEXT_REFRESH_DATASET,\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 56\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.gridOptions.showPreHeaderPanel) {\r\n      // show grid menu: toggle pre-header row\r\n      if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideTogglePreHeaderCommand) {\r\n        const commandName = 'toggle-preheader';\r\n        if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          gridMenuCustomItems.push(\r\n            {\r\n              iconCssClass: this._gridMenuOptions.iconTogglePreHeaderCommand || 'fa fa-random',\r\n              title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}TOGGLE_PRE_HEADER_ROW`) : this._locales && this._locales.TEXT_TOGGLE_PRE_HEADER_ROW,\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 52\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.sharedService.gridOptions.enableSorting) {\r\n      // show grid menu: Clear all Sorting\r\n      if (this.sharedService.gridOptions && this._gridMenuOptions && !this._gridMenuOptions.hideClearAllSortingCommand) {\r\n        const commandName = 'clear-sorting';\r\n        if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n          gridMenuCustomItems.push(\r\n            {\r\n              iconCssClass: this._gridMenuOptions.iconClearAllSortingCommand || 'fa fa-unsorted text-danger',\r\n              title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}CLEAR_ALL_SORTING`) : this._locales && this._locales.TEXT_CLEAR_ALL_SORTING,\r\n              disabled: false,\r\n              command: commandName,\r\n              positionOrder: 51\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    // show grid menu: Export to file\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableExport && this._gridMenuOptions && !this._gridMenuOptions.hideExportCsvCommand) {\r\n      const commandName = 'export-csv';\r\n      if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        gridMenuCustomItems.push(\r\n          {\r\n            iconCssClass: this._gridMenuOptions.iconExportCsvCommand || 'fa fa-download',\r\n            title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}EXPORT_TO_CSV`) : this._locales && this._locales.TEXT_EXPORT_TO_CSV,\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 53\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // show grid menu: Export to Excel\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableExcelExport && this._gridMenuOptions && !this._gridMenuOptions.hideExportExcelCommand) {\r\n      const commandName = 'export-excel';\r\n      if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        gridMenuCustomItems.push(\r\n          {\r\n            iconCssClass: this._gridMenuOptions.iconExportExcelCommand || 'fa fa-file-excel-o text-success',\r\n            title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}EXPORT_TO_EXCEL`) : this._locales && this._locales.TEXT_EXPORT_TO_EXCEL,\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 54\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // show grid menu: export to text file as tab delimited\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableExport && this._gridMenuOptions && !this._gridMenuOptions.hideExportTextDelimitedCommand) {\r\n      const commandName = 'export-text-delimited';\r\n      if (!originalCustomItems.find((item: GridMenuItem) => item.hasOwnProperty('command') && item.command === commandName)) {\r\n        gridMenuCustomItems.push(\r\n          {\r\n            iconCssClass: this._gridMenuOptions.iconExportTextDelimitedCommand || 'fa fa-download',\r\n            title: this.sharedService.gridOptions.enableTranslate ? this.translate.instant(`${translationPrefix}EXPORT_TO_TAB_DELIMITED`) : this._locales && this._locales.TEXT_EXPORT_TO_TAB_DELIMITED,\r\n            disabled: false,\r\n            command: commandName,\r\n            positionOrder: 55\r\n          }\r\n        );\r\n      }\r\n    }\r\n\r\n    // add the custom \"Commands\" title if there are any commands\r\n    if (this.sharedService && this.sharedService.gridOptions && this._gridMenuOptions && (Array.isArray(gridMenuCustomItems) && gridMenuCustomItems.length > 0 || (Array.isArray(this._gridMenuOptions.customItems) && this._gridMenuOptions.customItems.length > 0))) {\r\n      this._gridMenuOptions.customTitle = this._gridMenuOptions.customTitle || this.extensionUtility.getPickerTitleOutputString('customTitle', 'gridMenu');\r\n    }\r\n\r\n    return gridMenuCustomItems;\r\n  }\r\n\r\n  /**\r\n   * Execute the Grid Menu Custom command callback that was triggered by the onCommand subscribe\r\n   * These are the default internal custom commands\r\n   * @param event\r\n   * @param GridMenuItem args\r\n   */\r\n  private executeGridMenuInternalCustomCommands(e: Event, args: GridMenuItem) {\r\n    if (args && args.command) {\r\n      switch (args.command) {\r\n        case 'clear-frozen-columns':\r\n          const visibleColumns = [...this.sharedService.visibleColumns];\r\n          this.sharedService.grid.setOptions({ frozenColumn: -1, enableMouseWheelScrollHandler: false });\r\n          if (Array.isArray(visibleColumns) && Array.isArray(this.sharedService.allColumns) && visibleColumns.length !== this.sharedService.allColumns.length) {\r\n            this.sharedService.grid.setColumns(visibleColumns);\r\n          }\r\n          break;\r\n        case 'clear-filter':\r\n          this.filterService.clearFilters();\r\n          this.sharedService.dataView.refresh();\r\n          break;\r\n        case 'clear-sorting':\r\n          this.sortService.clearSorting();\r\n          this.sharedService.dataView.refresh();\r\n          break;\r\n        case 'export-csv':\r\n          this.exportService.exportToFile({\r\n            delimiter: DelimiterType.comma,\r\n            filename: 'export',\r\n            format: FileType.csv,\r\n            useUtf8WithBom: true,\r\n          });\r\n          break;\r\n        case 'export-excel':\r\n          this.excelExportService.exportToExcel({\r\n            filename: 'export',\r\n            format: FileType.xlsx,\r\n          });\r\n          break;\r\n        case 'export-text-delimited':\r\n          this.exportService.exportToFile({\r\n            delimiter: DelimiterType.tab,\r\n            filename: 'export',\r\n            format: FileType.txt,\r\n            useUtf8WithBom: true,\r\n          });\r\n          break;\r\n        case 'toggle-filter':\r\n          let showHeaderRow = this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.showHeaderRow || false;\r\n          showHeaderRow = !showHeaderRow; // inverse show header flag\r\n          this.sharedService.grid.setHeaderRowVisibility(showHeaderRow);\r\n\r\n          // when displaying header row, we'll call \"setColumns\" which in terms will recreate the header row filters\r\n          if (showHeaderRow === true) {\r\n            this.sharedService.grid.setColumns(this.sharedService.columnDefinitions);\r\n          }\r\n          break;\r\n        case 'toggle-toppanel':\r\n          const showTopPanel = this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.showTopPanel || false;\r\n          this.sharedService.grid.setTopPanelVisibility(!showTopPanel);\r\n          break;\r\n        case 'toggle-preheader':\r\n          const showPreHeaderPanel = this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.showPreHeaderPanel || false;\r\n          this.sharedService.grid.setPreHeaderPanelVisibility(!showPreHeaderPanel);\r\n          break;\r\n        case 'refresh-dataset':\r\n          this.refreshBackendDataset();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private emptyGridMenuTitles() {\r\n    if (this.sharedService && this.sharedService.gridOptions && this._gridMenuOptions) {\r\n      this._gridMenuOptions.customTitle = '';\r\n      this._gridMenuOptions.columnTitle = '';\r\n      this._gridMenuOptions.forceFitTitle = '';\r\n      this._gridMenuOptions.syncResizeTitle = '';\r\n    }\r\n  }\r\n\r\n  /** @return default Grid Menu options */\r\n  private getDefaultGridMenuOptions(): GridMenu {\r\n    return {\r\n      customTitle: undefined,\r\n      columnTitle: this.extensionUtility.getPickerTitleOutputString('columnTitle', 'gridMenu'),\r\n      forceFitTitle: this.extensionUtility.getPickerTitleOutputString('forceFitTitle', 'gridMenu'),\r\n      syncResizeTitle: this.extensionUtility.getPickerTitleOutputString('syncResizeTitle', 'gridMenu'),\r\n      iconCssClass: 'fa fa-bars',\r\n      menuWidth: 18,\r\n      customItems: [],\r\n      hideClearAllFiltersCommand: false,\r\n      hideRefreshDatasetCommand: false,\r\n      hideToggleFilterCommand: false,\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Extension } from '../models/index';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n@Injectable()\r\nexport class GroupItemMetaProviderExtension implements Extension {\r\n  private _addon: any;\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  dispose() {\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this._addon = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  /** register the group item metadata provider to add expand/collapse group handlers */\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid) {\r\n      this._addon = this.sharedService.groupItemMetadataProvider || {};\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Extension, ExtensionName, HeaderButton, HeaderButtonOnCommandArgs, SlickEventHandler } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class HeaderButtonExtension implements Extension {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _addon: any;\r\n  private _headerButtonOptions: HeaderButton | null;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._headerButtonOptions);\r\n    this._addon = null;\r\n    this._headerButtonOptions = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  // Header Button Plugin\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.headerButton);\r\n      this._headerButtonOptions = this.sharedService.gridOptions.headerButton || {};\r\n      this._addon = new Slick.Plugins.HeaderButtons(this._headerButtonOptions);\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // hook all events\r\n      if (this._headerButtonOptions) {\r\n        if (this._headerButtonOptions.onExtensionRegistered) {\r\n          this._headerButtonOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onCommand, (e: any, args: HeaderButtonOnCommandArgs) => {\r\n          if (this._headerButtonOptions && typeof this._headerButtonOptions.onCommand === 'function') {\r\n            this._headerButtonOptions.onCommand(e, args);\r\n          }\r\n        });\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Constants } from '../constants';\nimport {\n  Column,\n  ColumnSort,\n  CurrentSorter,\n  EmitterType,\n  Extension,\n  ExtensionName,\n  GridOption,\n  HeaderMenu,\n  Locale,\n  MenuCommandItem,\n  MenuCommandItemCallbackArgs,\n  SlickEventHandler,\n} from '../models/index';\nimport { FilterService } from '../services/filter.service';\nimport { SortService } from '../services/sort.service';\nimport { SharedService } from '../services/shared.service';\nimport { arrayRemoveItemByIndex, getTranslationPrefix } from '../services/utilities';\nimport { ExtensionUtility } from './extensionUtility';\n\n// using external non-typed js libraries\ndeclare const Slick: any;\n\n@Injectable()\nexport class HeaderMenuExtension implements Extension {\n  private _addon: any;\n  private _eventHandler: SlickEventHandler;\n  private _locales: Locale;\n\n  constructor(\n    private extensionUtility: ExtensionUtility,\n    private filterService: FilterService,\n    private sharedService: SharedService,\n    private sortService: SortService,\n    @Optional() private translate: TranslateService,\n  ) {\n    this._eventHandler = new Slick.EventHandler();\n  }\n\n  get eventHandler(): SlickEventHandler {\n    return this._eventHandler;\n  }\n\n  dispose() {\n    // unsubscribe all SlickGrid events\n    this._eventHandler.unsubscribeAll();\n\n    if (this._addon && this._addon.destroy) {\n      this._addon.destroy();\n    }\n    this._addon = null;\n  }\n\n  /** Get the instance of the SlickGrid addon (control or plugin). */\n  getAddonInstance() {\n    return this._addon;\n  }\n\n  /**\n   * Create the Header Menu and expose all the available hooks that user can subscribe (onCommand, onBeforeMenuShow, ...)\n   * @param grid\n   * @param dataView\n   * @param columnDefinitions\n   */\n  register(): any {\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\n    }\n\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\n      // get locales provided by user in forRoot or else use default English locales via the Constants\n      this._locales = this.sharedService.gridOptions && this.sharedService.gridOptions.locales || Constants.locales;\n\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.headerMenu);\n      this.sharedService.gridOptions.headerMenu = { ...this.getDefaultHeaderMenuOptions(), ...this.sharedService.gridOptions.headerMenu };\n      if (this.sharedService.gridOptions.enableHeaderMenu) {\n        this.sharedService.gridOptions.headerMenu = this.addHeaderMenuCustomCommands(this.sharedService.gridOptions, this.sharedService.columnDefinitions);\n      }\n\n      this._addon = new Slick.Plugins.HeaderMenu(this.sharedService.gridOptions.headerMenu);\n      this.sharedService.grid.registerPlugin(this._addon);\n\n      // hook all events\n      if (this.sharedService.grid && this.sharedService.gridOptions.headerMenu) {\n        if (this.sharedService.gridOptions.headerMenu.onExtensionRegistered) {\n          this.sharedService.gridOptions.headerMenu.onExtensionRegistered(this._addon);\n        }\n        this._eventHandler.subscribe(this._addon.onCommand, (e: any, args: MenuCommandItemCallbackArgs) => {\n          this.executeHeaderMenuInternalCommands(e, args);\n          if (this.sharedService.gridOptions.headerMenu && typeof this.sharedService.gridOptions.headerMenu.onCommand === 'function') {\n            this.sharedService.gridOptions.headerMenu.onCommand(e, args);\n          }\n        });\n        if (this.sharedService.gridOptions.headerMenu && typeof this.sharedService.gridOptions.headerMenu.onBeforeMenuShow === 'function') {\n          this._eventHandler.subscribe(this._addon.onBeforeMenuShow, (e: Event, args: { grid: any; column: Column; menu: any; }) => {\n            this.sharedService.gridOptions.headerMenu.onBeforeMenuShow(e, args);\n          });\n        }\n        if (this.sharedService.gridOptions.headerMenu && typeof this.sharedService.gridOptions.headerMenu.onAfterMenuShow === 'function') {\n          this._eventHandler.subscribe(this._addon.onAfterMenuShow, (e: Event, args: { grid: any; column: Column; menu: any; }) => {\n            this.sharedService.gridOptions.headerMenu.onAfterMenuShow(e, args);\n          });\n        }\n      }\n      return this._addon;\n    }\n    return null;\n  }\n\n  /**\n   * Create Header Menu with Custom Commands if user has enabled Header Menu\n   * @param options\n   * @param columnDefinitions\n   * @return header menu\n   */\n  private addHeaderMenuCustomCommands(options: GridOption, columnDefinitions: Column[]): HeaderMenu {\n    const headerMenuOptions = options.headerMenu || {};\n    const gridOptions = this.sharedService.gridOptions;\n    const translationPrefix = getTranslationPrefix(gridOptions);\n\n    if (columnDefinitions && Array.isArray(columnDefinitions) && options.enableHeaderMenu) {\n      columnDefinitions.forEach((columnDef: Column) => {\n        if (columnDef && !columnDef.excludeFromHeaderMenu) {\n          if (!columnDef.header || !columnDef.header.menu) {\n            columnDef.header = {\n              menu: {\n                items: []\n              }\n            };\n          }\n\n          const columnHeaderMenuItems: Array<MenuCommandItem | 'divider'> = columnDef && columnDef.header && columnDef.header.menu && columnDef.header.menu.items || [];\n\n          // Freeze Column (pinning)\n          if (headerMenuOptions && !headerMenuOptions.hideFreezeColumnsCommand) {\n            if (columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'freeze-columns').length === 0) {\n              columnHeaderMenuItems.push({\n                iconCssClass: headerMenuOptions.iconFreezeColumns || 'fa fa-thumb-tack',\n                title: options.enableTranslate ? this.translate.instant(`${translationPrefix}FREEZE_COLUMNS`) : this._locales && this._locales.TEXT_FREEZE_COLUMNS,\n                command: 'freeze-columns',\n                positionOrder: 48\n              });\n            }\n\n            // add a divider (separator) between the top freeze columns commands and the rest of the commands\n            if (columnHeaderMenuItems.filter((item: MenuCommandItem) => item.positionOrder === 49).length === 0) {\n              columnHeaderMenuItems.push({ divider: true, command: '', positionOrder: 49 });\n            }\n          }\n\n          // Sorting Commands\n          if (options.enableSorting && columnDef.sortable && headerMenuOptions && !headerMenuOptions.hideSortCommands) {\n            if (columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'sort-asc').length === 0) {\n              columnHeaderMenuItems.push({\n                iconCssClass: headerMenuOptions.iconSortAscCommand || 'fa fa-sort-asc',\n                title: options.enableTranslate ? this.translate.instant(`${translationPrefix}SORT_ASCENDING`) : this._locales && this._locales.TEXT_SORT_ASCENDING,\n                command: 'sort-asc',\n                positionOrder: 50\n              });\n            }\n            if (columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'sort-desc').length === 0) {\n              columnHeaderMenuItems.push({\n                iconCssClass: headerMenuOptions.iconSortDescCommand || 'fa fa-sort-desc',\n                title: options.enableTranslate ? this.translate.instant(`${translationPrefix}SORT_DESCENDING`) : this._locales && this._locales.TEXT_SORT_DESCENDING,\n                command: 'sort-desc',\n                positionOrder: 51\n              });\n            }\n\n            // add a divider (separator) between the top sort commands and the other clear commands\n            if (columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.positionOrder === 52).length === 0) {\n              columnHeaderMenuItems.push({ divider: true, command: '', positionOrder: 52 });\n            }\n\n            if (!headerMenuOptions.hideClearSortCommand && columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'clear-sort').length === 0) {\n              columnHeaderMenuItems.push({\n                iconCssClass: headerMenuOptions.iconClearSortCommand || 'fa fa-unsorted',\n                title: options.enableTranslate ? this.translate.instant(`${translationPrefix}REMOVE_SORT`) : this._locales && this._locales.TEXT_REMOVE_SORT,\n                command: 'clear-sort',\n                positionOrder: 54\n              });\n            }\n          }\n\n          // Filtering Commands\n          if (options.enableFiltering && columnDef.filterable && headerMenuOptions && !headerMenuOptions.hideFilterCommands) {\n            if (!headerMenuOptions.hideClearFilterCommand && columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'clear-filter').length === 0) {\n              columnHeaderMenuItems.push({\n                iconCssClass: headerMenuOptions.iconClearFilterCommand || 'fa fa-filter',\n                title: options.enableTranslate ? this.translate.instant(`${translationPrefix}REMOVE_FILTER`) : this._locales && this._locales.TEXT_REMOVE_FILTER,\n                command: 'clear-filter',\n                positionOrder: 53\n              });\n            }\n          }\n\n          // Hide Column Command\n          if (headerMenuOptions && !headerMenuOptions.hideColumnHideCommand && columnHeaderMenuItems.filter((item: MenuCommandItem) => item.hasOwnProperty('command') && item.command === 'hide').length === 0) {\n            columnHeaderMenuItems.push({\n              iconCssClass: headerMenuOptions.iconColumnHideCommand || 'fa fa-times',\n              title: options.enableTranslate ? this.translate.instant(`${translationPrefix}HIDE_COLUMN`) : this._locales && this._locales.TEXT_HIDE_COLUMN,\n              command: 'hide',\n              positionOrder: 55\n            });\n          }\n\n          this.extensionUtility.translateItems(columnHeaderMenuItems, 'titleKey', 'title');\n          this.extensionUtility.sortItems(columnHeaderMenuItems, 'positionOrder');\n        }\n      });\n    }\n    return headerMenuOptions;\n  }\n\n  /** Hide a column from the grid */\n  hideColumn(column: Column) {\n    if (this.sharedService.grid && this.sharedService.grid.getColumns && this.sharedService.grid.setColumns && this.sharedService.grid.getColumnIndex) {\n      const columnIndex = this.sharedService.grid.getColumnIndex(column.id);\n      const currentColumns = this.sharedService.grid.getColumns() as Column[];\n\n      // if we're using frozen columns, we need to readjust pinning when the new hidden column is on the left pinning container\n      // we need to do this because SlickGrid freezes by index and has no knowledge of the columns themselves\n      const frozenColumnIndex = this.sharedService.gridOptions.frozenColumn || -1;\n      if (frozenColumnIndex >= 0 && frozenColumnIndex >= columnIndex) {\n        this.sharedService.grid.setOptions({ frozenColumn: frozenColumnIndex - 1 });\n      }\n\n      // then proceed with hiding the column in SlickGrid & trigger an event when done\n      const visibleColumns = arrayRemoveItemByIndex(currentColumns, columnIndex);\n      this.sharedService.visibleColumns = visibleColumns;\n      this.sharedService.grid.setColumns(visibleColumns);\n      this.sharedService.onHeaderMenuHideColumns.next(visibleColumns);\n    }\n  }\n\n  /**\n   * Translate the Header Menu titles, we need to loop through all column definition to re-translate them\n   */\n  translateHeaderMenu() {\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.headerMenu) {\n      this.resetHeaderMenuTranslations(this.sharedService.visibleColumns);\n    }\n  }\n\n  // --\n  // private functions\n  // ------------------\n\n  /** @return default Header Menu options */\n  private getDefaultHeaderMenuOptions(): HeaderMenu {\n    return {\n      autoAlignOffset: 12,\n      minWidth: 140,\n      hideColumnHideCommand: false,\n      hideSortCommands: false,\n      title: ''\n    };\n  }\n\n  /**\n   * Reset all the internal Menu options which have text to translate\n   * @param header menu object\n   */\n  private resetHeaderMenuTranslations(columnDefinitions: Column[]) {\n    const gridOptions = this.sharedService.gridOptions;\n    const translationPrefix = getTranslationPrefix(gridOptions);\n\n    columnDefinitions.forEach((columnDef: Column) => {\n      if (columnDef && columnDef.header && columnDef.header && columnDef.header.menu && columnDef.header.menu.items) {\n        if (!columnDef.excludeFromHeaderMenu) {\n          const columnHeaderMenuItems: Array<MenuCommandItem | 'divider'> = columnDef.header.menu.items || [];\n          columnHeaderMenuItems.forEach((item: MenuCommandItem) => {\n            if (item.hasOwnProperty('command')) {\n              switch (item.command) {\n                case 'clear-filter':\n                  item.title = this.translate.instant(`${translationPrefix}REMOVE_FILTER`) || this._locales && this._locales.TEXT_REMOVE_FILTER;\n                  break;\n                case 'clear-sort':\n                  item.title = this.translate.instant(`${translationPrefix}REMOVE_SORT`) || this._locales && this._locales.TEXT_REMOVE_SORT;\n                  break;\n                case 'freeze-columns':\n                  item.title = this.translate.instant(`${translationPrefix}FREEZE_COLUMNS`) || this._locales && this._locales.TEXT_FREEZE_COLUMNS;\n                  break;\n                case 'sort-asc':\n                  item.title = this.translate.instant(`${translationPrefix}SORT_ASCENDING`) || this._locales && this._locales.TEXT_SORT_ASCENDING;\n                  break;\n                case 'sort-desc':\n                  item.title = this.translate.instant(`${translationPrefix}SORT_DESCENDING`) || this._locales && this._locales.TEXT_SORT_DESCENDING;\n                  break;\n                case 'hide':\n                  item.title = this.translate.instant(`${translationPrefix}HIDE_COLUMN`) || this._locales && this._locales.TEXT_HIDE_COLUMN;\n                  break;\n              }\n            }\n\n            // re-translate if there's a \"titleKey\"\n            if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate) {\n              this.extensionUtility.translateItems(columnHeaderMenuItems, 'titleKey', 'title');\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /** Clear the Filter on the current column (if it's actually filtered) */\n  private clearColumnFilter(event: Event, args: MenuCommandItemCallbackArgs) {\n    if (args && args.column) {\n      this.filterService.clearFilterByColumnId(event, args.column.id);\n    }\n  }\n\n  /** Clear the Sort on the current column (if it's actually sorted) */\n  private clearColumnSort(event: Event, args: MenuCommandItemCallbackArgs) {\n    if (args && args.column && this.sharedService) {\n      this.sortService.clearSortByColumnId(event, args.column.id);\n    }\n  }\n\n  /** Execute the Header Menu Commands that was triggered by the onCommand subscribe */\n  private executeHeaderMenuInternalCommands(event: Event, args: MenuCommandItemCallbackArgs) {\n    if (args && args.command) {\n      switch (args.command) {\n        case 'hide':\n          this.hideColumn(args.column);\n          if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableAutoSizeColumns) {\n            this.sharedService.grid.autosizeColumns();\n          }\n          break;\n        case 'clear-filter':\n          this.clearColumnFilter(event, args);\n          break;\n        case 'clear-sort':\n          this.clearColumnSort(event, args);\n          break;\n        case 'freeze-columns':\n          const visibleColumns = [...this.sharedService.visibleColumns];\n          const columnPosition = visibleColumns.findIndex((col) => col.id === args.column.id);\n          this.sharedService.grid.setOptions({ frozenColumn: columnPosition, enableMouseWheelScrollHandler: true } as GridOption);\n          this.sharedService.frozenVisibleColumnId = args.column.id;\n\n          // to freeze columns, we need to take only the visible columns and we also need to use setColumns() when some of them are hidden\n          // to make sure that we only use the visible columns, not doing this would show back some of the hidden columns\n          if (Array.isArray(visibleColumns) && Array.isArray(this.sharedService.allColumns) && visibleColumns.length !== this.sharedService.allColumns.length) {\n            this.sharedService.grid.setColumns(visibleColumns);\n          }\n          break;\n        case 'sort-asc':\n        case 'sort-desc':\n          const isSortingAsc = (args.command === 'sort-asc');\n          this.sortColumn(event, args, isSortingAsc);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /** Sort the current column */\n  private sortColumn(event: Event, args: MenuCommandItemCallbackArgs, isSortingAsc = true) {\n    if (args && args.column) {\n      // get previously sorted columns\n      const columnDef = args.column;\n      const sortedColsWithoutCurrent: ColumnSort[] = this.sortService.getCurrentColumnSorts(args.column.id + '');\n\n      let emitterType: EmitterType;\n\n      // add to the column array, the column sorted by the header menu\n      sortedColsWithoutCurrent.push({ columnId: columnDef.id, sortCol: columnDef, sortAsc: isSortingAsc });\n      if (this.sharedService.gridOptions.backendServiceApi) {\n        this.sortService.onBackendSortChanged(event, { multiColumnSort: true, sortCols: sortedColsWithoutCurrent, grid: this.sharedService.grid });\n        emitterType = EmitterType.remote;\n      } else if (this.sharedService.dataView) {\n        this.sortService.onLocalSortChanged(this.sharedService.grid, sortedColsWithoutCurrent);\n        emitterType = EmitterType.local;\n      } else {\n        // when using customDataView, we will simply send it as a onSort event with notify\n        const isMultiSort = this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.multiColumnSort || false;\n        const sortOutput = isMultiSort ? sortedColsWithoutCurrent : sortedColsWithoutCurrent[0];\n        args.grid.onSort.notify(sortOutput);\n      }\n\n      // update the this.sharedService.gridObj sortColumns array which will at the same add the visual sort icon(s) on the UI\n      const newSortColumns: ColumnSort[] = sortedColsWithoutCurrent.map((col) => {\n        return {\n          columnId: col && col.sortCol && col.sortCol.id,\n          sortAsc: col && col.sortAsc,\n          sortCol: col && col.sortCol,\n        };\n      });\n\n      // add sort icon in UI\n      this.sharedService.grid.setSortColumns(newSortColumns);\n\n      // if we have an emitter type set, we will emit a sort changed\n      // for the Grid State Service to see the change.\n      // We also need to pass current sorters changed to the emitSortChanged method\n      if (emitterType) {\n        const currentLocalSorters: CurrentSorter[] = [];\n        newSortColumns.forEach((sortCol) => {\n          currentLocalSorters.push({\n            columnId: sortCol.columnId + '',\n            direction: sortCol.sortAsc ? 'ASC' : 'DESC'\n          });\n        });\n        this.sortService.emitSortChanged(emitterType, currentLocalSorters);\n      }\n    }\n  }\n}\n","import { ApplicationRef, ComponentRef, Injectable, Type, ViewContainerRef } from '@angular/core';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport { Column, Extension, ExtensionName, GridOption, RowDetailView, SlickEventHandler } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { AngularUtilService } from '../services/angularUtil.service';\r\nimport { FilterService } from '../services/filter.service';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { addToArrayWhenNotExists, castToPromise, unsubscribeAllObservables } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\nconst ROW_DETAIL_CONTAINER_PREFIX = 'container_';\r\nconst PRELOAD_CONTAINER_PREFIX = 'container_loading';\r\n\r\nexport interface CreatedView {\r\n  id: string | number;\r\n  dataContext: any;\r\n  componentRef?: ComponentRef<any>;\r\n}\r\n\r\n@Injectable()\r\nexport class RowDetailViewExtension implements Extension {\r\n  rowDetailContainer: ViewContainerRef;\r\n  private _addon: any;\r\n  private _addonOptions: RowDetailView;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _preloadComponent: Type<object>;\r\n  private _views: CreatedView[] = [];\r\n  private _viewComponent: Type<object>;\r\n  private _subscriptions: Subscription[] = [];\r\n  private _userProcessFn: (item: any) => Promise<any> | Observable<any> | Subject<any>;\r\n\r\n  constructor(\r\n    private angularUtilService: AngularUtilService,\r\n    private appRef: ApplicationRef,\r\n    private extensionUtility: ExtensionUtility,\r\n    private filterService: FilterService,\r\n    private sharedService: SharedService,\r\n  ) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  private get datasetIdPropName(): string {\r\n    return this.gridOptions.datasetIdPropertyName || 'id';\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  get gridOptions(): GridOption {\r\n    return this.sharedService && this.sharedService.gridOptions || {};\r\n  }\r\n\r\n  get rowDetailViewOptions(): RowDetailView {\r\n    return this.gridOptions.rowDetailView;\r\n  }\r\n\r\n  /** Dispose of the RowDetailView Extension */\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this.extensionUtility.nullifyFunctionNameStartingWithOn(this._addonOptions);\r\n    this._addonOptions = null;\r\n\r\n    // also unsubscribe all RxJS subscriptions\r\n    this._subscriptions = unsubscribeAllObservables(this._subscriptions);\r\n    this.disposeAllViewComponents();\r\n  }\r\n\r\n  /** Dispose of all the opened Row Detail Panels Angular View Components */\r\n  disposeAllViewComponents() {\r\n    this._views.forEach((compRef) => this.disposeViewComponent(compRef));\r\n    this._views = [];\r\n  }\r\n\r\n  /**\r\n   * Create the plugin before the Grid creation, else it will behave oddly.\r\n   * Mostly because the column definitions might change after the grid creation\r\n   */\r\n  create(columnDefinitions: Column[], gridOptions: GridOption) {\r\n    if (columnDefinitions && gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.rowDetailView);\r\n\r\n      if (!gridOptions.rowDetailView) {\r\n        throw new Error('The Row Detail View requires options to be passed via the \"rowDetailView\" property of the Grid Options');\r\n      }\r\n\r\n      if (gridOptions && gridOptions.rowDetailView) {\r\n        if (!this._addon) {\r\n          if (typeof gridOptions.rowDetailView.process === 'function') {\r\n            // we need to keep the user \"process\" method and replace it with our own execution method\r\n            // we do this because when we get the item detail, we need to call \"onAsyncResponse.notify\" for the plugin to work\r\n            this._userProcessFn = gridOptions.rowDetailView.process;                // keep user's process method\r\n            gridOptions.rowDetailView.process = (item) => this.onProcessing(item);  // replace process method & run our internal one\r\n          } else {\r\n            throw new Error('You need to provide a \"process\" function for the Row Detail Extension to work properly');\r\n          }\r\n\r\n          // load the Preload & RowDetail Templates (could be straight HTML or Angular View/ViewModel)\r\n          // when those are Angular View/ViewModel, we need to create View Component & provide the html containers to the Plugin (preTemplate/postTemplate methods)\r\n          if (!gridOptions.rowDetailView.preTemplate) {\r\n            this._preloadComponent = gridOptions && gridOptions.rowDetailView && gridOptions.rowDetailView.preloadComponent;\r\n            gridOptions.rowDetailView.preTemplate = () => DOMPurify.sanitize(`<div class=\"${PRELOAD_CONTAINER_PREFIX}\"></div>`);\r\n          }\r\n          if (!gridOptions.rowDetailView.postTemplate) {\r\n            this._viewComponent = gridOptions && gridOptions.rowDetailView && gridOptions.rowDetailView.viewComponent;\r\n            gridOptions.rowDetailView.postTemplate = (itemDetail: any) => DOMPurify.sanitize(`<div class=\"${ROW_DETAIL_CONTAINER_PREFIX}${itemDetail[this.datasetIdPropName]}\"></div>`);\r\n          }\r\n\r\n          // finally register the Row Detail View Plugin\r\n          this._addonOptions = gridOptions.rowDetailView;\r\n          this._addon = new Slick.Plugins.RowDetailView(this._addonOptions);\r\n        }\r\n        const iconColumn: Column = this._addon.getColumnDefinition();\r\n        if (typeof iconColumn === 'object') {\r\n          iconColumn.excludeFromExport = true;\r\n          iconColumn.excludeFromColumnPicker = true;\r\n          iconColumn.excludeFromGridMenu = true;\r\n          iconColumn.excludeFromQuery = true;\r\n          iconColumn.excludeFromHeaderMenu = true;\r\n\r\n          // column index position in the grid\r\n          const columnPosition = gridOptions && gridOptions.rowDetailView && gridOptions.rowDetailView.columnIndexPosition || 0;\r\n          if (columnPosition > 0) {\r\n            columnDefinitions.splice(columnPosition, 0, iconColumn);\r\n          } else {\r\n            columnDefinitions.unshift(iconColumn);\r\n          }\r\n        }\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(rowSelectionPlugin?: any) {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // the plugin has to be created BEFORE the grid (else it behaves oddly), but we can only watch grid events AFTER the grid is created\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // this also requires the Row Selection Model to be registered as well\r\n      if (!rowSelectionPlugin || !this.sharedService.grid.getSelectionModel()) {\r\n        this.extensionUtility.loadExtensionDynamically(ExtensionName.rowSelection);\r\n        rowSelectionPlugin = new Slick.RowSelectionModel(this.sharedService.gridOptions.rowSelectionOptions || { selectActiveRow: true });\r\n        this.sharedService.grid.setSelectionModel(rowSelectionPlugin);\r\n      }\r\n\r\n      // hook all events\r\n      if (this.sharedService.grid && this.rowDetailViewOptions) {\r\n        if (this.rowDetailViewOptions.onExtensionRegistered) {\r\n          this.rowDetailViewOptions.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onAsyncResponse, (e: any, args: { item: any; detailView: any }) => {\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onAsyncResponse === 'function') {\r\n            this.rowDetailViewOptions.onAsyncResponse(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onAsyncEndUpdate, (e: any, args: { grid: any; item: any; }) => {\r\n          // triggers after backend called \"onAsyncResponse.notify()\"\r\n          this.renderViewModel(args && args.item);\r\n\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onAsyncEndUpdate === 'function') {\r\n            this.rowDetailViewOptions.onAsyncEndUpdate(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onAfterRowDetailToggle, (e: any, args: { grid: any; item: any; expandedRows: number[]; }) => {\r\n          // display preload template & re-render all the other Detail Views after toggling\r\n          // the preload View will eventually go away once the data gets loaded after the \"onAsyncEndUpdate\" event\r\n          this.renderPreloadView();\r\n          this.renderAllViewComponents();\r\n\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onAfterRowDetailToggle === 'function') {\r\n            this.rowDetailViewOptions.onAfterRowDetailToggle(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onBeforeRowDetailToggle, (e: any, args: { grid: any; item: any; }) => {\r\n          // before toggling row detail, we need to create View Component if it doesn't exist\r\n          this.onBeforeRowDetailToggle(e, args);\r\n\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onBeforeRowDetailToggle === 'function') {\r\n            this.rowDetailViewOptions.onBeforeRowDetailToggle(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onRowBackToViewportRange, (e: any, args: { grid: any; item: any; rowId: number; rowIndex: number; expandedRows: any[]; rowIdsOutOfViewport: number[]; }) => {\r\n          // when row is back to viewport range, we will re-render the View Component(s)\r\n          this.onRowBackToViewportRange(e, args);\r\n\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onRowBackToViewportRange === 'function') {\r\n            this.rowDetailViewOptions.onRowBackToViewportRange(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onRowOutOfViewportRange, (e: any, args: { grid: any; item: any; rowId: number; rowIndex: number; expandedRows: any[]; rowIdsOutOfViewport: number[]; }) => {\r\n          if (this.rowDetailViewOptions && typeof this.rowDetailViewOptions.onRowOutOfViewportRange === 'function') {\r\n            this.rowDetailViewOptions.onRowOutOfViewportRange(e, args);\r\n          }\r\n        });\r\n\r\n        // --\r\n        // hook some events needed by the Plugin itself\r\n\r\n        this._eventHandler.subscribe(this.sharedService.grid.onColumnsReordered, () => this.redrawAllViewComponents());\r\n\r\n        // on sort, all row detail are collapsed so we can dispose of all the Views as well\r\n        this._eventHandler.subscribe(this.sharedService.grid.onSort, () => this.disposeAllViewComponents());\r\n\r\n        // on filter changed, we need to re-render all Views\r\n        this._subscriptions.push(\r\n          this.filterService.onFilterChanged.subscribe(() => this.redrawAllViewComponents())\r\n        );\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Redraw (re-render) all the expanded row detail View Components */\r\n  redrawAllViewComponents() {\r\n    this._views.forEach((compRef) => {\r\n      this.redrawViewComponent(compRef);\r\n    });\r\n  }\r\n\r\n  /** Render all the expanded row detail View Components */\r\n  renderAllViewComponents() {\r\n    this._views.forEach((view) => {\r\n      if (view && view.dataContext) {\r\n        this.renderViewModel(view.dataContext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Redraw the necessary View Component */\r\n  redrawViewComponent(createdView: CreatedView) {\r\n    const containerElements = document.getElementsByClassName(`${ROW_DETAIL_CONTAINER_PREFIX}${createdView.id}`);\r\n    if (containerElements && containerElements.length >= 0) {\r\n      this.renderViewModel(createdView.dataContext);\r\n    }\r\n  }\r\n\r\n  /** Render (or re-render) the View Component (Row Detail) */\r\n  renderPreloadView() {\r\n    const containerElements = document.getElementsByClassName(`${PRELOAD_CONTAINER_PREFIX}`);\r\n    if (containerElements && containerElements.length >= 0) {\r\n      this.angularUtilService.createAngularComponentAppendToDom(this._preloadComponent, containerElements[containerElements.length - 1], true);\r\n    }\r\n  }\r\n\r\n  /** Render (or re-render) the View Component (Row Detail) */\r\n  renderViewModel(item: any): CreatedView | null {\r\n    const containerElements = document.getElementsByClassName(`${ROW_DETAIL_CONTAINER_PREFIX}${item[this.datasetIdPropName]}`);\r\n    if (containerElements && containerElements.length > 0) {\r\n      const componentOutput = this.angularUtilService.createAngularComponentAppendToDom(this._viewComponent, containerElements[containerElements.length - 1], true);\r\n      if (componentOutput && componentOutput.componentRef && componentOutput.componentRef.instance) {\r\n        // pass a few properties to the Row Detail template component\r\n        Object.assign(componentOutput.componentRef.instance, {\r\n          model: item,\r\n          addon: this._addon,\r\n          grid: this.sharedService.grid,\r\n          dataView: this.sharedService.dataView,\r\n          parent: this.rowDetailViewOptions && this.rowDetailViewOptions.parent,\r\n        });\r\n\r\n        const viewObj = this._views.find(obj => obj.id === item[this.datasetIdPropName]);\r\n        if (viewObj) {\r\n          viewObj.componentRef = componentOutput.componentRef;\r\n        }\r\n        return viewObj;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // ------------------\r\n\r\n  private disposeViewComponent(expandedView: CreatedView) {\r\n    const compRef = expandedView && expandedView.componentRef;\r\n    if (compRef) {\r\n      this.appRef.detachView(compRef.hostView);\r\n      compRef.destroy();\r\n      return expandedView;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * notify the onAsyncResponse with the \"args.item\" (required property)\r\n   * the plugin will then use item to populate the row detail panel with the \"postTemplate\"\r\n   * @param item\r\n   */\r\n  private notifyTemplate(item: any) {\r\n    if (this._addon) {\r\n      this._addon.onAsyncResponse.notify({ item }, undefined, this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On Processing, we will notify the plugin with the new item detail once backend server call completes\r\n   * @param item\r\n   */\r\n  private async onProcessing(item: any) {\r\n    if (item && typeof this._userProcessFn === 'function') {\r\n      let awaitedItemDetail: any;\r\n      const userProcessFn = this._userProcessFn(item);\r\n\r\n      // wait for the \"userProcessFn\", once resolved we will save it into the \"collection\"\r\n      const response: any | any[] = await userProcessFn;\r\n\r\n      if (response.hasOwnProperty(this.datasetIdPropName)) {\r\n        awaitedItemDetail = response; // from Promise\r\n      } else if (response && response instanceof Observable || response instanceof Promise) {\r\n        awaitedItemDetail = await castToPromise(response); // from Angular-http-client\r\n      }\r\n\r\n      if (!awaitedItemDetail || !awaitedItemDetail.hasOwnProperty(this.datasetIdPropName)) {\r\n        throw new Error(`[Angular-Slickgrid] could not process the Row Detail, you must make sure that your \"process\" callback\r\n          (a Promise or an HttpClient call returning an Observable) returns an item object that has an \"${this.datasetIdPropName}\" property`);\r\n      }\r\n\r\n      // notify the plugin with the new item details\r\n      this.notifyTemplate(awaitedItemDetail || {});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Just before the row get expanded or collapsed we will do the following\r\n   * First determine if the row is expanding or collapsing,\r\n   * if it's expanding we will add it to our View Components reference array if we don't already have it\r\n   * or if it's collapsing we will remove it from our View Components reference array\r\n   */\r\n  private onBeforeRowDetailToggle(e: Event, args: { grid: any; item: any; }) {\r\n    // expanding\r\n    if (args && args.item && args.item.__collapsed) {\r\n      // expanding row detail\r\n      const viewInfo: CreatedView = {\r\n        id: args.item[this.datasetIdPropName],\r\n        dataContext: args.item\r\n      };\r\n      const idPropName = this.gridOptions.datasetIdPropertyName || 'id';\r\n      addToArrayWhenNotExists(this._views, viewInfo, idPropName);\r\n    } else {\r\n      // collapsing, so dispose of the View/Component\r\n      const foundViewIndex = this._views.findIndex((view: CreatedView) => view.id === args.item[this.datasetIdPropName]);\r\n      if (foundViewIndex >= 0 && this._views.hasOwnProperty(foundViewIndex)) {\r\n        const compRef = this._views[foundViewIndex].componentRef;\r\n        this.appRef.detachView(compRef.hostView);\r\n        compRef.destroy();\r\n        this._views.splice(foundViewIndex, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** When Row comes back to Viewport Range, we need to redraw the View */\r\n  private onRowBackToViewportRange(e: Event, args: { grid: any; item: any; rowId: number; rowIndex: number; expandedRows: any[]; rowIdsOutOfViewport: number[]; }) {\r\n    if (args && args.item) {\r\n      this._views.forEach((view) => {\r\n        if (view.id === args.item[this.datasetIdPropName]) {\r\n          this.redrawViewComponent(view);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CellArgs, Column, Extension, ExtensionName, GridOption, SlickEventHandler } from '../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class RowMoveManagerExtension implements Extension {\r\n  private _addon: any;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _rowSelectionPlugin: any;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n      this._addon = null;\r\n    }\r\n    if (this._rowSelectionPlugin && this._rowSelectionPlugin.destroy) {\r\n      this._rowSelectionPlugin.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the plugin before the Grid creation to avoid having odd behaviors.\r\n   * Mostly because the column definitions might change after the grid creation, so we want to make sure to add it before then\r\n   */\r\n  create(columnDefinitions: Column[], gridOptions: GridOption) {\r\n    if (Array.isArray(columnDefinitions) && gridOptions) {\r\n      this._addon = this.loadAddonWhenNotExists(columnDefinitions, gridOptions);\r\n      const newRowMoveColumn: Column = this._addon.getColumnDefinition();\r\n      const rowMoveColDef = Array.isArray(columnDefinitions) && columnDefinitions.find((col: Column) => col && col.behavior === 'selectAndMove');\r\n      const finalRowMoveColumn = rowMoveColDef ? rowMoveColDef : newRowMoveColumn;\r\n\r\n      // set some exclusion properties since we don't want this column to be part of the export neither the list of column in the pickers\r\n      if (typeof finalRowMoveColumn === 'object') {\r\n        finalRowMoveColumn.excludeFromExport = true;\r\n        finalRowMoveColumn.excludeFromColumnPicker = true;\r\n        finalRowMoveColumn.excludeFromGridMenu = true;\r\n        finalRowMoveColumn.excludeFromQuery = true;\r\n        finalRowMoveColumn.excludeFromHeaderMenu = true;\r\n      }\r\n\r\n      // only add the new column if it doesn't already exist\r\n      if (!rowMoveColDef) {\r\n        // column index position in the grid\r\n        const columnPosition = gridOptions && gridOptions.rowMoveManager && gridOptions.rowMoveManager.columnIndexPosition || 0;\r\n        if (columnPosition > 0) {\r\n          columnDefinitions.splice(columnPosition, 0, finalRowMoveColumn);\r\n        } else {\r\n          columnDefinitions.unshift(finalRowMoveColumn);\r\n        }\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  loadAddonWhenNotExists(columnDefinitions: Column[], gridOptions: GridOption): any {\r\n    if (Array.isArray(columnDefinitions) && gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.rowMoveManager);\r\n      if (!this._addon) {\r\n        this._addon = new Slick.RowMoveManager(gridOptions && gridOptions.rowMoveManager || { cancelEditOnDrag: true });\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(rowSelectionPlugin?: any): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.rowMoveManager);\r\n\r\n      // this also requires the Row Selection Model to be registered as well\r\n      if (!rowSelectionPlugin || !this.sharedService.grid.getSelectionModel()) {\r\n        this.extensionUtility.loadExtensionDynamically(ExtensionName.rowSelection);\r\n        rowSelectionPlugin = new Slick.RowSelectionModel(this.sharedService.gridOptions.rowSelectionOptions || {});\r\n        this.sharedService.grid.setSelectionModel(rowSelectionPlugin);\r\n      }\r\n      this._rowSelectionPlugin = rowSelectionPlugin;\r\n      this.sharedService.grid.registerPlugin(this._addon);\r\n\r\n      // hook all events\r\n      if (this.sharedService.grid && this.sharedService.gridOptions.rowMoveManager) {\r\n        if (this.sharedService.gridOptions.rowMoveManager.onExtensionRegistered) {\r\n          this.sharedService.gridOptions.rowMoveManager.onExtensionRegistered(this._addon);\r\n        }\r\n        this._eventHandler.subscribe(this._addon.onBeforeMoveRows, (e: any, args: CellArgs) => {\r\n          if (this.sharedService.gridOptions.rowMoveManager && typeof this.sharedService.gridOptions.rowMoveManager.onBeforeMoveRows === 'function') {\r\n            this.sharedService.gridOptions.rowMoveManager.onBeforeMoveRows(e, args);\r\n          }\r\n        });\r\n        this._eventHandler.subscribe(this._addon.onMoveRows, (e: any, args: CellArgs) => {\r\n          if (this.sharedService.gridOptions.rowMoveManager && typeof this.sharedService.gridOptions.rowMoveManager.onMoveRows === 'function') {\r\n            this.sharedService.gridOptions.rowMoveManager.onMoveRows(e, args);\r\n          }\r\n        });\r\n      }\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Extension, ExtensionName } from './../models/index';\r\nimport { ExtensionUtility } from './extensionUtility';\r\nimport { SharedService } from '../services/shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class RowSelectionExtension implements Extension {\r\n  private _addon: any;\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private sharedService: SharedService) { }\r\n\r\n  dispose() {\r\n    if (this._addon && this._addon.destroy) {\r\n      this._addon.destroy();\r\n    }\r\n    this._addon = null;\r\n  }\r\n\r\n  /** Get the instance of the SlickGrid addon (control or plugin). */\r\n  getAddonInstance() {\r\n    return this._addon;\r\n  }\r\n\r\n  register(): any {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.gridOptions) {\r\n      // dynamically import the SlickGrid plugin (addon) with RequireJS\r\n      this.extensionUtility.loadExtensionDynamically(ExtensionName.rowSelection);\r\n\r\n      this._addon = new Slick.RowSelectionModel(this.sharedService.gridOptions.rowSelectionOptions || {});\r\n      this.sharedService.grid.setSelectionModel(this._addon);\r\n      return this._addon;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","// import common 3rd party SlickGrid plugins/libs\r\nimport 'slickgrid/plugins/slick.cellrangedecorator';\r\nimport 'slickgrid/plugins/slick.cellrangeselector';\r\nimport 'slickgrid/plugins/slick.cellselectionmodel';\r\n\r\nimport { Injectable, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  Column,\r\n  ExtensionList,\r\n  ExtensionModel,\r\n  ExtensionName,\r\n  GridOption,\r\n} from '../models/index';\r\nimport {\r\n  AutoTooltipExtension,\r\n  CellExternalCopyManagerExtension,\r\n  CellMenuExtension,\r\n  CheckboxSelectorExtension,\r\n  ColumnPickerExtension,\r\n  ContextMenuExtension,\r\n  DraggableGroupingExtension,\r\n  GridMenuExtension,\r\n  GroupItemMetaProviderExtension,\r\n  HeaderButtonExtension,\r\n  HeaderMenuExtension,\r\n  RowDetailViewExtension,\r\n  RowMoveManagerExtension,\r\n  RowSelectionExtension,\r\n} from '../extensions/index';\r\nimport { SharedService } from './shared.service';\r\n\r\n@Injectable()\r\nexport class ExtensionService {\r\n  private _extensionCreatedList: ExtensionList = {} as ExtensionList;\r\n  private _extensionList: ExtensionList = {} as ExtensionList;\r\n\r\n  get extensionList(): ExtensionList {\r\n    return this._extensionList;\r\n  }\r\n\r\n  constructor(\r\n    private autoTooltipExtension: AutoTooltipExtension,\r\n    private cellExternalCopyExtension: CellExternalCopyManagerExtension,\r\n    private cellMenuExtension: CellMenuExtension,\r\n    private checkboxSelectorExtension: CheckboxSelectorExtension,\r\n    private columnPickerExtension: ColumnPickerExtension,\r\n    private contextMenuExtension: ContextMenuExtension,\r\n    private draggableGroupingExtension: DraggableGroupingExtension,\r\n    private gridMenuExtension: GridMenuExtension,\r\n    private groupItemMetaExtension: GroupItemMetaProviderExtension,\r\n    private headerButtonExtension: HeaderButtonExtension,\r\n    private headerMenuExtension: HeaderMenuExtension,\r\n    private rowDetailViewExtension: RowDetailViewExtension,\r\n    private rowMoveManagerExtension: RowMoveManagerExtension,\r\n    private rowSelectionExtension: RowSelectionExtension,\r\n    private sharedService: SharedService,\r\n    @Optional() private translate: TranslateService,\r\n  ) { }\r\n\r\n  /** Dispose of all the controls & plugins */\r\n  dispose() {\r\n    this.sharedService.grid = null;\r\n    this.sharedService.visibleColumns = [];\r\n\r\n    // dispose of each control/plugin & reset the list\r\n    for (const extensionName of Object.keys(this._extensionList)) {\r\n      if (this._extensionList.hasOwnProperty(extensionName)) {\r\n        const extension = this._extensionList[extensionName] as ExtensionModel;\r\n        if (extension && extension.class && extension.class.dispose) {\r\n          extension.class.dispose();\r\n        }\r\n      }\r\n    }\r\n    for (const key of Object.keys(this._extensionList)) {\r\n      delete this._extensionList[key];\r\n    }\r\n  }\r\n\r\n  /** Get all columns (includes visible and non-visible) */\r\n  getAllColumns(): Column[] {\r\n    return this.sharedService.allColumns || [];\r\n  }\r\n\r\n  /** Get only visible columns */\r\n  getVisibleColumns(): Column[] {\r\n    return this.sharedService.visibleColumns || [];\r\n  }\r\n\r\n  /**\r\n   * Get an Extension by it's name\r\n   *  @param name\r\n   */\r\n  getExtensionByName(name: ExtensionName): ExtensionModel | undefined {\r\n    if (this._extensionList && this._extensionList[name]) {\r\n      return this._extensionList[name];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Get the instance of the SlickGrid addon (control or plugin).\r\n   * This is the raw addon coming directly from SlickGrid itself, not to confuse with Angular-Slickgrid extension\r\n   *  @param name\r\n   */\r\n  getSlickgridAddonInstance(name: ExtensionName): any {\r\n    const extension = this.getExtensionByName(name);\r\n    if (extension && extension.class && (extension.instance || extension.addon)) {\r\n      if (extension.class && extension.class.getAddonInstance) {\r\n        return extension.class.getAddonInstance();\r\n      }\r\n      return extension.instance;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Auto-resize all the column in the grid to fit the grid width */\r\n  autoResizeColumns() {\r\n    this.sharedService.grid.autosizeColumns();\r\n  }\r\n\r\n  /** Bind/Create different Controls or Plugins after the Grid is created */\r\n  bindDifferentExtensions() {\r\n    if (this.sharedService && this.sharedService.gridOptions) {\r\n      // make sure all columns are translated before creating ColumnPicker/GridMenu Controls\r\n      // this is to avoid having hidden columns not being translated on first load\r\n      if (this.sharedService.gridOptions.enableTranslate) {\r\n        // eventually deprecate the \"headerKey\" and use only the \"nameKey\"\r\n        this.translateItems(this.sharedService.allColumns, 'headerKey', 'name');\r\n        this.translateItems(this.sharedService.allColumns, 'nameKey', 'name');\r\n      }\r\n\r\n      // Auto Tooltip Plugin\r\n      if (this.sharedService.gridOptions.enableAutoTooltip) {\r\n        if (this.autoTooltipExtension && this.autoTooltipExtension.register) {\r\n          const instance = this.autoTooltipExtension.register();\r\n          this._extensionList[ExtensionName.autoTooltip] = { name: ExtensionName.autoTooltip, class: this.autoTooltipExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Cell External Copy Manager Plugin (Excel Like)\r\n      if (this.sharedService.gridOptions.enableExcelCopyBuffer) {\r\n        if (this.cellExternalCopyExtension && this.cellExternalCopyExtension.register) {\r\n          const instance = this.cellExternalCopyExtension.register();\r\n          this._extensionList[ExtensionName.cellExternalCopyManager] = { name: ExtensionName.cellExternalCopyManager, class: this.cellExternalCopyExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // (Action) Cell Menu Plugin\r\n      if (this.sharedService.gridOptions.enableCellMenu) {\r\n        if (this.cellMenuExtension && this.cellMenuExtension.register) {\r\n          const instance = this.cellMenuExtension.register();\r\n          this._extensionList[ExtensionName.cellMenu] = { name: ExtensionName.cellMenu, class: this.cellMenuExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Row Selection Plugin\r\n      // this extension should be registered BEFORE the CheckboxSelector, RowDetail or RowMoveManager since it can be use by these 2 plugins\r\n      if (!this.getExtensionByName(ExtensionName.rowSelection) && (this.sharedService.gridOptions.enableRowSelection || this.sharedService.gridOptions.enableCheckboxSelector || this.sharedService.gridOptions.enableRowDetailView || this.sharedService.gridOptions.enableRowMoveManager)) {\r\n        if (this.rowSelectionExtension && this.rowSelectionExtension.register) {\r\n          const instance = this.rowSelectionExtension.register();\r\n          this._extensionList[ExtensionName.rowSelection] = { name: ExtensionName.rowSelection, class: this.rowSelectionExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Checkbox Selector Plugin\r\n      if (this.sharedService.gridOptions.enableCheckboxSelector) {\r\n        if (this.checkboxSelectorExtension && this.checkboxSelectorExtension.register) {\r\n          const rowSelectionExtension = this.getExtensionByName(ExtensionName.rowSelection);\r\n          this.checkboxSelectorExtension.register(rowSelectionExtension);\r\n          const createdExtension = this.getCreatedExtensionByName(ExtensionName.checkboxSelector); // get the instance from when it was really created earlier\r\n          const instance = createdExtension && createdExtension.instance;\r\n          this._extensionList[ExtensionName.checkboxSelector] = { name: ExtensionName.checkboxSelector, class: this.checkboxSelectorExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Column Picker Control\r\n      if (this.sharedService.gridOptions.enableColumnPicker) {\r\n        if (this.columnPickerExtension && this.columnPickerExtension.register) {\r\n          const instance = this.columnPickerExtension.register();\r\n          this._extensionList[ExtensionName.columnPicker] = { name: ExtensionName.columnPicker, class: this.columnPickerExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Context Menu Control\r\n      if (this.sharedService.gridOptions.enableContextMenu) {\r\n        if (this.contextMenuExtension && this.contextMenuExtension.register) {\r\n          const instance = this.contextMenuExtension.register();\r\n          this._extensionList[ExtensionName.contextMenu] = { name: ExtensionName.contextMenu, class: this.contextMenuExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Draggable Grouping Plugin\r\n      if (this.sharedService.gridOptions.enableDraggableGrouping) {\r\n        if (this.draggableGroupingExtension && this.draggableGroupingExtension.register) {\r\n          const instance = this.draggableGroupingExtension.register();\r\n          this._extensionList[ExtensionName.draggableGrouping] = { name: ExtensionName.draggableGrouping, class: this.draggableGroupingExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Grid Menu Control\r\n      if (this.sharedService.gridOptions.enableGridMenu) {\r\n        if (this.gridMenuExtension && this.gridMenuExtension.register) {\r\n          const instance = this.gridMenuExtension.register();\r\n          this._extensionList[ExtensionName.gridMenu] = { name: ExtensionName.gridMenu, class: this.gridMenuExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Grouping Plugin\r\n      // register the group item metadata provider to add expand/collapse group handlers\r\n      if (this.sharedService.gridOptions.enableDraggableGrouping || this.sharedService.gridOptions.enableGrouping) {\r\n        if (this.groupItemMetaExtension && this.groupItemMetaExtension.register) {\r\n          const instance = this.groupItemMetaExtension.register();\r\n          this._extensionList[ExtensionName.groupItemMetaProvider] = { name: ExtensionName.groupItemMetaProvider, class: this.groupItemMetaExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Header Button Plugin\r\n      if (this.sharedService.gridOptions.enableHeaderButton) {\r\n        if (this.headerButtonExtension && this.headerButtonExtension.register) {\r\n          const instance = this.headerButtonExtension.register();\r\n          this._extensionList[ExtensionName.headerButton] = { name: ExtensionName.headerButton, class: this.headerButtonExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Header Menu Plugin\r\n      if (this.sharedService.gridOptions.enableHeaderMenu) {\r\n        if (this.headerMenuExtension && this.headerMenuExtension.register) {\r\n          const instance = this.headerMenuExtension.register();\r\n          this._extensionList[ExtensionName.headerMenu] = { name: ExtensionName.headerMenu, class: this.headerMenuExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Row Detail View Plugin\r\n      if (this.sharedService.gridOptions.enableRowDetailView) {\r\n        if (this.rowDetailViewExtension && this.rowDetailViewExtension.register) {\r\n          const rowSelectionExtension = this.getExtensionByName(ExtensionName.rowSelection);\r\n          this.rowDetailViewExtension.register(rowSelectionExtension);\r\n          const createdExtension = this.getCreatedExtensionByName(ExtensionName.rowDetailView); // get the plugin from when it was really created earlier\r\n          const instance = createdExtension && createdExtension.instance;\r\n          this._extensionList[ExtensionName.rowDetailView] = { name: ExtensionName.rowDetailView, class: this.rowDetailViewExtension, addon: instance, instance };\r\n        }\r\n      }\r\n\r\n      // Row Move Manager Plugin\r\n      if (this.sharedService.gridOptions.enableRowMoveManager && this.rowMoveManagerExtension && this.rowMoveManagerExtension.register) {\r\n        const rowSelectionExtension = this.getExtensionByName(ExtensionName.rowSelection);\r\n        this.rowMoveManagerExtension.register(rowSelectionExtension);\r\n        const createdExtension = this.getCreatedExtensionByName(ExtensionName.rowMoveManager); // get the instance from when it was really created earlier\r\n        const instance = createdExtension && createdExtension.instance;\r\n        this._extensionList[ExtensionName.rowMoveManager] = { name: ExtensionName.rowMoveManager, class: this.rowMoveManagerExtension, addon: instance, instance };\r\n      }\r\n\r\n      // manually register other plugins\r\n      if (this.sharedService.gridOptions.registerPlugins !== undefined) {\r\n        const grid = this.sharedService.grid;\r\n        const gridOptions = this.sharedService.gridOptions;\r\n\r\n        if (Array.isArray(gridOptions.registerPlugins)) {\r\n          gridOptions.registerPlugins.forEach((plugin: any) => {\r\n            grid.registerPlugin(plugin);\r\n            const instance = grid.getPluginByName(plugin && plugin.name || '');\r\n            this._extensionList[ExtensionName.noname] = { name: ExtensionName.noname, class: null, addon: instance, instance };\r\n          });\r\n        } else {\r\n          const plugin = gridOptions.registerPlugins;\r\n          grid.registerPlugin(plugin);\r\n          const instance = grid.getPluginByName(plugin && plugin.name || '');\r\n          this._extensionList[ExtensionName.noname] = { name: ExtensionName.noname, class: null, addon: instance, instance };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind/Create certain plugins before the Grid creation to avoid having odd behaviors.\r\n   * Mostly because the column definitions might change after the grid creation, so we want to make sure to add it before then\r\n   * @param columnDefinitions\r\n   * @param options\r\n   */\r\n  createExtensionsBeforeGridCreation(columnDefinitions: Column[], options: GridOption) {\r\n    if (options.enableCheckboxSelector) {\r\n      if (!this.getCreatedExtensionByName(ExtensionName.checkboxSelector)) {\r\n        const checkboxInstance = this.checkboxSelectorExtension.create(columnDefinitions, options);\r\n        this._extensionCreatedList[ExtensionName.checkboxSelector] = { name: ExtensionName.checkboxSelector, addon: checkboxInstance, instance: checkboxInstance, class: this.checkboxSelectorExtension };\r\n      }\r\n    }\r\n    if (options.enableRowMoveManager) {\r\n      if (!this.getCreatedExtensionByName(ExtensionName.rowMoveManager)) {\r\n        const rowMoveInstance = this.rowMoveManagerExtension.create(columnDefinitions, options);\r\n        this._extensionCreatedList[ExtensionName.rowMoveManager] = { name: ExtensionName.rowMoveManager, addon: rowMoveInstance, instance: rowMoveInstance, class: this.rowMoveManagerExtension };\r\n      }\r\n    }\r\n    if (options.enableRowDetailView) {\r\n      if (!this.getCreatedExtensionByName(ExtensionName.rowDetailView)) {\r\n        const rowDetailInstance = this.rowDetailViewExtension.create(columnDefinitions, options);\r\n        this._extensionCreatedList[ExtensionName.rowDetailView] = { name: ExtensionName.rowDetailView, addon: rowDetailInstance, instance: rowDetailInstance, class: this.rowDetailViewExtension };\r\n      }\r\n    }\r\n    if (options.enableDraggableGrouping) {\r\n      if (!this.getCreatedExtensionByName(ExtensionName.draggableGrouping)) {\r\n        const draggableInstance = this.draggableGroupingExtension.create(options);\r\n        options.enableColumnReorder = draggableInstance.getSetupColumnReorder;\r\n        this._extensionCreatedList[ExtensionName.draggableGrouping] = { name: ExtensionName.draggableGrouping, addon: draggableInstance, instance: draggableInstance, class: draggableInstance.getSetupColumnReorder };\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Hide a column from the grid */\r\n  hideColumn(column: Column) {\r\n    if (this.sharedService && this.sharedService.grid && this.sharedService.grid.getColumns && this.sharedService.grid.setColumns) {\r\n      const columnIndex = this.sharedService.grid.getColumnIndex(column.id);\r\n      this.sharedService.visibleColumns = this.removeColumnByIndex(this.sharedService.grid.getColumns(), columnIndex);\r\n      this.sharedService.grid.setColumns(this.sharedService.visibleColumns);\r\n    }\r\n  }\r\n\r\n  /** Refresh the dataset through the Backend Service */\r\n  refreshBackendDataset(gridOptions?: GridOption) {\r\n    this.gridMenuExtension.refreshBackendDataset(gridOptions);\r\n  }\r\n\r\n  /**\r\n   * Remove a column from the grid by it's index in the grid\r\n   * @param columns input\r\n   * @param index\r\n   */\r\n  removeColumnByIndex(columns: Column[], index: number): Column[] {\r\n    if (Array.isArray(columns)) {\r\n      return columns.filter((el: Column, i: number) => index !== i);\r\n    }\r\n    return columns;\r\n  }\r\n\r\n  /** Translate the Cell Menu titles, we need to loop through all column definition to re-translate them */\r\n  translateCellMenu() {\r\n    if (this.cellMenuExtension && this.cellMenuExtension.translateCellMenu) {\r\n      this.cellMenuExtension.translateCellMenu();\r\n    }\r\n  }\r\n\r\n  /** Translate the Column Picker and it's last 2 checkboxes */\r\n  translateColumnPicker() {\r\n    if (this.columnPickerExtension && this.columnPickerExtension.translateColumnPicker) {\r\n      this.columnPickerExtension.translateColumnPicker();\r\n    }\r\n  }\r\n\r\n  /** Translate the Context Menu titles, we need to loop through all column definition to re-translate them */\r\n  translateContextMenu() {\r\n    if (this.contextMenuExtension && this.contextMenuExtension.translateContextMenu) {\r\n      this.contextMenuExtension.translateContextMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate the Header Menu titles, we need to loop through all column definition to re-translate them\r\n   */\r\n  translateGridMenu() {\r\n    if (this.gridMenuExtension && this.gridMenuExtension.translateGridMenu) {\r\n      this.gridMenuExtension.translateGridMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate the Header Menu titles, we need to loop through all column definition to re-translate them\r\n   */\r\n  translateHeaderMenu() {\r\n    if (this.headerMenuExtension && this.headerMenuExtension.translateHeaderMenu) {\r\n      this.headerMenuExtension.translateHeaderMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Translate manually the header titles.\r\n   * We could optionally pass a locale (that will change currently loaded locale), else it will use current locale\r\n   * @param locale to use\r\n   * @param new column definitions (optional)\r\n   */\r\n  translateColumnHeaders(locale?: boolean | string, newColumnDefinitions?: Column[]) {\r\n    if (this.sharedService && this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    if (locale) {\r\n      this.translate.use(locale as string);\r\n    }\r\n\r\n    let columnDefinitions = newColumnDefinitions;\r\n    if (!columnDefinitions) {\r\n      columnDefinitions = this.sharedService.columnDefinitions;\r\n    }\r\n\r\n    // eventually deprecate the \"headerKey\" and use only the \"nameKey\"\r\n    this.translateItems(columnDefinitions, 'headerKey', 'name');\r\n    this.translateItems(this.sharedService.allColumns, 'headerKey', 'name');\r\n    this.translateItems(columnDefinitions, 'nameKey', 'name');\r\n    this.translateItems(this.sharedService.allColumns, 'nameKey', 'name');\r\n\r\n    // re-render the column headers\r\n    this.renderColumnHeaders(columnDefinitions, Array.isArray(newColumnDefinitions));\r\n    this.gridMenuExtension.translateGridMenu();\r\n  }\r\n\r\n  /**\r\n   * Render (or re-render) the column headers from column definitions.\r\n   * calling setColumns() will trigger a grid re-render\r\n   */\r\n  renderColumnHeaders(newColumnDefinitions?: Column[], forceColumnDefinitionsOverwrite = false) {\r\n    let collection = newColumnDefinitions;\r\n    if (!collection) {\r\n      collection = this.sharedService.columnDefinitions;\r\n    }\r\n    if (Array.isArray(collection) && this.sharedService.grid && this.sharedService.grid.setColumns) {\r\n      if (collection.length > this.sharedService.allColumns.length || forceColumnDefinitionsOverwrite) {\r\n        this.sharedService.allColumns = collection;\r\n      }\r\n      this.sharedService.grid.setColumns(collection);\r\n    }\r\n\r\n    // dispose of previous Column Picker instance, then re-register it and don't forget to overwrite previous instance ref\r\n    if (this.sharedService.gridOptions.enableColumnPicker) {\r\n      this.columnPickerExtension.dispose();\r\n      const instance = this.columnPickerExtension.register();\r\n      const extension = this.getExtensionByName(ExtensionName.columnPicker);\r\n      if (extension) {\r\n        extension.addon = instance;\r\n        extension.instance = instance;\r\n      }\r\n    }\r\n\r\n    // dispose of previous Grid Menu instance, then re-register it and don't forget to overwrite previous instance ref\r\n    if (this.sharedService.gridOptions.enableGridMenu) {\r\n      this.gridMenuExtension.dispose();\r\n      const instance = this.gridMenuExtension.register();\r\n      const extension = this.getExtensionByName(ExtensionName.gridMenu);\r\n      if (extension) {\r\n        extension.addon = instance;\r\n        extension.instance = instance;\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // -------------------\r\n\r\n  /**\r\n   * Get an Extension that was created by calling its \"create\" method (there are only 3 extensions which uses this method)\r\n   *  @param name\r\n   */\r\n  private getCreatedExtensionByName(name: ExtensionName): ExtensionModel | undefined {\r\n    if (this._extensionCreatedList && this._extensionCreatedList.hasOwnProperty(name)) {\r\n      return this._extensionCreatedList[name];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /** Translate an array of items from an input key and assign translated value to the output key */\r\n  private translateItems(items: any[], inputKey: string, outputKey: string) {\r\n    if (this.sharedService.gridOptions && this.sharedService.gridOptions.enableTranslate && (!this.translate || !this.translate.instant)) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    if (Array.isArray(items)) {\r\n      for (const item of items) {\r\n        if (item[inputKey]) {\r\n          item[outputKey] = this.translate && this.translate.currentLang && this.translate.instant(item[inputKey]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * This GraphqlQueryBuilder class is a lib that already exist\r\n * but was causing issues with TypeScript, RequireJS and other bundler/packagers\r\n * and so I rewrote it in pure TypeScript.\r\n *\r\n * The previous lib can be viewed here at this Github\r\n * https://github.com/codemeasandwich/graphql-query-builder\r\n */\r\nexport default class GraphqlQueryBuilder {\r\n  alias: string | Function;\r\n  head: any[] = [];\r\n  body: any;\r\n\r\n  /* Constructor, query/mutator you wish to use, and an alias or filter arguments. */\r\n  constructor(private queryFnName: string, aliasOrFilter?: string | object) {\r\n    if (typeof aliasOrFilter === 'string') {\r\n      this.alias = aliasOrFilter;\r\n    } else if (typeof aliasOrFilter === 'object') {\r\n      this.filter(aliasOrFilter);\r\n    } else if (aliasOrFilter === undefined && arguments.length === 2) {\r\n      throw new TypeError(`You have passed undefined as Second argument to \"Query\"`);\r\n    } else if (aliasOrFilter !== undefined) {\r\n      throw new TypeError(`Second argument to \"Query\" should be an alias name(String) or filter arguments(Object). What was passed is: ${aliasOrFilter}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The parameters to run the query against.\r\n   * @param filters An object mapping attribute to values\r\n   */\r\n  filter(filters: any) {\r\n    for (const prop of Object.keys(filters)) {\r\n      if (typeof filters[prop] === 'function') {\r\n        continue;\r\n      }\r\n      const val = this.getGraphQLValue(filters[prop]);\r\n      if (val === '{}') {\r\n        continue;\r\n      }\r\n      this.head.push(`${prop}:${val}`);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Outlines the properties you wish to be returned from the query.\r\n   * @param properties representing each attribute you want Returned\r\n   */\r\n  find(...searches: any[]) { // THIS NEED TO BE A \"FUNCTION\" to scope 'arguments'\r\n    if (!searches || !Array.isArray(searches) || searches.length === 0) {\r\n      throw new TypeError(`find value can not be >>falsy<<`);\r\n    }\r\n    // if its a string.. it may have other values\r\n    // else it sould be an Object or Array of maped values\r\n    const searchKeys = (searches.length === 1 && Array.isArray(searches[0])) ? searches[0] : searches;\r\n    this.body = this.parceFind(searchKeys);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * set an alias for this result.\r\n   * @param alias\r\n   */\r\n  setAlias(alias: string) {\r\n    this.alias = alias;\r\n  }\r\n\r\n  /**\r\n   * Return to the formatted query string\r\n   * @return\r\n   */\r\n  toString() {\r\n    if (this.body === undefined) {\r\n      throw new ReferenceError(`return properties are not defined. use the 'find' function to defined them`);\r\n    }\r\n\r\n    return `${(this.alias) ? (this.alias + ':') : ''} ${this.queryFnName} ${(this.head.length > 0) ? '(' + this.head.join(',') + ')' : ''}  { ${this.body} }`;\r\n  }\r\n\r\n  // --\r\n  // PRIVATE FUNCTIONS\r\n  // -----------------\r\n\r\n  private parceFind(_levelA: any[]) {\r\n    const propsA = _levelA.map((currentValue, index) => {\r\n      const itemX = _levelA[index];\r\n\r\n      if (itemX instanceof GraphqlQueryBuilder) {\r\n        return itemX.toString();\r\n      } else if (!Array.isArray(itemX) && typeof itemX === 'object') {\r\n        const propsAA = Object.keys(itemX);\r\n        if (1 !== propsAA.length) {\r\n          throw new RangeError(`Alias objects should only have one value. was passed: ${JSON.stringify(itemX)}`);\r\n        }\r\n        const propS = propsAA[0];\r\n        const item = itemX[propS];\r\n\r\n        if (Array.isArray(item)) {\r\n          return new GraphqlQueryBuilder(propS).find(item);\r\n        }\r\n        return `${propS} : ${item} `;\r\n      } else if (typeof itemX === 'string') {\r\n        return itemX;\r\n      } else {\r\n        throw new RangeError(`cannot handle Find value of ${itemX}`);\r\n      }\r\n    });\r\n\r\n    return propsA.join(',');\r\n  }\r\n\r\n  private getGraphQLValue(value: any) {\r\n    if (typeof value === 'string') {\r\n      value = JSON.stringify(value);\r\n    } else if (Array.isArray(value)) {\r\n      value = value.map(item => {\r\n        return this.getGraphQLValue(item);\r\n      }).join();\r\n      value = `[${value}]`;\r\n    } else if (value instanceof Date) {\r\n      value = JSON.stringify(value);\r\n    } else if (value !== null && typeof value === 'object') {\r\n      value = this.objectToString(value);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private objectToString(obj: any) {\r\n    const sourceA = [];\r\n\r\n    for (const prop of Object.keys(obj)) {\r\n      if (typeof obj[prop] === 'function') {\r\n        continue;\r\n      }\r\n      sourceA.push(`${prop}:${this.getGraphQLValue(obj[prop])}`);\r\n    }\r\n    return `{${sourceA.join()}}`;\r\n  }\r\n}\r\n","import { mapOperatorType, mapOperatorByFieldType } from './utilities';\r\nimport {\r\n  BackendService,\r\n  Column,\r\n  ColumnFilter,\r\n  ColumnFilters,\r\n  ColumnSort,\r\n  CurrentFilter,\r\n  CurrentPagination,\r\n  CurrentSorter,\r\n  FieldType,\r\n  FilterChangedArgs,\r\n  GraphqlCursorPaginationOption,\r\n  GraphqlDatasetFilter,\r\n  GraphqlFilteringOption,\r\n  GraphqlPaginationOption,\r\n  GraphqlServiceOption,\r\n  GraphqlSortingOption,\r\n  GridOption,\r\n  MultiColumnSort,\r\n  OperatorType,\r\n  Pagination,\r\n  PaginationChangedArgs,\r\n  SortChangedArgs,\r\n  SortDirection,\r\n  SortDirectionString,\r\n  OperatorString\r\n} from './../models/index';\r\nimport QueryBuilder from './graphqlQueryBuilder';\r\n\r\nconst DEFAULT_ITEMS_PER_PAGE = 25;\r\nconst DEFAULT_PAGE_SIZE = 20;\r\n\r\nexport class GraphqlService implements BackendService {\r\n  private _currentFilters: ColumnFilters | CurrentFilter[] = [];\r\n  private _currentPagination: CurrentPagination;\r\n  private _currentSorters: CurrentSorter[] = [];\r\n  private _columnDefinitions: Column[];\r\n  private _grid: any;\r\n  private _datasetIdPropName = 'id';\r\n  options: GraphqlServiceOption;\r\n  pagination: Pagination | undefined;\r\n  defaultPaginationOptions: GraphqlPaginationOption | GraphqlCursorPaginationOption = {\r\n    first: DEFAULT_ITEMS_PER_PAGE,\r\n    offset: 0\r\n  };\r\n\r\n  /** Getter for the Column Definitions */\r\n  get columnDefinitions() {\r\n    return this._columnDefinitions;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  /** Initialization of the service, which acts as a constructor */\r\n  init(serviceOptions?: GraphqlServiceOption, pagination?: Pagination, grid?: any): void {\r\n    this._grid = grid;\r\n    this.options = serviceOptions || { datasetName: '', columnDefinitions: [] };\r\n    this.pagination = pagination;\r\n    this._datasetIdPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n    if (grid && grid.getColumns) {\r\n      this._columnDefinitions = (serviceOptions && serviceOptions.columnDefinitions) || grid.getColumns();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Build the GraphQL query, since the service include/exclude cursor, the output query will be different.\r\n   * @param serviceOptions GraphqlServiceOption\r\n   */\r\n  buildQuery() {\r\n    if (!this.options || !this.options.datasetName || (!this._columnDefinitions && !Array.isArray(this.options.columnDefinitions))) {\r\n      throw new Error('GraphQL Service requires the \"datasetName\" property to properly build the GraphQL query');\r\n    }\r\n\r\n    // get the column definitions and exclude some if they were tagged as excluded\r\n    let columnDefinitions = this._columnDefinitions || this.options.columnDefinitions;\r\n    columnDefinitions = columnDefinitions.filter((column: Column) => !column.excludeFromQuery);\r\n\r\n    const queryQb = new QueryBuilder('query');\r\n    const datasetQb = new QueryBuilder(this.options.datasetName);\r\n    const nodesQb = new QueryBuilder('nodes');\r\n\r\n    // get all the columnds Ids for the filters to work\r\n    const columnIds: string[] = [];\r\n    if (columnDefinitions && Array.isArray(columnDefinitions)) {\r\n      for (const column of columnDefinitions) {\r\n        columnIds.push(column.field);\r\n\r\n        // if extra \"fields\" are passed, also push them to columnIds\r\n        if (column.fields) {\r\n          columnIds.push(...column.fields);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Slickgrid also requires the \"id\" (or the dataset defined unique ide) field to be part of DataView\r\n    // add it to the GraphQL query if it wasn't already part of the list\r\n    if (columnIds.indexOf(this._datasetIdPropName) === -1) {\r\n      columnIds.unshift(this._datasetIdPropName);\r\n    }\r\n\r\n    const columnsQuery = this.buildFilterQuery(columnIds);\r\n    let graphqlNodeFields = [];\r\n\r\n    if (this._gridOptions.enablePagination !== false) {\r\n      if (this.options.isWithCursor) {\r\n        // ...pageInfo { hasNextPage, endCursor }, edges { cursor, node { _columns_ } }, totalCount: 100\r\n        const edgesQb = new QueryBuilder('edges');\r\n        const pageInfoQb = new QueryBuilder('pageInfo');\r\n        pageInfoQb.find('hasNextPage', 'hasPreviousPage', 'endCursor', 'startCursor');\r\n        nodesQb.find(columnsQuery);\r\n        edgesQb.find(['cursor']);\r\n        graphqlNodeFields = ['totalCount', nodesQb, pageInfoQb, edgesQb];\r\n      } else {\r\n        // ...nodes { _columns_ }, totalCount: 100\r\n        nodesQb.find(columnsQuery);\r\n        graphqlNodeFields = ['totalCount', nodesQb];\r\n      }\r\n      // all properties to be returned by the query\r\n      datasetQb.find(graphqlNodeFields);\r\n    } else {\r\n      // include all columns to be returned\r\n      datasetQb.find(columnsQuery);\r\n    }\r\n\r\n    // add dataset filters, could be Pagination and SortingFilters and/or FieldFilters\r\n    let datasetFilters: GraphqlDatasetFilter = {};\r\n\r\n    // only add pagination if it's enabled in the grid options\r\n    if (this._gridOptions.enablePagination !== false) {\r\n      datasetFilters = {\r\n        ...this.options.paginationOptions,\r\n        first: ((this.options.paginationOptions && this.options.paginationOptions.first) ? this.options.paginationOptions.first : ((this.pagination && this.pagination.pageSize) ? this.pagination.pageSize : null)) || this.defaultPaginationOptions.first\r\n      };\r\n\r\n      if (!this.options.isWithCursor) {\r\n        datasetFilters.offset = ((this.options.paginationOptions && this.options.paginationOptions.hasOwnProperty('offset')) ? +this.options.paginationOptions['offset'] : 0);\r\n      }\r\n    }\r\n\r\n    if (this.options.sortingOptions && Array.isArray(this.options.sortingOptions) && this.options.sortingOptions.length > 0) {\r\n      // orderBy: [{ field:x, direction: 'ASC' }]\r\n      datasetFilters.orderBy = this.options.sortingOptions;\r\n    }\r\n    if (this.options.filteringOptions && Array.isArray(this.options.filteringOptions) && this.options.filteringOptions.length > 0) {\r\n      // filterBy: [{ field: date, operator: '>', value: '2000-10-10' }]\r\n      datasetFilters.filterBy = this.options.filteringOptions;\r\n    }\r\n    if (this.options.addLocaleIntoQuery) {\r\n      // first: 20, ... locale: \"en-CA\"\r\n      datasetFilters.locale = this._gridOptions && this._gridOptions.i18n && this._gridOptions.i18n.currentLang || this._gridOptions.locale || 'en';\r\n    }\r\n    if (this.options.extraQueryArguments) {\r\n      // first: 20, ... userId: 123\r\n      for (const queryArgument of this.options.extraQueryArguments) {\r\n        datasetFilters[queryArgument.field] = queryArgument.value;\r\n      }\r\n    }\r\n\r\n    // with pagination:: query { users(first: 20, offset: 0, orderBy: [], filterBy: []) { totalCount: 100, nodes: { _columns_ }}}\r\n    // without pagination:: query { users(orderBy: [], filterBy: []) { _columns_ }}\r\n    datasetQb.filter(datasetFilters);\r\n    queryQb.find(datasetQb);\r\n\r\n    const enumSearchProperties = ['direction:', 'field:', 'operator:'];\r\n    return this.trimDoubleQuotesOnEnumField(queryQb.toString(), enumSearchProperties, this.options.keepArgumentFieldDoubleQuotes || false);\r\n  }\r\n\r\n  /**\r\n   * From an input array of strings, we want to build a GraphQL query string.\r\n   * The process has to take the dot notation and parse it into a valid GraphQL query\r\n   * Following this SO answer https://stackoverflow.com/a/47705476/1212166\r\n   *\r\n   * INPUT\r\n   *  ['firstName', 'lastName', 'billing.address.street', 'billing.address.zip']\r\n   * OUTPUT\r\n   * firstName, lastName, billing{address{street, zip}}\r\n   * @param inputArray\r\n   */\r\n  buildFilterQuery(inputArray: string[]) {\r\n\r\n    const set = (o: any = {}, a: any) => {\r\n      const k = a.shift();\r\n      o[k] = a.length ? set(o[k], a) : null;\r\n      return o;\r\n    };\r\n\r\n    const output = inputArray.reduce((o: any, a: string) => set(o, a.split('.')), {});\r\n\r\n    return JSON.stringify(output)\r\n      .replace(/\\\"|\\:|null/g, '')\r\n      .replace(/^\\{/, '')\r\n      .replace(/\\}$/, '');\r\n  }\r\n\r\n  clearFilters() {\r\n    this._currentFilters = [];\r\n    this.updateOptions({ filteringOptions: [] });\r\n  }\r\n\r\n  clearSorters() {\r\n    this._currentSorters = [];\r\n    this.updateOptions({ sortingOptions: [] });\r\n  }\r\n\r\n  /**\r\n   * Get an initialization of Pagination options\r\n   * @return Pagination Options\r\n   */\r\n  getInitPaginationOptions(): GraphqlDatasetFilter {\r\n    const paginationFirst = this.pagination ? this.pagination.pageSize : DEFAULT_ITEMS_PER_PAGE;\r\n    return (this.options && this.options.isWithCursor) ? { first: paginationFirst } : { first: paginationFirst, offset: 0 };\r\n  }\r\n\r\n  /** Get the GraphQL dataset name */\r\n  getDatasetName(): string {\r\n    return this.options.datasetName || '';\r\n  }\r\n\r\n  /** Get the Filters that are currently used by the grid */\r\n  getCurrentFilters(): ColumnFilters | CurrentFilter[] {\r\n    return this._currentFilters;\r\n  }\r\n\r\n  /** Get the Pagination that is currently used by the grid */\r\n  getCurrentPagination(): CurrentPagination {\r\n    return this._currentPagination;\r\n  }\r\n\r\n  /** Get the Sorters that are currently used by the grid */\r\n  getCurrentSorters(): CurrentSorter[] {\r\n    return this._currentSorters;\r\n  }\r\n\r\n  /*\r\n   * Reset the pagination options\r\n   */\r\n  resetPaginationOptions() {\r\n    let paginationOptions: GraphqlPaginationOption | GraphqlCursorPaginationOption;\r\n\r\n    if (this.options && this.options.isWithCursor) {\r\n      // first, last, after, before\r\n      paginationOptions = {\r\n        after: '',\r\n        before: undefined,\r\n        last: undefined\r\n      } as GraphqlCursorPaginationOption;\r\n    } else {\r\n      // first, last, offset\r\n      paginationOptions = ((this.options && this.options.paginationOptions) || this.getInitPaginationOptions()) as GraphqlPaginationOption;\r\n      (paginationOptions as GraphqlPaginationOption).offset = 0;\r\n    }\r\n\r\n    // save current pagination as Page 1 and page size as \"first\" set size\r\n    this._currentPagination = {\r\n      pageNumber: 1,\r\n      pageSize: paginationOptions.first || DEFAULT_PAGE_SIZE,\r\n    };\r\n\r\n    this.updateOptions({ paginationOptions });\r\n  }\r\n\r\n  updateOptions(serviceOptions?: Partial<GraphqlServiceOption>) {\r\n    this.options = { ...this.options, ...serviceOptions };\r\n  }\r\n\r\n  /*\r\n   * FILTERING\r\n   */\r\n  processOnFilterChanged(event: Event, args: FilterChangedArgs): string {\r\n    const gridOptions: GridOption = this._gridOptions;\r\n    const backendApi = gridOptions.backendServiceApi;\r\n\r\n    if (backendApi === undefined) {\r\n      throw new Error('Something went wrong in the GraphqlService, \"backendServiceApi\" is not initialized');\r\n    }\r\n\r\n    // keep current filters & always save it as an array (columnFilters can be an object when it is dealt by SlickGrid Filter)\r\n    this._currentFilters = this.castFilterToColumnFilters(args.columnFilters);\r\n\r\n    if (!args || !args.grid) {\r\n      throw new Error('Something went wrong when trying create the GraphQL Backend Service, it seems that \"args\" is not populated correctly');\r\n    }\r\n\r\n    // loop through all columns to inspect filters & set the query\r\n    this.updateFilters(args.columnFilters, false);\r\n\r\n    this.resetPaginationOptions();\r\n    return this.buildQuery();\r\n  }\r\n\r\n  /*\r\n   * PAGINATION\r\n   * With cursor, the query can have 4 arguments (first, after, last, before), for example:\r\n   *   users (first:20, after:\"YXJyYXljb25uZWN0aW9uOjM=\") {\r\n   *     totalCount\r\n   *     pageInfo {\r\n   *       hasNextPage\r\n   *       hasPreviousPage\r\n   *       endCursor\r\n   *       startCursor\r\n   *     }\r\n   *     edges {\r\n   *       cursor\r\n   *       node {\r\n   *         name\r\n   *         gender\r\n   *       }\r\n   *     }\r\n   *   }\r\n   * Without cursor, the query can have 3 arguments (first, last, offset), for example:\r\n   *   users (first:20, offset: 10) {\r\n   *     totalCount\r\n   *     nodes {\r\n   *       name\r\n   *       gender\r\n   *     }\r\n   *   }\r\n   */\r\n  processOnPaginationChanged(event: Event, args: PaginationChangedArgs): string {\r\n    const pageSize = +(args.pageSize || ((this.pagination) ? this.pagination.pageSize : DEFAULT_PAGE_SIZE));\r\n    this.updatePagination(args.newPage, pageSize);\r\n\r\n    // build the GraphQL query which we will use in the WebAPI callback\r\n    return this.buildQuery();\r\n  }\r\n\r\n  /*\r\n   * SORTING\r\n   * we will use sorting as per a Facebook suggestion on a Github issue (with some small changes)\r\n   * https://github.com/graphql/graphql-relay-js/issues/20#issuecomment-220494222\r\n   *\r\n   *  users (first: 20, offset: 10, orderBy: [{field: lastName, direction: ASC}, {field: firstName, direction: DESC}]) {\r\n   *    totalCount\r\n   *    nodes {\r\n   *      name\r\n   *      gender\r\n   *    }\r\n   *  }\r\n   */\r\n  // @deprecated note, we should remove \"SortChangedArgs\" and only use: ColumnSort | MultiColumnSort\r\n  processOnSortChanged(event: Event, args: SortChangedArgs | ColumnSort | MultiColumnSort): string {\r\n    const sortColumns = (args.multiColumnSort) ? (args as MultiColumnSort).sortCols : new Array({ sortCol: (args as ColumnSort).sortCol, sortAsc: (args as ColumnSort).sortAsc });\r\n\r\n    // loop through all columns to inspect sorters & set the query\r\n    this.updateSorters(sortColumns);\r\n\r\n    // build the GraphQL query which we will use in the WebAPI callback\r\n    return this.buildQuery();\r\n  }\r\n\r\n  /**\r\n   * loop through all columns to inspect filters & update backend service filteringOptions\r\n   * @param columnFilters\r\n   */\r\n  updateFilters(columnFilters: ColumnFilters | CurrentFilter[], isUpdatedByPresetOrDynamically: boolean) {\r\n    const searchByArray: GraphqlFilteringOption[] = [];\r\n    let searchValue: string | string[];\r\n\r\n    // on filter preset load, we need to keep current filters\r\n    if (isUpdatedByPresetOrDynamically) {\r\n      this._currentFilters = this.castFilterToColumnFilters(columnFilters);\r\n    }\r\n\r\n    for (const columnId in columnFilters) {\r\n      if (columnFilters.hasOwnProperty(columnId)) {\r\n        const columnFilter = columnFilters[columnId];\r\n\r\n        // if user defined some \"presets\", then we need to find the filters from the column definitions instead\r\n        let columnDef: Column | undefined;\r\n        if (isUpdatedByPresetOrDynamically && Array.isArray(this._columnDefinitions)) {\r\n          columnDef = this._columnDefinitions.find((column: Column) => column.id === columnFilter.columnId);\r\n        } else {\r\n          columnDef = columnFilter.columnDef;\r\n        }\r\n        if (!columnDef) {\r\n          throw new Error('[GraphQL Service]: Something went wrong in trying to get the column definition of the specified filter (or preset filters). Did you make a typo on the filter columnId?');\r\n        }\r\n\r\n        const fieldName = (columnDef.filter && columnDef.filter.queryField) || columnDef.queryFieldFilter || columnDef.queryField || columnDef.field || columnDef.name || '';\r\n        let searchTerms = columnFilter && columnFilter.searchTerms || [];\r\n        let fieldSearchValue = (Array.isArray(searchTerms) && searchTerms.length === 1) ? searchTerms[0] : '';\r\n        if (typeof fieldSearchValue === 'undefined') {\r\n          fieldSearchValue = '';\r\n        }\r\n\r\n        if (!fieldName) {\r\n          throw new Error(`GraphQL filter could not find the field name to query the search, your column definition must include a valid \"field\" or \"name\" (optionally you can also use the \"queryfield\").`);\r\n        }\r\n\r\n        fieldSearchValue = '' + fieldSearchValue; // make sure it's a string\r\n        const matches = fieldSearchValue.match(/^([<>!=\\*]{0,2})(.*[^<>!=\\*])([\\*]?)$/); // group 1: Operator, 2: searchValue, 3: last char is '*' (meaning starts with, ex.: abc*)\r\n        let operator = columnFilter.operator || ((matches) ? matches[1] : '');\r\n        searchValue = (!!matches) ? matches[2] : '';\r\n        const lastValueChar = (!!matches) ? matches[3] : (operator === '*z' ? '*' : '');\r\n\r\n        // no need to query if search value is empty\r\n        if (fieldName && searchValue === '' && searchTerms.length === 0) {\r\n          continue;\r\n        }\r\n\r\n        if (Array.isArray(searchTerms) && searchTerms.length === 1 && typeof searchTerms[0] === 'string' && searchTerms[0].indexOf('..') > 0) {\r\n          searchTerms = searchTerms[0].split('..');\r\n          if (!operator) {\r\n            operator = OperatorType.rangeExclusive;\r\n          }\r\n        }\r\n\r\n        if (typeof searchValue === 'string') {\r\n          // escaping the search value\r\n          searchValue = searchValue.replace(`'`, `''`); // escape single quotes by doubling them\r\n          if (operator === '*' || operator === 'a*' || operator === '*z' || lastValueChar === '*') {\r\n            operator = ((operator === '*' || operator === '*z') ? 'EndsWith' : 'StartsWith') as OperatorString;\r\n          }\r\n        }\r\n\r\n        // if we didn't find an Operator but we have a Column Operator inside the Filter (DOM Element), we should use its default Operator\r\n        // multipleSelect is \"IN\", while singleSelect is \"EQ\", else don't map any operator\r\n        if (!operator && columnDef.filter) {\r\n          operator = columnDef.filter.operator;\r\n        }\r\n\r\n        // when having more than 1 search term (we need to create a CSV string for GraphQL \"IN\" or \"NOT IN\" filter search)\r\n        if (searchTerms && searchTerms.length > 1 && (operator === 'IN' || operator === 'NIN' || operator === 'NOTIN' || operator === 'NOT IN' || operator === 'NOT_IN')) {\r\n          searchValue = searchTerms.join(',');\r\n        } else if (searchTerms && searchTerms.length === 2 && (!operator || operator === OperatorType.rangeExclusive || operator === OperatorType.rangeInclusive)) {\r\n          if (!operator) {\r\n            operator = OperatorType.rangeExclusive;\r\n          }\r\n          searchByArray.push({ field: fieldName, operator: (operator === OperatorType.rangeInclusive ? 'GE' : 'GT'), value: searchTerms[0] });\r\n          searchByArray.push({ field: fieldName, operator: (operator === OperatorType.rangeInclusive ? 'LE' : 'LT'), value: searchTerms[1] });\r\n          continue;\r\n        }\r\n\r\n        // if we still don't have an operator find the proper Operator to use by it's field type\r\n        if (!operator) {\r\n          operator = mapOperatorByFieldType(columnDef.type || FieldType.string);\r\n        }\r\n\r\n        // build the search array\r\n        searchByArray.push({ field: fieldName, operator: mapOperatorType(operator), value: searchValue });\r\n      }\r\n    }\r\n\r\n    // update the service options with filters for the buildQuery() to work later\r\n    this.updateOptions({ filteringOptions: searchByArray });\r\n  }\r\n\r\n  /**\r\n   * Update the pagination component with it's new page number and size\r\n   * @param newPage\r\n   * @param pageSize\r\n   */\r\n  updatePagination(newPage: number, pageSize: number) {\r\n    this._currentPagination = {\r\n      pageNumber: newPage,\r\n      pageSize,\r\n    };\r\n\r\n    let paginationOptions;\r\n    if (this.options && this.options.isWithCursor) {\r\n      paginationOptions = {\r\n        first: pageSize\r\n      };\r\n    } else {\r\n      paginationOptions = {\r\n        first: pageSize,\r\n        offset: (newPage > 1) ? ((newPage - 1) * pageSize) : 0 // recalculate offset but make sure the result is always over 0\r\n      };\r\n    }\r\n\r\n    // unless user specifically set \"enablePagination\" to False, we'll update pagination options in every other cases\r\n    if (this._gridOptions && (this._gridOptions.enablePagination || !this._gridOptions.hasOwnProperty('enablePagination'))) {\r\n      this.updateOptions({ paginationOptions });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loop through all columns to inspect sorters & update backend service sortingOptions\r\n   * @param columnFilters\r\n   */\r\n  updateSorters(sortColumns?: ColumnSort[], presetSorters?: CurrentSorter[]) {\r\n    let currentSorters: CurrentSorter[] = [];\r\n    const graphqlSorters: GraphqlSortingOption[] = [];\r\n\r\n    if (!sortColumns && presetSorters) {\r\n      // make the presets the current sorters, also make sure that all direction are in uppercase for GraphQL\r\n      currentSorters = presetSorters;\r\n      currentSorters.forEach((sorter) => sorter.direction = sorter.direction.toUpperCase() as SortDirectionString);\r\n\r\n      // display the correct sorting icons on the UI, for that it requires (columnId, sortAsc) properties\r\n      const tmpSorterArray = currentSorters.map((sorter) => {\r\n        const columnDef = this._columnDefinitions.find((column: Column) => column.id === sorter.columnId);\r\n\r\n        graphqlSorters.push({\r\n          field: columnDef ? ((columnDef.queryFieldSorter || columnDef.queryField || columnDef.field) + '') : (sorter.columnId + ''),\r\n          direction: sorter.direction\r\n        });\r\n\r\n        // return only the column(s) found in the Column Definitions ELSE null\r\n        if (columnDef) {\r\n          return {\r\n            columnId: sorter.columnId,\r\n            sortAsc: sorter.direction.toUpperCase() === SortDirection.ASC\r\n          };\r\n        }\r\n        return null;\r\n      });\r\n\r\n      // set the sort icons, but also make sure to filter out null values (that happens when columnDef is not found)\r\n      if (Array.isArray(tmpSorterArray)) {\r\n        this._grid.setSortColumns(tmpSorterArray.filter((sorter) => sorter));\r\n      }\r\n    } else if (sortColumns && !presetSorters) {\r\n      // build the orderBy array, it could be multisort, example\r\n      // orderBy:[{field: lastName, direction: ASC}, {field: firstName, direction: DESC}]\r\n      if (Array.isArray(sortColumns) && sortColumns.length > 0) {\r\n        for (const column of sortColumns) {\r\n          if (column && column.sortCol) {\r\n            currentSorters.push({\r\n              columnId: column.sortCol.id + '',\r\n              direction: column.sortAsc ? SortDirection.ASC : SortDirection.DESC\r\n            });\r\n\r\n            const fieldName = (column.sortCol.queryFieldSorter || column.sortCol.queryField || column.sortCol.field || '') + '';\r\n            if (fieldName) {\r\n              graphqlSorters.push({\r\n                field: fieldName,\r\n                direction: column.sortAsc ? SortDirection.ASC : SortDirection.DESC\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // keep current Sorters and update the service options with the new sorting\r\n    this._currentSorters = currentSorters;\r\n    this.updateOptions({ sortingOptions: graphqlSorters });\r\n  }\r\n\r\n  /**\r\n   * A function which takes an input string and removes double quotes only\r\n   * on certain fields are identified as GraphQL enums (except fields with dot notation)\r\n   * For example let say we identified (\"direction:\", \"sort\") as word which are GraphQL enum fields\r\n   * then the result will be:\r\n   * FROM\r\n   * query { users (orderBy:[{field:\"firstName\", direction:\"ASC\"} }]) }\r\n   * TO\r\n   * query { users (orderBy:[{field: firstName, direction: ASC}})}\r\n   *\r\n   * EXCEPTIONS (fields with dot notation \".\" which are inside a \"field:\")\r\n   * these fields will keep double quotes while everything else will be stripped of double quotes\r\n   * query { users (orderBy:[{field:\"billing.street.name\", direction: \"ASC\"} }\r\n   * TO\r\n   * query { users (orderBy:[{field:\"billing.street.name\", direction: ASC}}\r\n   * @param inputStr input string\r\n   * @param enumSearchWords array of enum words to filter\r\n   * @returns outputStr output string\r\n   */\r\n  trimDoubleQuotesOnEnumField(inputStr: string, enumSearchWords: string[], keepArgumentFieldDoubleQuotes: boolean) {\r\n    const patternWordInQuotes = `\\s?((field:\\s*)?\".*?\")`;\r\n    let patternRegex = enumSearchWords.join(patternWordInQuotes + '|');\r\n    patternRegex += patternWordInQuotes; // the last one should also have the pattern but without the pipe \"|\"\r\n    // example with (field: & direction:):  /field:s?(\".*?\")|direction:s?(\".*?\")/\r\n    const reg = new RegExp(patternRegex, 'g');\r\n\r\n    return inputStr.replace(reg, (group1, group2, group3) => {\r\n      // remove double quotes except when the string starts with a \"field:\"\r\n      let removeDoubleQuotes = true;\r\n      if (group1.startsWith('field:') && keepArgumentFieldDoubleQuotes) {\r\n        removeDoubleQuotes = false;\r\n      }\r\n      const rep = removeDoubleQuotes ? group1.replace(/\"/g, '') : group1;\r\n      return rep;\r\n    });\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // -------------------\r\n  /**\r\n   * Cast provided filters (could be in multiple formats) into an array of CurrentFilter\r\n   * @param columnFilters\r\n   */\r\n  private castFilterToColumnFilters(columnFilters: ColumnFilters | CurrentFilter[]): CurrentFilter[] {\r\n    // keep current filters & always save it as an array (columnFilters can be an object when it is dealt by SlickGrid Filter)\r\n    const filtersArray: ColumnFilter[] = (typeof columnFilters === 'object') ? Object.keys(columnFilters).map(key => columnFilters[key]) : columnFilters;\r\n\r\n    if (!Array.isArray(filtersArray)) {\r\n      return [];\r\n    }\r\n\r\n    return filtersArray.map((filter) => {\r\n      const tmpFilter: CurrentFilter = { columnId: filter.columnId || '' };\r\n      if (filter.operator) {\r\n        tmpFilter.operator = filter.operator;\r\n      }\r\n      if (Array.isArray(filter.searchTerms)) {\r\n        tmpFilter.searchTerms = filter.searchTerms;\r\n      }\r\n      return tmpFilter;\r\n    });\r\n  }\r\n}\r\n","import { CaseType, OdataOption } from '../models/index';\r\nimport { titleCase } from './utilities';\r\n\r\nexport class OdataQueryBuilderService {\r\n  _columnFilters: any;\r\n  _defaultSortBy: string;\r\n  _filterCount: number;\r\n  _odataOptions: Partial<OdataOption>;\r\n\r\n  constructor() {\r\n    this._odataOptions = {\r\n      filterQueue: [],\r\n      orderBy: ''\r\n    };\r\n    this._defaultSortBy = '';\r\n    this._columnFilters = {};\r\n  }\r\n\r\n  /*\r\n    * Build the OData query string from all the options provided\r\n    * @return string OData query\r\n    */\r\n  buildQuery(): string {\r\n    if (!this._odataOptions) {\r\n      throw new Error('Odata Service requires certain options like \"top\" for it to work');\r\n    }\r\n    this._odataOptions.filterQueue = [];\r\n    const queryTmpArray = [];\r\n\r\n    // When enableCount is set, add it to the OData query\r\n    if (this._odataOptions.enableCount === true) {\r\n      const countQuery = (this._odataOptions.version >= 4) ? '$count=true' : '$inlinecount=allpages';\r\n      queryTmpArray.push(countQuery);\r\n    }\r\n\r\n    if (this._odataOptions.top) {\r\n      queryTmpArray.push(`$top=${this._odataOptions.top}`);\r\n    }\r\n    if (this._odataOptions.skip) {\r\n      queryTmpArray.push(`$skip=${this._odataOptions.skip}`);\r\n    }\r\n    if (this._odataOptions.orderBy) {\r\n      let argument = '';\r\n      if (Array.isArray(this._odataOptions.orderBy)) {\r\n        argument = this._odataOptions.orderBy.join(','); // csv, that will form a query, for example: $orderby=RoleName asc, Id desc\r\n      } else {\r\n        argument = this._odataOptions.orderBy;\r\n      }\r\n      queryTmpArray.push(`$orderby=${argument}`);\r\n    }\r\n    if (this._odataOptions.filterBy || this._odataOptions.filter) {\r\n      const filterBy = this._odataOptions.filter || this._odataOptions.filterBy;\r\n      if (filterBy) {\r\n        this._filterCount = 1;\r\n        this._odataOptions.filterQueue = [];\r\n        let filterStr = filterBy;\r\n        if (Array.isArray(filterBy)) {\r\n          this._filterCount = filterBy.length;\r\n          filterStr = filterBy.join(` ${this._odataOptions.filterBySeparator || 'and'} `);\r\n        }\r\n\r\n        if (typeof filterStr === 'string') {\r\n          if (!(filterStr[0] === '(' && filterStr.slice(-1) === ')')) {\r\n            this.addToFilterQueueWhenNotExists(`(${filterStr})`);\r\n          } else {\r\n            this.addToFilterQueueWhenNotExists(filterStr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this._odataOptions.filterQueue.length > 0) {\r\n      const query = this._odataOptions.filterQueue.join(` ${this._odataOptions.filterBySeparator || 'and'} `);\r\n      this._odataOptions.filter = query; // overwrite with\r\n      queryTmpArray.push(`$filter=${query}`);\r\n    }\r\n\r\n    // join all the odata functions by a '&'\r\n    return queryTmpArray.join('&');\r\n  }\r\n\r\n  getFilterCount(): number {\r\n    return this._filterCount;\r\n  }\r\n\r\n  get columnFilters(): any[] {\r\n    return this._columnFilters;\r\n  }\r\n\r\n  get options(): Partial<OdataOption> {\r\n    return this._odataOptions;\r\n  }\r\n\r\n  set options(options: Partial<OdataOption>) {\r\n    this._odataOptions = options;\r\n  }\r\n\r\n  removeColumnFilter(fieldName: string) {\r\n    if (this._columnFilters && this._columnFilters.hasOwnProperty(fieldName)) {\r\n      delete this._columnFilters[fieldName];\r\n    }\r\n  }\r\n\r\n  saveColumnFilter(fieldName: string, value: any, searchTerms?: any[]) {\r\n    this._columnFilters[fieldName] = {\r\n      search: searchTerms,\r\n      value\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Change any OData options that will be used to build the query\r\n   * @param object options\r\n   */\r\n  updateOptions(options: Partial<OdataOption>) {\r\n    for (const property of Object.keys(options)) {\r\n      if (options.hasOwnProperty(property)) {\r\n        this._odataOptions[property] = options[property]; // replace of the property\r\n      }\r\n\r\n      // we need to keep the defaultSortBy for references whenever the user removes his Sorting\r\n      // then we would revert to the defaultSortBy and the only way is to keep a hard copy here\r\n      if (property === 'orderBy' || property === 'sortBy') {\r\n        let sortBy = options[property];\r\n\r\n        // make sure first char of each orderBy field is capitalize\r\n        if (this._odataOptions.caseType === CaseType.pascalCase) {\r\n          if (Array.isArray(sortBy)) {\r\n            sortBy.forEach((field, index, inputArray) => {\r\n              inputArray[index] = titleCase(field);\r\n            });\r\n          } else {\r\n            sortBy = titleCase(options[property]);\r\n          }\r\n        }\r\n        this._odataOptions.orderBy = sortBy;\r\n        this._defaultSortBy = sortBy;\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // -------------------\r\n\r\n  private addToFilterQueueWhenNotExists(filterStr: string) {\r\n    if (this._odataOptions.filterQueue && this._odataOptions.filterQueue.indexOf(filterStr) === -1) {\r\n      this._odataOptions.filterQueue.push(filterStr);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { parseUtcDate, mapOperatorByFieldType, titleCase } from './utilities';\r\nimport {\r\n  BackendService,\r\n  CaseType,\r\n  Column,\r\n  ColumnFilter,\r\n  ColumnFilters,\r\n  ColumnSort,\r\n  CurrentFilter,\r\n  CurrentPagination,\r\n  CurrentSorter,\r\n  FilterChangedArgs,\r\n  FieldType,\r\n  GridOption,\r\n  OdataOption,\r\n  Pagination,\r\n  PaginationChangedArgs,\r\n  SortChangedArgs,\r\n  SortDirection,\r\n  SortDirectionString,\r\n  OperatorType,\r\n  OdataSortingOption,\r\n  OperatorString,\r\n  SearchTerm\r\n} from './../models/index';\r\nimport { OdataQueryBuilderService } from './odataQueryBuilder.service';\r\n\r\nconst DEFAULT_ITEMS_PER_PAGE = 25;\r\nconst DEFAULT_PAGE_SIZE = 20;\r\n\r\n@Injectable()\r\nexport class GridOdataService implements BackendService {\r\n  private _currentFilters: CurrentFilter[] = [];\r\n  private _currentPagination: CurrentPagination;\r\n  private _currentSorters: CurrentSorter[] = [];\r\n  private _columnDefinitions: Column[];\r\n  private _grid: any;\r\n  private _odataService: OdataQueryBuilderService;\r\n  options: Partial<OdataOption>;\r\n  pagination: Pagination | undefined;\r\n  defaultOptions: OdataOption = {\r\n    top: DEFAULT_ITEMS_PER_PAGE,\r\n    orderBy: '',\r\n    caseType: CaseType.pascalCase\r\n  };\r\n\r\n  /** Getter for the Column Definitions */\r\n  get columnDefinitions() {\r\n    return this._columnDefinitions;\r\n  }\r\n\r\n  /** Getter for the Odata Service */\r\n  get odataService() {\r\n    return this._odataService;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  constructor() {\r\n    this._odataService = new OdataQueryBuilderService();\r\n  }\r\n\r\n  init(serviceOptions: Partial<OdataOption>, pagination?: Pagination, grid?: any): void {\r\n    this._grid = grid;\r\n    const mergedOptions = { ...this.defaultOptions, ...serviceOptions };\r\n\r\n    // unless user specifically set \"enablePagination\" to False, we'll add \"top\" property for the pagination in every other cases\r\n    if (this._gridOptions && !this._gridOptions.enablePagination) {\r\n      // save current pagination as Page 1 and page size as \"top\"\r\n      this._odataService.options = { ...mergedOptions, top: null };\r\n      this._currentPagination = null;\r\n    } else {\r\n      const topOption = (pagination && pagination.pageSize) ? pagination.pageSize : this.defaultOptions.top;\r\n      this._odataService.options = { ...mergedOptions, top: topOption };\r\n      this._currentPagination = {\r\n        pageNumber: 1,\r\n        pageSize: this._odataService.options.top || this.defaultOptions.top || DEFAULT_PAGE_SIZE,\r\n      };\r\n    }\r\n\r\n    this.options = this._odataService.options;\r\n    this.pagination = pagination;\r\n\r\n    if (grid && grid.getColumns) {\r\n      this._columnDefinitions = serviceOptions && serviceOptions.columnDefinitions || grid.getColumns();\r\n      this._columnDefinitions = this._columnDefinitions.filter((column: Column) => !column.excludeFromQuery);\r\n    }\r\n  }\r\n\r\n  buildQuery(): string {\r\n    return this._odataService.buildQuery();\r\n  }\r\n\r\n  clearFilters() {\r\n    this._currentFilters = [];\r\n    this.updateFilters([]);\r\n  }\r\n\r\n  clearSorters() {\r\n    this._currentSorters = [];\r\n    this.updateSorters([]);\r\n  }\r\n\r\n  updateOptions(serviceOptions?: Partial<OdataOption>) {\r\n    this.options = { ...this.options, ...serviceOptions };\r\n    this._odataService.options = this.options;\r\n  }\r\n\r\n  removeColumnFilter(fieldName: string): void {\r\n    this._odataService.removeColumnFilter(fieldName);\r\n  }\r\n\r\n  /** Get the Filters that are currently used by the grid */\r\n  getCurrentFilters(): CurrentFilter[] {\r\n    return this._currentFilters;\r\n  }\r\n\r\n  /** Get the Pagination that is currently used by the grid */\r\n  getCurrentPagination(): CurrentPagination {\r\n    return this._currentPagination;\r\n  }\r\n\r\n  /** Get the Sorters that are currently used by the grid */\r\n  getCurrentSorters(): CurrentSorter[] {\r\n    return this._currentSorters;\r\n  }\r\n\r\n  /**\r\n   * Mapper for mathematical operators (ex.: <= is \"le\", > is \"gt\")\r\n   * @param string operator\r\n   * @returns string map\r\n   */\r\n  mapOdataOperator(operator: string) {\r\n    let map = '';\r\n    switch (operator) {\r\n      case '<':\r\n        map = 'lt';\r\n        break;\r\n      case '<=':\r\n        map = 'le';\r\n        break;\r\n      case '>':\r\n        map = 'gt';\r\n        break;\r\n      case '>=':\r\n        map = 'ge';\r\n        break;\r\n      case '<>':\r\n      case '!=':\r\n        map = 'ne';\r\n        break;\r\n      case '=':\r\n      case '==':\r\n      default:\r\n        map = 'eq';\r\n        break;\r\n    }\r\n\r\n    return map;\r\n  }\r\n\r\n  /*\r\n   * Reset the pagination options\r\n   */\r\n  resetPaginationOptions() {\r\n    this._odataService.updateOptions({\r\n      skip: 0\r\n    });\r\n  }\r\n\r\n  saveColumnFilter(fieldName: string, value: string, terms?: any[]) {\r\n    this._odataService.saveColumnFilter(fieldName, value, terms);\r\n  }\r\n\r\n  /*\r\n   * FILTERING\r\n   */\r\n  processOnFilterChanged(event: Event, args: FilterChangedArgs): string {\r\n    const gridOptions: GridOption = this._gridOptions;\r\n    const backendApi = gridOptions.backendServiceApi;\r\n\r\n    if (backendApi === undefined) {\r\n      throw new Error('Something went wrong in the GridOdataService, \"backendServiceApi\" is not initialized');\r\n    }\r\n\r\n    // keep current filters & always save it as an array (columnFilters can be an object when it is dealt by SlickGrid Filter)\r\n    this._currentFilters = this.castFilterToColumnFilters(args.columnFilters);\r\n\r\n    if (!args || !args.grid) {\r\n      throw new Error('Something went wrong when trying create the GridOdataService, it seems that \"args\" is not populated correctly');\r\n    }\r\n\r\n    // loop through all columns to inspect filters & set the query\r\n    this.updateFilters(args.columnFilters);\r\n\r\n    this.resetPaginationOptions();\r\n    return this._odataService.buildQuery();\r\n  }\r\n\r\n  /*\r\n   * PAGINATION\r\n   */\r\n  processOnPaginationChanged(event: Event, args: PaginationChangedArgs) {\r\n    const pageSize = +(args.pageSize || ((this.pagination) ? this.pagination.pageSize : DEFAULT_PAGE_SIZE));\r\n    this.updatePagination(args.newPage, pageSize);\r\n\r\n    // build the OData query which we will use in the WebAPI callback\r\n    return this._odataService.buildQuery();\r\n  }\r\n\r\n  /*\r\n   * SORTING\r\n   */\r\n  processOnSortChanged(event: Event, args: SortChangedArgs) {\r\n    const sortColumns = (args.multiColumnSort) ? args.sortCols : new Array({ sortCol: args.sortCol, sortAsc: args.sortAsc });\r\n\r\n    // loop through all columns to inspect sorters & set the query\r\n    this.updateSorters(sortColumns);\r\n\r\n    // build the OData query which we will use in the WebAPI callback\r\n    return this._odataService.buildQuery();\r\n  }\r\n\r\n  /**\r\n   * loop through all columns to inspect filters & update backend service filters\r\n   * @param columnFilters\r\n   */\r\n  updateFilters(columnFilters: ColumnFilters | CurrentFilter[], isUpdatedByPresetOrDynamically?: boolean) {\r\n    let searchBy = '';\r\n    const searchByArray: string[] = [];\r\n    const odataVersion = this._odataService && this._odataService.options && this._odataService.options.version || 2;\r\n\r\n    // on filter preset load, we need to keep current filters\r\n    if (isUpdatedByPresetOrDynamically) {\r\n      this._currentFilters = this.castFilterToColumnFilters(columnFilters);\r\n    }\r\n\r\n    // loop through all columns to inspect filters\r\n    for (const columnId in columnFilters) {\r\n      if (columnFilters.hasOwnProperty(columnId)) {\r\n        const columnFilter = columnFilters[columnId];\r\n\r\n        // if user defined some \"presets\", then we need to find the filters from the column definitions instead\r\n        let columnDef: Column | undefined;\r\n        if (isUpdatedByPresetOrDynamically && Array.isArray(this._columnDefinitions)) {\r\n          columnDef = this._columnDefinitions.find((column: Column) => {\r\n            return column.id === columnFilter.columnId;\r\n          });\r\n        } else {\r\n          columnDef = columnFilter.columnDef;\r\n        }\r\n        if (!columnDef) {\r\n          throw new Error('[GridOData Service]: Something went wrong in trying to get the column definition of the specified filter (or preset filters). Did you make a typo on the filter columnId?');\r\n        }\r\n\r\n        let fieldName = (columnDef.filter && columnDef.filter.queryField) || columnDef.queryFieldFilter || columnDef.queryField || columnDef.field || columnDef.name || '';\r\n        const fieldType = columnDef.type || FieldType.string;\r\n        let searchTerms = (columnFilter ? columnFilter.searchTerms : null) || [];\r\n        let fieldSearchValue = (Array.isArray(searchTerms) && searchTerms.length === 1) ? searchTerms[0] : '';\r\n        if (typeof fieldSearchValue === 'undefined') {\r\n          fieldSearchValue = '';\r\n        }\r\n\r\n        if (!fieldName) {\r\n          throw new Error(`GridOData filter could not find the field name to query the search, your column definition must include a valid \"field\" or \"name\" (optionally you can also use the \"queryfield\").`);\r\n        }\r\n\r\n        fieldSearchValue = '' + fieldSearchValue; // make sure it's a string\r\n        const matches = fieldSearchValue.match(/^([<>!=\\*]{0,2})(.*[^<>!=\\*])([\\*]?)$/); // group 1: Operator, 2: searchValue, 3: last char is '*' (meaning starts with, ex.: abc*)\r\n        let operator = columnFilter.operator || ((matches) ? matches[1] : '');\r\n        let searchValue = (!!matches) ? matches[2] : '';\r\n        const lastValueChar = (!!matches) ? matches[3] : (operator === '*z' || operator === OperatorType.endsWith) ? '*' : '';\r\n        const bypassOdataQuery = columnFilter.bypassBackendQuery || false;\r\n\r\n        // no need to query if search value is empty\r\n        if (fieldName && searchValue === '' && searchTerms.length <= 1) {\r\n          this.removeColumnFilter(fieldName);\r\n          continue;\r\n        }\r\n\r\n        if (Array.isArray(searchTerms) && searchTerms.length === 1 && typeof searchTerms[0] === 'string' && searchTerms[0].indexOf('..') > 0) {\r\n          searchTerms = searchTerms[0].split('..');\r\n          if (!operator) {\r\n            operator = OperatorType.rangeExclusive;\r\n          }\r\n        }\r\n\r\n        // escaping the search value\r\n        searchValue = searchValue.replace(`'`, `''`); // escape single quotes by doubling them\r\n        searchValue = encodeURIComponent(searchValue); // encode URI of the final search value\r\n\r\n        // if we didn't find an Operator but we have a Column Operator inside the Filter (DOM Element), we should use its default Operator\r\n        // multipleSelect is \"IN\", while singleSelect is \"EQ\", else don't map any operator\r\n        if (!operator && columnDef.filter) {\r\n          operator = columnDef.filter.operator;\r\n        }\r\n\r\n        // if we still don't have an operator find the proper Operator to use by it's field type\r\n        if (!operator) {\r\n          operator = mapOperatorByFieldType(columnDef.type || FieldType.string);\r\n        }\r\n\r\n        // extra query arguments\r\n        if (bypassOdataQuery) {\r\n          // push to our temp array and also trim white spaces\r\n          if (fieldName) {\r\n            this.saveColumnFilter(fieldName, fieldSearchValue, searchTerms);\r\n          }\r\n        } else {\r\n          searchBy = '';\r\n\r\n          // titleCase the fieldName so that it matches the WebApi names\r\n          if (this._odataService.options.caseType === CaseType.pascalCase) {\r\n            fieldName = titleCase(fieldName || '');\r\n          }\r\n\r\n          if (fieldType === FieldType.date) {\r\n            searchBy = this.filterBySearchDate(fieldName, operator, searchTerms, odataVersion);\r\n          } else if (searchTerms && searchTerms.length > 1 && (operator === 'IN' || operator === 'NIN' || operator === 'NOTIN' || operator === 'NOT IN' || operator === 'NOT_IN')) {\r\n            // when having more than 1 search term (then check if we have a \"IN\" or \"NOT IN\" filter search)\r\n            const tmpSearchTerms = [];\r\n\r\n            if (operator === 'IN') {\r\n              // example:: (Stage eq \"Expired\" or Stage eq \"Renewal\")\r\n              for (let j = 0, lnj = searchTerms.length; j < lnj; j++) {\r\n                if (fieldType === FieldType.string || fieldType === FieldType.text || fieldType === FieldType.readonly) {\r\n                  const searchVal = encodeURIComponent(searchTerms[j].replace(`'`, `''`));\r\n                  tmpSearchTerms.push(`${fieldName} eq '${searchVal}'`);\r\n                } else {\r\n                  // Single quote escape is not needed for non string type\r\n                  tmpSearchTerms.push(`${fieldName} eq ${searchTerms[j]}`);\r\n                }\r\n              }\r\n              searchBy = tmpSearchTerms.join(' or ');\r\n              if (!(typeof searchBy === 'string' && searchBy[0] === '(' && searchBy.slice(-1) === ')')) {\r\n                searchBy = `(${searchBy})`;\r\n              }\r\n            } else {\r\n              // example:: (Stage ne \"Expired\" and Stage ne \"Renewal\")\r\n              for (let k = 0, lnk = searchTerms.length; k < lnk; k++) {\r\n                const searchVal = encodeURIComponent(searchTerms[k].replace(`'`, `''`));\r\n                tmpSearchTerms.push(`${fieldName} ne '${searchVal}'`);\r\n              }\r\n              searchBy = tmpSearchTerms.join(' and ');\r\n              if (!(typeof searchBy === 'string' && searchBy[0] === '(' && searchBy.slice(-1) === ')')) {\r\n                searchBy = `(${searchBy})`;\r\n              }\r\n            }\r\n          } else if (operator === '*' || operator === 'a*' || operator === '*z' || lastValueChar === '*' || operator === OperatorType.startsWith || operator === OperatorType.endsWith) {\r\n            // first/last character is a '*' will be a startsWith or endsWith\r\n            searchBy = (operator === '*' || operator === '*z' || operator === OperatorType.endsWith) ? `endswith(${fieldName}, '${searchValue}')` : `startswith(${fieldName}, '${searchValue}')`;\r\n          } else if (fieldType === FieldType.string || fieldType === FieldType.text || fieldType === FieldType.readonly) {\r\n            // string field needs to be in single quotes\r\n            if (operator === '' || operator === OperatorType.contains || operator === OperatorType.notContains) {\r\n              searchBy = this.odataQueryVersionWrapper('substring', odataVersion, fieldName, searchValue);\r\n              if (operator === OperatorType.notContains) {\r\n                searchBy = `not ${searchBy}`;\r\n              }\r\n            } else if (operator === OperatorType.rangeExclusive || operator === OperatorType.rangeInclusive) {\r\n              // example:: (Duration >= 5 and Duration <= 10)\r\n              searchBy = this.filterBySearchTermRange(fieldName, operator, searchTerms);\r\n            } else {\r\n              searchBy = `${fieldName} ${this.mapOdataOperator(operator)} '${searchValue}'`;\r\n            }\r\n          } else {\r\n            if (operator === OperatorType.rangeExclusive || operator === OperatorType.rangeInclusive) {\r\n              // example:: (Duration >= 5 and Duration <= 10)\r\n              searchBy = this.filterBySearchTermRange(fieldName, operator, searchTerms);\r\n            } else {\r\n              // any other field type (or undefined type)\r\n              searchValue = (fieldType === FieldType.number || fieldType === FieldType.boolean) ? searchValue : `'${searchValue}'`;\r\n              searchBy = `${fieldName} ${this.mapOdataOperator(operator)} ${searchValue}`;\r\n            }\r\n          }\r\n\r\n          // push to our temp array and also trim white spaces\r\n          if (searchBy !== '') {\r\n            searchByArray.push(searchBy.trim());\r\n            this.saveColumnFilter(fieldName || '', fieldSearchValue, searchValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // update the service options with filters for the buildQuery() to work later\r\n    this._odataService.updateOptions({\r\n      filter: (searchByArray.length > 0) ? searchByArray.join(' and ') : '',\r\n      skip: undefined\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the pagination component with it's new page number and size\r\n   * @param newPage\r\n   * @param pageSize\r\n   */\r\n  updatePagination(newPage: number, pageSize: number) {\r\n    this._currentPagination = {\r\n      pageNumber: newPage,\r\n      pageSize,\r\n    };\r\n\r\n    // unless user specifically set \"enablePagination\" to False, we'll update pagination options in every other cases\r\n    if (this._gridOptions && (this._gridOptions.enablePagination || !this._gridOptions.hasOwnProperty('enablePagination'))) {\r\n      this._odataService.updateOptions({\r\n        top: pageSize,\r\n        skip: (newPage - 1) * pageSize\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * loop through all columns to inspect sorters & update backend service orderBy\r\n   * @param columnFilters\r\n   */\r\n  updateSorters(sortColumns?: ColumnSort[], presetSorters?: CurrentSorter[]) {\r\n    let currentSorters: CurrentSorter[] = [];\r\n    const odataSorters: OdataSortingOption[] = [];\r\n\r\n    if (!sortColumns && presetSorters) {\r\n      // make the presets the current sorters, also make sure that all direction are in lowercase for OData\r\n      currentSorters = presetSorters;\r\n      currentSorters.forEach((sorter) => sorter.direction = sorter.direction.toLowerCase() as SortDirectionString);\r\n\r\n      // display the correct sorting icons on the UI, for that it requires (columnId, sortAsc) properties\r\n      const tmpSorterArray = currentSorters.map((sorter) => {\r\n        const columnDef = this._columnDefinitions.find((column: Column) => column.id === sorter.columnId);\r\n\r\n        odataSorters.push({\r\n          field: columnDef ? ((columnDef.queryFieldSorter || columnDef.queryField || columnDef.field) + '') : (sorter.columnId + ''),\r\n          direction: sorter.direction\r\n        });\r\n\r\n        // return only the column(s) found in the Column Definitions ELSE null\r\n        if (columnDef) {\r\n          return {\r\n            columnId: sorter.columnId,\r\n            sortAsc: sorter.direction.toUpperCase() === SortDirection.ASC\r\n          };\r\n        }\r\n        return null;\r\n      });\r\n\r\n      // set the sort icons, but also make sure to filter out null values (that happens when columnDef is not found)\r\n      if (Array.isArray(tmpSorterArray)) {\r\n        this._grid.setSortColumns(tmpSorterArray);\r\n      }\r\n    } else if (sortColumns && !presetSorters) {\r\n      // build the SortBy string, it could be multisort, example: customerNo asc, purchaserName desc\r\n      if (sortColumns && sortColumns.length === 0) {\r\n        // TODO fix this line\r\n        // currentSorters = new Array(this.defaultOptions.orderBy); // when empty, use the default sort\r\n      } else {\r\n        if (sortColumns) {\r\n          for (const columnDef of sortColumns) {\r\n            if (columnDef.sortCol) {\r\n              let fieldName = (columnDef.sortCol.queryFieldSorter || columnDef.sortCol.queryField || columnDef.sortCol.field) + '';\r\n              let columnFieldName = (columnDef.sortCol.field || columnDef.sortCol.id) + '';\r\n              let queryField = (columnDef.sortCol.queryFieldSorter || columnDef.sortCol.queryField || columnDef.sortCol.field || '') + '';\r\n              if (this._odataService.options.caseType === CaseType.pascalCase) {\r\n                fieldName = titleCase(fieldName);\r\n                columnFieldName = titleCase(columnFieldName);\r\n                queryField = titleCase(queryField);\r\n              }\r\n\r\n              if (columnFieldName !== '') {\r\n                currentSorters.push({\r\n                  columnId: columnFieldName,\r\n                  direction: columnDef.sortAsc ? 'asc' : 'desc'\r\n                });\r\n              }\r\n\r\n              if (queryField !== '') {\r\n                odataSorters.push({\r\n                  field: queryField,\r\n                  direction: columnDef.sortAsc ? SortDirection.ASC : SortDirection.DESC\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // transform the sortby array into a CSV string for OData\r\n    currentSorters = currentSorters || [] as CurrentSorter[];\r\n    const csvString = odataSorters.map((sorter) => {\r\n      let str = '';\r\n      if (sorter && sorter.field) {\r\n        const sortField = (this._odataService.options.caseType === CaseType.pascalCase) ? titleCase(sorter.field) : sorter.field;\r\n        str = `${sortField} ${sorter && sorter.direction && sorter.direction.toLowerCase() || ''}`;\r\n      }\r\n      return str;\r\n    }).join(',');\r\n\r\n    this._odataService.updateOptions({\r\n      orderBy: csvString\r\n    });\r\n\r\n    // keep current Sorters and update the service options with the new sorting\r\n    this._currentSorters = currentSorters;\r\n\r\n    // build the OData query which we will use in the WebAPI callback\r\n    return this._odataService.buildQuery();\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // -------------------\r\n  /**\r\n   * Cast provided filters (could be in multiple format) into an array of ColumnFilter\r\n   * @param columnFilters\r\n   */\r\n  private castFilterToColumnFilters(columnFilters: ColumnFilters | CurrentFilter[]): CurrentFilter[] {\r\n    // keep current filters & always save it as an array (columnFilters can be an object when it is dealt by SlickGrid Filter)\r\n    const filtersArray: ColumnFilter[] = (typeof columnFilters === 'object') ? Object.keys(columnFilters).map(key => columnFilters[key]) : columnFilters;\r\n\r\n    if (!Array.isArray(filtersArray)) {\r\n      return [];\r\n    }\r\n\r\n    return filtersArray.map((filter) => {\r\n      const tmpFilter: CurrentFilter = { columnId: filter.columnId || '' };\r\n      if (filter.operator) {\r\n        tmpFilter.operator = filter.operator;\r\n      }\r\n      if (Array.isArray(filter.searchTerms)) {\r\n        tmpFilter.searchTerms = filter.searchTerms;\r\n      }\r\n      return tmpFilter;\r\n    });\r\n  }\r\n\r\n  private odataQueryVersionWrapper(queryType: 'dateTime' | 'substring', version: number, fieldName: string, searchValue = ''): string {\r\n    let query = '';\r\n    switch (queryType) {\r\n      case 'dateTime':\r\n        query = version >= 4 ? searchValue : `DateTime'${searchValue}'`;\r\n        break;\r\n      case 'substring':\r\n        query = version >= 4 ? `contains(${fieldName}, '${searchValue}')` : `substringof('${searchValue}', ${fieldName})`;\r\n        break;\r\n    }\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Filter by a search date, the searchTerms might be a single value or range of dates (2 searchTerms OR 1 string separated by 2 dots \"date1..date2\")\r\n   * Also depending on the OData version number, the output will be different, previous version must wrap dates with DateTime\r\n   * - version 2-3:: Finish gt DateTime'2019-08-12T00:00:00Z'\r\n   * - version 4:: Finish gt 2019-08-12T00:00:00Z\r\n   */\r\n  private filterBySearchDate(fieldName: string, operator: OperatorType | OperatorString, searchTerms: SearchTerm[], version: number): string {\r\n    let query = '';\r\n    let searchValues: SearchTerm[] = [];\r\n    if (Array.isArray(searchTerms) && searchTerms.length > 1) {\r\n      searchValues = searchTerms;\r\n      if (operator !== OperatorType.rangeExclusive && operator !== OperatorType.rangeInclusive && this._gridOptions.defaultFilterRangeOperator) {\r\n        operator = this._gridOptions.defaultFilterRangeOperator;\r\n      }\r\n    }\r\n\r\n    // single search value\r\n    if (searchValues.length === 0 && Array.isArray(searchTerms) && searchTerms.length === 1 && searchTerms[0]) {\r\n      const searchValue1 = this.odataQueryVersionWrapper('dateTime', version, fieldName, parseUtcDate(searchTerms[0] as string, true));\r\n      if (searchValue1) {\r\n        return `${fieldName} ${this.mapOdataOperator(operator)} ${searchValue1}`;\r\n      }\r\n    }\r\n\r\n    // multiple search value (date range)\r\n    if (Array.isArray(searchValues) && searchValues.length === 2 && searchValues[0] && searchValues[1]) {\r\n      // date field needs to be UTC and within DateTime function\r\n      const searchValue1 = this.odataQueryVersionWrapper('dateTime', version, fieldName, parseUtcDate(searchValues[0] as string, true));\r\n      const searchValue2 = this.odataQueryVersionWrapper('dateTime', version, fieldName, parseUtcDate(searchValues[1] as string, true));\r\n\r\n      if (searchValue1 && searchValue2) {\r\n        if (operator === OperatorType.rangeInclusive) {\r\n          // example:: (Finish >= DateTime'2019-08-11T00:00:00Z' and Finish <= DateTime'2019-09-12T00:00:00Z')\r\n          query = `(${fieldName} ge ${searchValue1} and ${fieldName} le ${searchValue2})`;\r\n        } else if (operator === OperatorType.rangeExclusive) {\r\n          // example:: (Finish > DateTime'2019-08-11T00:00:00Z' and Finish < DateTime'2019-09-12T00:00:00Z')\r\n          query = `(${fieldName} gt ${searchValue1} and ${fieldName} lt ${searchValue2})`;\r\n        }\r\n      }\r\n    }\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Filter by a range of searchTerms (2 searchTerms OR 1 string separated by 2 dots \"value1..value2\")\r\n   */\r\n  private filterBySearchTermRange(fieldName: string, operator: OperatorType | OperatorString, searchTerms: SearchTerm[]) {\r\n    let query = '';\r\n\r\n    if (Array.isArray(searchTerms) && searchTerms.length === 2) {\r\n      if (operator === OperatorType.rangeInclusive) {\r\n        // example:: (Duration >= 5 and Duration <= 10)\r\n        query = `(${fieldName} ge ${searchTerms[0]} and ${fieldName} le ${searchTerms[1]})`;\r\n      } else if (operator === OperatorType.rangeExclusive) {\r\n        // example:: (Duration > 5 and Duration < 10)\r\n        query = `(${fieldName} gt ${searchTerms[0]} and ${fieldName} lt ${searchTerms[1]})`;\r\n      }\r\n    }\r\n    return query;\r\n  }\r\n}\r\n","import * as isequal_ from 'lodash.isequal';\r\nconst isequal = isequal_; // patch to fix rollup to work\r\n\r\nimport {\r\n  Column,\r\n  CurrentColumn,\r\n  CurrentFilter,\r\n  CurrentPagination,\r\n  CurrentRowSelection,\r\n  CurrentSorter,\r\n  ExtensionName,\r\n  GridOption,\r\n  GridState,\r\n  GridStateChange,\r\n  GridStateType,\r\n  SlickEventHandler,\r\n} from './../models/index';\r\nimport { ExtensionService } from './extension.service';\r\nimport { FilterService } from './filter.service';\r\nimport { SortService } from './sort.service';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { unsubscribeAllObservables } from './utilities';\r\nimport { SharedService } from './shared.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class GridStateService {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _columns: Column[] = [];\r\n  private _currentColumns: CurrentColumn[] = [];\r\n  private _dataView: any;\r\n  private _grid: any;\r\n  private _subscriptions: Subscription[] = [];\r\n  private _selectedRowDataContextIds: Array<number | string> | undefined = []; // used with row selection\r\n  private _selectedFilteredRowDataContextIds: Array<number | string> | undefined = []; // used with row selection\r\n  private _wasRecheckedAfterPageChange = true; // used with row selection & pagination\r\n  onGridStateChanged = new Subject<GridStateChange>();\r\n\r\n  constructor(\r\n    private extensionService: ExtensionService,\r\n    private filterService: FilterService,\r\n    private sharedService: SharedService,\r\n    private sortService: SortService\r\n  ) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  private get datasetIdPropName(): string {\r\n    return this._gridOptions.datasetIdPropertyName || 'id';\r\n  }\r\n\r\n  /** Getter of the selected data context object IDs */\r\n  get selectedRowDataContextIds(): Array<number | string> | undefined {\r\n    return this._selectedRowDataContextIds;\r\n  }\r\n\r\n  /** Setter of the selected data context object IDs */\r\n  set selectedRowDataContextIds(dataContextIds: Array<number | string> | undefined) {\r\n    this._selectedRowDataContextIds = dataContextIds;\r\n\r\n    // since this is coming from a preset, we also need to update the filtered IDs\r\n    this._selectedFilteredRowDataContextIds = dataContextIds;\r\n  }\r\n\r\n  /**\r\n   * Initialize the Grid State Service\r\n   * @param grid\r\n   */\r\n  init(grid: any, dataView: any): void {\r\n    this._grid = grid;\r\n    this._dataView = dataView;\r\n    this.subscribeToAllGridChanges(grid);\r\n  }\r\n\r\n  /** Dispose of all the SlickGrid & Angular subscriptions */\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    // also unsubscribe all Angular Subscriptions\r\n    this._subscriptions = unsubscribeAllObservables(this._subscriptions);\r\n\r\n    this._currentColumns = [];\r\n    this._columns = [];\r\n  }\r\n\r\n  /**\r\n   * Get the current grid state (filters/sorters/pagination)\r\n   * @return grid state\r\n   */\r\n  getCurrentGridState(args?: { requestRefreshRowFilteredRow?: boolean }): GridState {\r\n    const gridState: GridState = {\r\n      columns: this.getCurrentColumns(),\r\n      filters: this.getCurrentFilters(),\r\n      sorters: this.getCurrentSorters(),\r\n    };\r\n\r\n    const currentPagination = this.getCurrentPagination();\r\n    if (currentPagination) {\r\n      gridState.pagination = currentPagination;\r\n    }\r\n\r\n    if (this.hasRowSelectionEnabled()) {\r\n      const currentRowSelection = this.getCurrentRowSelections(args && args.requestRefreshRowFilteredRow);\r\n      if (currentRowSelection) {\r\n        gridState.rowSelection = currentRowSelection;\r\n      }\r\n    }\r\n    return gridState;\r\n  }\r\n\r\n  /**\r\n   * Get the Columns (and their state: visibility/position) that are currently applied in the grid\r\n   * @return current columns\r\n   */\r\n  getColumns(): Column[] {\r\n    return this._columns;\r\n  }\r\n\r\n  /**\r\n   * From an array of Grid Column Definitions, get the associated Current Columns\r\n   * @param gridColumns\r\n   */\r\n  getAssociatedCurrentColumns(gridColumns: Column[]): CurrentColumn[] {\r\n    const currentColumns: CurrentColumn[] = [];\r\n\r\n    if (gridColumns && Array.isArray(gridColumns)) {\r\n      gridColumns.forEach((column: Column, index: number) => {\r\n        if (column && column.id) {\r\n          currentColumns.push({\r\n            columnId: column.id as string,\r\n            cssClass: column.cssClass || '',\r\n            headerCssClass: column.headerCssClass || '',\r\n            width: column.width || 0\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this._currentColumns = currentColumns;\r\n    return currentColumns;\r\n  }\r\n\r\n  /**\r\n   * From an array of Current Columns, get the associated Grid Column Definitions\r\n   * @param grid\r\n   * @param currentColumns\r\n   */\r\n  getAssociatedGridColumns(grid: any, currentColumns: CurrentColumn[]): Column[] {\r\n    const columns: Column[] = [];\r\n    const gridColumns: Column[] = grid.getColumns();\r\n\r\n    if (currentColumns && Array.isArray(currentColumns)) {\r\n      currentColumns.forEach((currentColumn: CurrentColumn, index: number) => {\r\n        const gridColumn: Column = gridColumns.find((c: Column) => c.id === currentColumn.columnId);\r\n        if (gridColumn && gridColumn.id) {\r\n          columns.push({\r\n            ...gridColumn,\r\n            cssClass: currentColumn.cssClass,\r\n            headerCssClass: currentColumn.headerCssClass,\r\n            width: currentColumn.width\r\n          });\r\n        }\r\n      });\r\n    }\r\n    this._columns = columns;\r\n    return columns;\r\n  }\r\n\r\n  /**\r\n   * Get the Columns (and their states: visibility/position/width) that are currently applied in the grid\r\n   * @return current columns\r\n   */\r\n  getCurrentColumns(): CurrentColumn[] {\r\n    let currentColumns: CurrentColumn[] = [];\r\n    if (this._currentColumns && Array.isArray(this._currentColumns) && this._currentColumns.length > 0) {\r\n      currentColumns = this._currentColumns;\r\n    } else {\r\n      currentColumns = this.getAssociatedCurrentColumns(this._grid.getColumns());\r\n    }\r\n\r\n    return currentColumns;\r\n  }\r\n\r\n  /**\r\n   * Get the Filters (and their state, columnId, searchTerm(s)) that are currently applied in the grid\r\n   * @return current filters\r\n   */\r\n  getCurrentFilters(): CurrentFilter[] | null {\r\n    if (this._gridOptions && this._gridOptions.backendServiceApi) {\r\n      const backendService = this._gridOptions.backendServiceApi.service;\r\n      if (backendService && backendService.getCurrentFilters) {\r\n        return backendService.getCurrentFilters() as CurrentFilter[];\r\n      }\r\n    } else if (this.filterService && this.filterService.getCurrentLocalFilters) {\r\n      return this.filterService.getCurrentLocalFilters();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get current Pagination (and its state, pageNumber, pageSize) that are currently applied in the grid\r\n   * @return current pagination state\r\n   */\r\n  getCurrentPagination(): CurrentPagination | null {\r\n    if (this._gridOptions.enablePagination) {\r\n      if (this._gridOptions && this._gridOptions.backendServiceApi) {\r\n        const backendService = this._gridOptions.backendServiceApi.service;\r\n        if (backendService && backendService.getCurrentPagination) {\r\n          return backendService.getCurrentPagination();\r\n        }\r\n      } else {\r\n        return this.sharedService.currentPagination;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the current Row Selections (and its state, gridRowIndexes, dataContextIds, filteredDataContextIds) that are currently applied in the grid\r\n   * @return current row selection\r\n   */\r\n  getCurrentRowSelections(requestRefreshFilteredRow = true): CurrentRowSelection | null {\r\n    if (this._grid && this._gridOptions && this._dataView && this.hasRowSelectionEnabled()) {\r\n      if (this._grid.getSelectedRows && this._dataView.mapRowsToIds) {\r\n        let filteredDataContextIds: Array<number | string> | undefined = [];\r\n        const gridRowIndexes: number[] = this._dataView.mapIdsToRows(this._selectedRowDataContextIds || []); // note that this will return only what is visible in current page\r\n        const dataContextIds: Array<number | string> | undefined = this._selectedRowDataContextIds;\r\n\r\n        // user might request to refresh the filtered selection dataset\r\n        // typically always True, except when \"reEvaluateRowSelectionAfterFilterChange\" is called and we don't need to refresh the filtered dataset twice\r\n        if (requestRefreshFilteredRow === true) {\r\n          filteredDataContextIds = this.refreshFilteredRowSelections();\r\n        }\r\n        filteredDataContextIds = this._selectedFilteredRowDataContextIds;\r\n\r\n        return { gridRowIndexes, dataContextIds, filteredDataContextIds };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Get the current Sorters (and their state, columnId, direction) that are currently applied in the grid\r\n   * @return current sorters\r\n   */\r\n  getCurrentSorters(): CurrentSorter[] | null {\r\n    if (this._gridOptions && this._gridOptions.backendServiceApi) {\r\n      const backendService = this._gridOptions.backendServiceApi.service;\r\n      if (backendService && backendService.getCurrentSorters) {\r\n        return backendService.getCurrentSorters() as CurrentSorter[];\r\n      }\r\n    } else if (this.sortService && this.sortService.getCurrentLocalSorters) {\r\n      return this.sortService.getCurrentLocalSorters();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /** Check whether the row selection needs to be preserved */\r\n  needToPreserveRowSelection(): boolean {\r\n    let preservedRowSelection = false;\r\n    if (this._gridOptions && this._gridOptions.dataView && this._gridOptions.dataView.hasOwnProperty('syncGridSelection')) {\r\n      const syncGridSelection = this._gridOptions.dataView.syncGridSelection;\r\n      if (typeof syncGridSelection === 'boolean') {\r\n        preservedRowSelection = this._gridOptions.dataView.syncGridSelection as boolean;\r\n      } else {\r\n        preservedRowSelection = syncGridSelection.preserveHidden;\r\n      }\r\n\r\n      // if the result is True but the grid is using a Backend Service, we will do an extra flag check the reason is because it might have some unintended behaviors\r\n      // with the BackendServiceApi because technically the data in the page changes the DataView on every page.\r\n      if (preservedRowSelection && this._gridOptions.backendServiceApi && this._gridOptions.dataView.hasOwnProperty('syncGridSelectionWithBackendService')) {\r\n        preservedRowSelection = this._gridOptions.dataView.syncGridSelectionWithBackendService;\r\n      }\r\n    }\r\n    return preservedRowSelection;\r\n  }\r\n\r\n  resetColumns(columnDefinitions?: Column[]) {\r\n    const columns: Column[] = columnDefinitions || this._columns;\r\n    const currentColumns: CurrentColumn[] = this.getAssociatedCurrentColumns(columns);\r\n    this.onGridStateChanged.next({ change: { newValues: currentColumns, type: GridStateType.columns }, gridState: this.getCurrentGridState() });\r\n  }\r\n\r\n  /** if we use Row Selection or the Checkbox Selector, we need to reset any selection */\r\n  resetRowSelectionWhenRequired() {\r\n    if (!this.needToPreserveRowSelection() && (this._gridOptions.enableRowSelection || this._gridOptions.enableCheckboxSelector)) {\r\n      // this also requires the Row Selection Model to be registered as well\r\n      const rowSelectionExtension = this.extensionService && this.extensionService.getExtensionByName && this.extensionService.getExtensionByName(ExtensionName.rowSelection);\r\n      if (rowSelectionExtension && rowSelectionExtension.instance) {\r\n        this._grid.setSelectedRows([]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to all necessary SlickGrid or Service Events that deals with a Grid change,\r\n   * when triggered, we will publish a Grid State Event with current Grid State\r\n   */\r\n  subscribeToAllGridChanges(grid: any) {\r\n    // Subscribe to Event Emitter of Filter changed\r\n    this._subscriptions.push(\r\n      this.filterService.onFilterChanged.subscribe((currentFilters: CurrentFilter[]) => {\r\n        this.resetRowSelectionWhenRequired();\r\n\r\n        // trigger a Grid State filter change, however don't reevaluate the filtered row selections, we'll do that on the next Grid State change below\r\n        this.onGridStateChanged.next({ change: { newValues: currentFilters, type: GridStateType.filter }, gridState: this.getCurrentGridState({ requestRefreshRowFilteredRow: !this.hasRowSelectionEnabled() }) });\r\n\r\n        // when Row Selection is enabled, we also need to re-evaluate the row selection with the leftover filtered dataset\r\n        if (this.hasRowSelectionEnabled()) {\r\n          this.reEvaluateRowSelectionAfterFilterChange();\r\n        }\r\n      })\r\n    );\r\n\r\n    // Subscribe to Event Emitter of Filter cleared\r\n    this._subscriptions.push(\r\n      this.filterService.onFilterCleared.subscribe(() => {\r\n        this.resetRowSelectionWhenRequired();\r\n        this.onGridStateChanged.next({ change: { newValues: [], type: GridStateType.filter }, gridState: this.getCurrentGridState() });\r\n      })\r\n    );\r\n\r\n    // Subscribe to Event Emitter of Sort changed\r\n    this._subscriptions.push(\r\n      this.sortService.onSortChanged.subscribe((currentSorters: CurrentSorter[]) => {\r\n        this.resetRowSelectionWhenRequired();\r\n        this.onGridStateChanged.next({ change: { newValues: currentSorters, type: GridStateType.sorter }, gridState: this.getCurrentGridState() });\r\n      })\r\n    );\r\n\r\n    // Subscribe to Event Emitter of Sort cleared\r\n    this._subscriptions.push(\r\n      this.sortService.onSortCleared.subscribe(() => {\r\n        this.resetRowSelectionWhenRequired();\r\n        this.onGridStateChanged.next({ change: { newValues: [], type: GridStateType.sorter }, gridState: this.getCurrentGridState() });\r\n      })\r\n    );\r\n\r\n    // Subscribe to ColumnPicker and/or GridMenu for show/hide Columns visibility changes\r\n    this.bindExtensionAddonEventToGridStateChange(ExtensionName.columnPicker, 'onColumnsChanged');\r\n    this.bindExtensionAddonEventToGridStateChange(ExtensionName.gridMenu, 'onColumnsChanged');\r\n\r\n    // subscribe to Column Resize & Reordering\r\n    this.bindSlickGridColumnChangeEventToGridStateChange('onColumnsReordered', grid);\r\n    this.bindSlickGridColumnChangeEventToGridStateChange('onColumnsResized', grid);\r\n\r\n    // subscribe to Row Selection changes (when enabled)\r\n    if (this._gridOptions.enableRowSelection || this._gridOptions.enableCheckboxSelector) {\r\n      this.bindSlickGridRowSelectionToGridStateChange();\r\n    }\r\n\r\n    // subscribe to HeaderMenu (hide column)\r\n    this._subscriptions.push(\r\n      this.sharedService.onHeaderMenuHideColumns.subscribe((visibleColumns: Column[]) => {\r\n        const currentColumns: CurrentColumn[] = this.getAssociatedCurrentColumns(visibleColumns);\r\n        this.onGridStateChanged.next({ change: { newValues: currentColumns, type: GridStateType.columns }, gridState: this.getCurrentGridState() });\r\n      })\r\n    );\r\n  }\r\n\r\n  // --\r\n  // private methods\r\n  // ------------------\r\n\r\n  /**\r\n   * Bind a SlickGrid Extension Event to a Grid State change event\r\n   * @param extension name\r\n   * @param grid\r\n   */\r\n  private bindExtensionAddonEventToGridStateChange(extensionName: ExtensionName, eventName: string) {\r\n    const extension = this.extensionService && this.extensionService.getExtensionByName && this.extensionService.getExtensionByName(extensionName);\r\n    const slickEvent = extension && extension.instance && extension.instance[eventName];\r\n\r\n    if (slickEvent && slickEvent.subscribe) {\r\n      this._eventHandler.subscribe(slickEvent, (e: Event, args: any) => {\r\n        const columns: Column[] = args && args.columns;\r\n        const currentColumns: CurrentColumn[] = this.getAssociatedCurrentColumns(columns);\r\n        this.onGridStateChanged.next({ change: { newValues: currentColumns, type: GridStateType.columns }, gridState: this.getCurrentGridState() });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind a Grid Event (of Column changes) to a Grid State change event\r\n   * @param event name\r\n   * @param grid\r\n   */\r\n  private bindSlickGridColumnChangeEventToGridStateChange(eventName: string, grid: any) {\r\n    const slickGridEvent = grid && grid[eventName];\r\n\r\n    if (slickGridEvent && slickGridEvent.subscribe) {\r\n      this._eventHandler.subscribe(slickGridEvent, () => {\r\n        const columns: Column[] = grid.getColumns();\r\n        const currentColumns: CurrentColumn[] = this.getAssociatedCurrentColumns(columns);\r\n        this.onGridStateChanged.next({ change: { newValues: currentColumns, type: GridStateType.columns }, gridState: this.getCurrentGridState() });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind a Grid Event of Row Selection change to a Grid State change event\r\n   * For the row selection, we can't just use the getSelectedRows() since this will only return the visible rows shown in the UI which is not enough.\r\n   * The process is much more complex, what we have to do instead is the following\r\n   * 1. when changing a row selection, we'll add the new selection if it's not yet in the global array of selected IDs\r\n   * 2. when deleting a row selection, we'll remove the selection from our global array of selected IDs (unless it came from a page change)\r\n   * 3. if we use Pagination and we change page, we'll keep track with a flag (this flag will be used to skip any deletion when we're changing page)\r\n   * 4. after the Page or DataView is changed or updated, we'll do an extra (and delayed) check to make sure that what we have in our global array of selected IDs is displayed on screen\r\n   */\r\n  private bindSlickGridRowSelectionToGridStateChange() {\r\n    if (this._grid && this._gridOptions && this._dataView) {\r\n      this._eventHandler.subscribe(this._dataView.onBeforePagingInfoChanged, () => {\r\n        this._wasRecheckedAfterPageChange = false; // reset the page check flag, to skip deletions on page change (used in code below)\r\n      });\r\n\r\n      this._eventHandler.subscribe(this._dataView.onPagingInfoChanged, () => {\r\n        // when user changes page, the selected row indexes might not show up\r\n        // we can check to make sure it is but it has to be in a delay so it happens after the first \"onSelectedRowsChanged\" is triggered\r\n        setTimeout(() => {\r\n          const shouldBeSelectedRowIndexes = this._dataView.mapIdsToRows(this._selectedRowDataContextIds || []);\r\n          const currentSelectedRowIndexes = this._grid.getSelectedRows();\r\n          if (!isequal(shouldBeSelectedRowIndexes, currentSelectedRowIndexes)) {\r\n            this._grid.setSelectedRows(shouldBeSelectedRowIndexes);\r\n          }\r\n        });\r\n      });\r\n\r\n      this._eventHandler.subscribe(this._grid.onSelectedRowsChanged, (e, args) => {\r\n        if (Array.isArray(args.rows) && Array.isArray(args.previousSelectedRows)) {\r\n          const newSelectedRows = args.rows as number[];\r\n          const prevSelectedRows = args.previousSelectedRows as number[];\r\n\r\n          const newSelectedAdditions = newSelectedRows.filter((i) => prevSelectedRows.indexOf(i) < 0);\r\n          const newSelectedDeletions = prevSelectedRows.filter((i) => newSelectedRows.indexOf(i) < 0);\r\n\r\n          // deletion might happen when user is changing page, if that is the case then skip the deletion since it's only a visual deletion (current page)\r\n          // if it's not a page change (when the flag is true), then proceed with the deletion in our global array of selected IDs\r\n          if (this._wasRecheckedAfterPageChange && newSelectedDeletions.length > 0) {\r\n            const toDeleteDataIds: Array<number | string> | undefined = this._dataView.mapRowsToIds(newSelectedDeletions) || [];\r\n            toDeleteDataIds.forEach((removeId: number | string) => {\r\n              this._selectedRowDataContextIds.splice((this._selectedRowDataContextIds as Array<number | string> | undefined).indexOf(removeId), 1);\r\n            });\r\n          }\r\n\r\n          // if we have newly added selected row(s), let's update our global array of selected IDs\r\n          if (newSelectedAdditions.length > 0) {\r\n            const toAddDataIds: Array<number | string> | undefined = this._dataView.mapRowsToIds(newSelectedAdditions) || [];\r\n            toAddDataIds.forEach((dataId: number | string) => {\r\n              if ((this._selectedRowDataContextIds as Array<number | string> | undefined).indexOf(dataId) === -1) {\r\n                (this._selectedRowDataContextIds as Array<number | string> | undefined).push(dataId);\r\n              }\r\n            });\r\n          }\r\n\r\n          // we set this flag which will be used on the 2nd time the \"onSelectedRowsChanged\" event is called\r\n          // when it's the first time, we skip deletion and this is what this flag is for\r\n          this._wasRecheckedAfterPageChange = true;\r\n\r\n          // form our full selected row IDs, let's make sure these indexes are selected in the grid, if not then let's call a reselect\r\n          // this could happen if the previous step was a page change\r\n          const shouldBeSelectedRowIndexes = this._dataView.mapIdsToRows(this._selectedRowDataContextIds || []);\r\n          const currentSelectedRowIndexes = this._grid.getSelectedRows();\r\n          if (!isequal(shouldBeSelectedRowIndexes, currentSelectedRowIndexes)) {\r\n            this._grid.setSelectedRows(shouldBeSelectedRowIndexes);\r\n          }\r\n\r\n          const filteredDataContextIds = this.refreshFilteredRowSelections();\r\n          const newValues = { gridRowIndexes: this._grid.getSelectedRows(), dataContextIds: this._selectedRowDataContextIds, filteredDataContextIds } as CurrentRowSelection;\r\n          this.onGridStateChanged.next({ change: { newValues, type: GridStateType.rowSelection }, gridState: this.getCurrentGridState() });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Check wether the grid has the Row Selection enabled */\r\n  private hasRowSelectionEnabled() {\r\n    const selectionModel = this._grid.getSelectionModel();\r\n    const isRowSelectionEnabled = this._gridOptions.enableRowSelection || this._gridOptions.enableCheckboxSelector;\r\n    return (isRowSelectionEnabled && selectionModel);\r\n  }\r\n\r\n  private reEvaluateRowSelectionAfterFilterChange() {\r\n    const currentSelectedRowIndexes = this._grid.getSelectedRows();\r\n    const previousSelectedFilteredRowDataContextIds = this._selectedFilteredRowDataContextIds.slice();\r\n    const filteredDataContextIds = this.refreshFilteredRowSelections();\r\n\r\n    // when selection changed, we'll send a Grid State event with the selection changes\r\n    if (!isequal(this._selectedFilteredRowDataContextIds, previousSelectedFilteredRowDataContextIds)) {\r\n      const newValues = { gridRowIndexes: currentSelectedRowIndexes, dataContextIds: this._selectedRowDataContextIds, filteredDataContextIds } as CurrentRowSelection;\r\n      this.onGridStateChanged.next({ change: { newValues, type: GridStateType.rowSelection }, gridState: this.getCurrentGridState({ requestRefreshRowFilteredRow: false }) });\r\n    }\r\n  }\r\n\r\n  /** When a Filter is triggered or when user request it, we will refresh the filtered selection array and return it */\r\n  private refreshFilteredRowSelections(): Array<number | string> | undefined {\r\n    let tmpFilteredArray = [];\r\n    const filteredDataset = this._dataView.getFilteredItems() || [];\r\n    if (Array.isArray(this._selectedRowDataContextIds)) {\r\n      const selectedFilteredRowDataContextIds = [...this._selectedRowDataContextIds]; // take a fresh copy of all selections before filtering the row ids\r\n      tmpFilteredArray = selectedFilteredRowDataContextIds.filter((selectedRowId: number | string) => {\r\n        return filteredDataset.findIndex((item: any) => item[this.datasetIdPropName] === selectedRowId) > -1;\r\n      });\r\n      this._selectedFilteredRowDataContextIds = tmpFilteredArray;\r\n    }\r\n    return tmpFilteredArray;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n  CellArgs,\r\n  Column,\r\n  GridOption,\r\n  GridServiceDeleteOption,\r\n  GridServiceInsertOption,\r\n  GridServiceUpdateOption,\r\n  HideColumnOption,\r\n  OnEventArgs\r\n} from './../models/index';\r\nimport { ExtensionService } from './extension.service';\r\nimport { FilterService } from './filter.service';\r\nimport { GridStateService } from './gridState.service';\r\nimport { SharedService } from './shared.service';\r\nimport { SortService } from './sort.service';\r\nimport { arrayRemoveItemByIndex } from './utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\nlet highlightTimerEnd: any;\r\n\r\nconst GridServiceDeleteOptionDefaults: GridServiceDeleteOption = { triggerEvent: true };\r\nconst GridServiceInsertOptionDefaults: GridServiceInsertOption = { highlightRow: true, position: 'top', resortGrid: false, selectRow: false, triggerEvent: true };\r\nconst GridServiceUpdateOptionDefaults: GridServiceUpdateOption = { highlightRow: true, selectRow: false, scrollRowIntoView: false, triggerEvent: true };\r\nconst HideColumnOptionDefaults: HideColumnOption = { autoResizeColumns: true, triggerEvent: true, hideFromColumnPicker: false, hideFromGridMenu: false };\r\n\r\n@Injectable()\r\nexport class GridService {\r\n  private _grid: any;\r\n  private _dataView: any;\r\n  private _rowSelectionPlugin: any;\r\n  onItemAdded = new Subject<any | any[]>();\r\n  onItemDeleted = new Subject<any | any[]>();\r\n  onItemUpdated = new Subject<any | any[]>();\r\n  onItemUpserted = new Subject<any | any[]>();\r\n  onColumnsChanged = new Subject<Column[]>();\r\n\r\n  constructor(\r\n    private extensionService: ExtensionService,\r\n    private filterService: FilterService,\r\n    private gridStateService: GridStateService,\r\n    private sharedService: SharedService,\r\n    private sortService: SortService\r\n  ) { }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  dispose() {\r\n    if (this._rowSelectionPlugin && this._rowSelectionPlugin.destroy) {\r\n      this._rowSelectionPlugin.destroy();\r\n    }\r\n  }\r\n\r\n  init(grid: any, dataView: any): void {\r\n    this._grid = grid;\r\n    this._dataView = dataView;\r\n  }\r\n\r\n  /** Clear all Filters & Sorts */\r\n  clearAllFiltersAndSorts() {\r\n    // call both clear Filters & Sort but only trigger the last one to avoid sending multiple backend queries\r\n    if (this.sortService && this.sortService.clearSorting) {\r\n      this.sortService.clearSorting(false); // skip event trigger on this one\r\n    }\r\n    if (this.filterService && this.filterService.clearFilters) {\r\n      this.filterService.clearFilters();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all column set in the grid, that is all visible/hidden columns\r\n   * and also include any extra columns used by some plugins (like Row Selection, Row Detail, ...)\r\n   */\r\n  getAllColumnDefinitions() {\r\n    return this.sharedService.allColumns;\r\n  }\r\n\r\n  /** Get only visible column definitions and also include any extra columns by some plugins (like Row Selection, Row Detail, ...) */\r\n  getVisibleColumnDefinitions(): Column[] {\r\n    return this.sharedService.visibleColumns;\r\n  }\r\n\r\n  /**\r\n   * From a SlickGrid Event triggered get the Column Definition and Item Data Context\r\n   *\r\n   * For example the SlickGrid onClick will return cell arguments when subscribing to it.\r\n   * From these cellArgs, we want to get the Column Definition and Item Data\r\n   * @param cell event args\r\n   * @return object with columnDef and dataContext\r\n   */\r\n  getColumnFromEventArguments(args: CellArgs): OnEventArgs {\r\n    if (!args || !args.grid || !args.grid.getColumns || !args.grid.getDataItem) {\r\n      throw new Error('To get the column definition and data, we need to have these arguments passed as objects (row, cell, grid)');\r\n    }\r\n\r\n    return {\r\n      row: args.row,\r\n      cell: args.cell,\r\n      columnDef: args.grid.getColumns()[args.cell],\r\n      dataContext: args.grid.getDataItem(args.row),\r\n      dataView: this._dataView,\r\n      grid: this._grid\r\n    };\r\n  }\r\n\r\n  /** Get data item by it's row index number */\r\n  getDataItemByRowNumber<T = any>(rowNumber: number): T {\r\n    if (!this._grid || typeof this._grid.getDataItem !== 'function') {\r\n      throw new Error(`We could not find SlickGrid Grid object or it's \"getDataItem\" method`);\r\n    }\r\n    return this._grid.getDataItem(rowNumber);\r\n  }\r\n\r\n  /** Chain the item Metadata with our implementation of Metadata at given row index */\r\n  getItemRowMetadataToHighlight(previousItemMetadata: any) {\r\n    return (rowNumber: number) => {\r\n      const item = this._dataView.getItem(rowNumber);\r\n      let meta = { cssClasses: '' };\r\n      if (typeof previousItemMetadata === 'function') {\r\n        meta = previousItemMetadata(rowNumber);\r\n      }\r\n\r\n      if (!meta) {\r\n        meta = { cssClasses: '' };\r\n      }\r\n\r\n      if (item && item._dirty) {\r\n        meta.cssClasses = (meta && meta.cssClasses || '') + ' dirty';\r\n      }\r\n\r\n      if (item && item.rowClass && meta) {\r\n        meta.cssClasses += ` ${item.rowClass}`;\r\n        meta.cssClasses += ` row${rowNumber}`;\r\n      }\r\n\r\n      return meta;\r\n    };\r\n  }\r\n\r\n  /**\r\n     * @deprecated Hide a Column from the Grid (the column will just become hidden and will still show up in columnPicker/gridMenu)\r\n     * @see hideColumnById\r\n     * @param column\r\n     */\r\n  hideColumn(column: Column) {\r\n    if (this._grid && this._grid.getColumns && this._grid.setColumns && this._grid.getColumnIndex) {\r\n      const columnIndex = this._grid.getColumnIndex(column.id);\r\n      if (columnIndex >= 0) {\r\n        this.hideColumnByIndex(columnIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @deprecated Hide a Column from the Grid by its column definition index (the column will just become hidden and will still show up in columnPicker/gridMenu)\r\n   * @see hideColumnById Please use \"hideColumnById(id)\" or \"hideColumnByIds([ids])\" instead since it has a lot more options\r\n   * @param columnIndex - column definition index\r\n   * @param triggerEvent - do we want to trigger an event (onHeaderMenuColumnsChanged) when column becomes hidden? Defaults to true.\r\n   */\r\n  hideColumnByIndex(columnIndex: number, triggerEvent = true) {\r\n    if (this._grid && this._grid.getColumns && this._grid.setColumns) {\r\n      const currentColumns = this._grid.getColumns();\r\n      const visibleColumns = arrayRemoveItemByIndex<Column>(currentColumns, columnIndex);\r\n      this.sharedService.visibleColumns = visibleColumns;\r\n      this._grid.setColumns(visibleColumns);\r\n      if (triggerEvent) {\r\n        this.onColumnsChanged.next(visibleColumns);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide a Column from the Grid by its column definition id, the column will just become hidden and will still show up in columnPicker/gridMenu\r\n   * @param {string | number} columnId - column definition id\r\n   * @param {boolean} triggerEvent - do we want to trigger an event (onHeaderMenuColumnsChanged) when column becomes hidden? Defaults to true.\r\n   * @return {number} columnIndex - column index position when found or -1\r\n   */\r\n  hideColumnById(columnId: string | number, options?: HideColumnOption): number {\r\n    options = { ...HideColumnOptionDefaults, ...options };\r\n    if (this._grid && this._grid.getColumns && this._grid.setColumns) {\r\n      const currentColumns = this._grid.getColumns();\r\n      const colIndexFound = currentColumns.findIndex(col => col.id === columnId);\r\n\r\n      if (colIndexFound >= 0) {\r\n        const visibleColumns = arrayRemoveItemByIndex<Column>(currentColumns, colIndexFound);\r\n        this.sharedService.visibleColumns = visibleColumns;\r\n        this._grid.setColumns(visibleColumns);\r\n\r\n        const columnIndexFromAllColumns = this.sharedService.allColumns.findIndex(col => col.id === columnId);\r\n        if (columnIndexFromAllColumns) {\r\n          if (options && options.hideFromColumnPicker) {\r\n            this.sharedService.allColumns[columnIndexFromAllColumns].excludeFromColumnPicker = true;\r\n          }\r\n          if (options && options.hideFromGridMenu) {\r\n            this.sharedService.allColumns[columnIndexFromAllColumns].excludeFromGridMenu = true;\r\n          }\r\n        }\r\n\r\n        // do we want to auto-resize the columns in the grid after hidding some? most often yes\r\n        if (options && options.autoResizeColumns) {\r\n          this._grid.autosizeColumns();\r\n        }\r\n\r\n        // do we want to trigger an event after hidding\r\n        if (options && options.triggerEvent) {\r\n          this.onColumnsChanged.next(visibleColumns);\r\n        }\r\n        return colIndexFound;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Hide a Column from the Grid by its column definition id(s), the column will just become hidden and will still show up in columnPicker/gridMenu\r\n   * @param {Array<string | number>} columnIds - column definition ids, can be a single string and an array of strings\r\n   * @param {boolean} triggerEvent - do we want to trigger an event (onHeaderMenuColumnsChanged) when column becomes hidden? Defaults to true.\r\n   */\r\n  hideColumnByIds(columnIds: Array<string | number>, options?: HideColumnOption) {\r\n    options = { ...HideColumnOptionDefaults, ...options };\r\n    if (Array.isArray(columnIds)) {\r\n      for (const columnId of columnIds) {\r\n        // hide each column by its id but wait after the for loop to auto resize columns in the grid\r\n        this.hideColumnById(columnId, { ...options, triggerEvent: false, autoResizeColumns: false });\r\n      }\r\n      // do we want to auto-resize the columns in the grid after hidding some? most often yes\r\n      if (options && options.autoResizeColumns) {\r\n        this._grid.autosizeColumns();\r\n      }\r\n      // do we want to trigger an event after hidding\r\n      if (options && options.triggerEvent) {\r\n        this.onColumnsChanged.next(this.sharedService.visibleColumns);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Highlight then fade a row for x seconds.\r\n   * The implementation follows this SO answer: https://stackoverflow.com/a/19985148/1212166\r\n   * @param rowNumber\r\n   * @param fadeDelay\r\n   */\r\n  highlightRow(rowNumber: number | number[], fadeDelay = 1500, fadeOutDelay = 300) {\r\n    // create a SelectionModel if there's not one yet\r\n    if (!this._grid.getSelectionModel() && Slick && Slick.RowSelectionModel) {\r\n      this._rowSelectionPlugin = new Slick.RowSelectionModel(this._gridOptions.rowSelectionOptions || {});\r\n      this._grid.setSelectionModel(this._rowSelectionPlugin);\r\n    }\r\n\r\n    if (Array.isArray(rowNumber)) {\r\n      rowNumber.forEach(row => this.highlightRowByMetadata(row, fadeDelay, fadeOutDelay));\r\n    } else {\r\n      this.highlightRowByMetadata(rowNumber, fadeDelay, fadeOutDelay);\r\n    }\r\n  }\r\n\r\n  highlightRowByMetadata(rowNumber: number, fadeDelay = 1500, fadeOutDelay = 300) {\r\n    this._dataView.getItemMetadata = this.getItemRowMetadataToHighlight(this._dataView.getItemMetadata);\r\n\r\n    const item = this._dataView.getItem(rowNumber);\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n    if (item && item[idPropName]) {\r\n      item.rowClass = 'highlight';\r\n      this._dataView.updateItem(item[idPropName], item);\r\n      this.renderGrid();\r\n\r\n      // fade out\r\n      clearTimeout(highlightTimerEnd);\r\n      highlightTimerEnd = setTimeout(() => {\r\n        item.rowClass = 'highlight-end';\r\n        this._dataView.updateItem(item[idPropName], item);\r\n        this.renderGrid();\r\n      }, fadeOutDelay);\r\n\r\n      // delete the row's CSS highlight classes once the delay is passed\r\n      setTimeout(() => {\r\n        if (item && item[idPropName]) {\r\n          delete item.rowClass;\r\n          if (this._dataView.getIdxById(item[idPropName]) !== undefined) {\r\n            this._dataView.updateItem(item[idPropName], item);\r\n            this.renderGrid();\r\n          }\r\n        }\r\n      }, fadeDelay + fadeOutDelay);\r\n    }\r\n  }\r\n\r\n  /** Get the Data Item from a grid row index */\r\n  getDataItemByRowIndex<T = any>(index: number): T {\r\n    if (!this._grid || typeof this._grid.getDataItem !== 'function') {\r\n      throw new Error('We could not find SlickGrid Grid object and/or \"getDataItem\" method');\r\n    }\r\n\r\n    return this._grid.getDataItem(index);\r\n  }\r\n\r\n  /** Get the Data Item from an array of grid row indexes */\r\n  getDataItemByRowIndexes<T = any>(indexes: number[]): T[] {\r\n    if (!this._grid || typeof this._grid.getDataItem !== 'function') {\r\n      throw new Error('We could not find SlickGrid Grid object and/or \"getDataItem\" method');\r\n    }\r\n\r\n    const dataItems = [];\r\n\r\n    if (Array.isArray(indexes)) {\r\n      indexes.forEach((idx) => {\r\n        dataItems.push(this._grid.getDataItem(idx));\r\n      });\r\n    }\r\n\r\n    return dataItems;\r\n  }\r\n\r\n  /** Get the currently selected row indexes */\r\n  getSelectedRows(): number[] {\r\n    if (!this._grid || typeof this._grid.getSelectedRows !== 'function') {\r\n      throw new Error('We could not find SlickGrid Grid object and/or \"getSelectedRows\" method');\r\n    }\r\n    return this._grid.getSelectedRows();\r\n  }\r\n\r\n  /** Get the currently selected rows item data */\r\n  getSelectedRowsDataItem<T = any>(): T[] {\r\n    if (!this._grid || typeof this._grid.getSelectedRows !== 'function') {\r\n      throw new Error('We could not find SlickGrid Grid object and/or \"getSelectedRows\" method');\r\n    }\r\n\r\n    const selectedRowIndexes = this._grid.getSelectedRows();\r\n    return this.getDataItemByRowIndexes<T>(selectedRowIndexes);\r\n  }\r\n\r\n  /** Select the selected row by a row index */\r\n  setSelectedRow(rowIndex: number) {\r\n    if (this._grid && this._grid.setSelectedRows) {\r\n      this._grid.setSelectedRows([rowIndex]);\r\n    }\r\n  }\r\n\r\n  /** Set selected rows with provided array of row indexes */\r\n  setSelectedRows(rowIndexes: number[]) {\r\n    if (this._grid && this._grid.setSelectedRows) {\r\n      this._grid.setSelectedRows(rowIndexes);\r\n    }\r\n  }\r\n\r\n  /** Re-Render the Grid */\r\n  renderGrid() {\r\n    if (this._grid && typeof this._grid.invalidate === 'function') {\r\n      this._grid.invalidate();\r\n      this._grid.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the grid to it's original state (clear any filters, sorting & pagination if exists) .\r\n   * The column definitions could be passed as argument to reset (this can be used after a Grid State reset)\r\n   * The reset will clear the Filters & Sort, then will reset the Columns to their original state\r\n   */\r\n  resetGrid(columnDefinitions?: Column[]) {\r\n    // reset columns to original states & refresh the grid\r\n    if (this._grid && this._dataView) {\r\n      const originalColumns = this.extensionService.getAllColumns();\r\n\r\n      if (Array.isArray(originalColumns) && originalColumns.length > 0) {\r\n        // set the grid columns to it's original column definitions\r\n        this._grid.setColumns(originalColumns);\r\n        if (this._gridOptions && this._gridOptions.enableAutoSizeColumns) {\r\n          this._grid.autosizeColumns();\r\n        }\r\n        this.gridStateService.resetColumns(columnDefinitions);\r\n      }\r\n    }\r\n\r\n    if (this.filterService && this.filterService.clearFilters) {\r\n      this.filterService.clearFilters();\r\n    }\r\n    if (this.sortService && this.sortService.clearSorting) {\r\n      this.sortService.clearSorting();\r\n    }\r\n  }\r\n\r\n  /** @deprecated please use \"addItem\" method instead */\r\n  addItemToDatagrid(item: any, shouldHighlightRow = true, shouldResortGrid = false, shouldTriggerEvent = true, shouldSelectRow = true): number {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"addItem\" method since \"addItemToDatagrid\" will be deprecated in the future.');\r\n    return this.addItem(item, { highlightRow: shouldHighlightRow, resortGrid: shouldResortGrid, triggerEvent: shouldTriggerEvent, selectRow: shouldSelectRow });\r\n  }\r\n\r\n  /** @deprecated please use \"addItems\" method instead */\r\n  addItemsToDatagrid(items: any[], shouldHighlightRow = true, shouldResortGrid = false, shouldTriggerEvent = true, shouldSelectRow = true): number[] {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"addItems\" method since \"addItemsToDatagrid\" will be deprecated in the future.');\r\n    return this.addItems(items, { highlightRow: shouldHighlightRow, resortGrid: shouldResortGrid, triggerEvent: shouldTriggerEvent, selectRow: shouldSelectRow });\r\n  }\r\n\r\n  /**\r\n   * Add an item (data item) to the datagrid, by default it will highlight (flashing) the inserted row but we can disable it too\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, resortGrid, selectRow, triggerEvent)\r\n   * @return rowIndex: typically index 0 when adding to position \"top\" or a different number when adding to the \"bottom\"\r\n   */\r\n  addItem<T = any>(item: T, options?: GridServiceInsertOption): number {\r\n    options = { ...GridServiceInsertOptionDefaults, ...options };\r\n\r\n    if (!this._grid || !this._gridOptions || !this._dataView) {\r\n      throw new Error('We could not find SlickGrid Grid, DataView objects');\r\n    }\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n    if (!item || !(idPropName in item)) {\r\n      throw new Error(`Adding an item requires the item to include an \"${idPropName}\" property`);\r\n    }\r\n\r\n    // insert position top/bottom, defaults to top\r\n    // when position is top we'll call insert at index 0, else call addItem which just push to the DataView array\r\n    if (options && options.position === 'bottom') {\r\n      this._dataView.addItem(item);\r\n    } else {\r\n      this._dataView.insertItem(0, item); // insert at index 0\r\n    }\r\n\r\n    // row number in the grid, by default it will be on first row (top is the default)\r\n    let rowNumber = 0;\r\n\r\n    // do we want the item to be sorted in the grid, when set to False it will insert on first row (defaults to false)\r\n    if (options.resortGrid) {\r\n      this._dataView.reSort();\r\n\r\n      // find the row number in the grid and if user wanted to see highlighted row\r\n      // we need to do it here after resort and get each row number because it possibly changes after the sort\r\n      rowNumber = this._dataView.getRowById(item[idPropName]);\r\n    } else {\r\n      // scroll to row index 0 when inserting on top else scroll to the bottom where it got inserted\r\n      rowNumber = (options && options.position === 'bottom') ? this._dataView.getRowById(item[idPropName]) : 0;\r\n      this._grid.scrollRowIntoView(rowNumber);\r\n    }\r\n\r\n    // if highlight is enabled, we'll highlight the row we just added\r\n    if (options.highlightRow) {\r\n      this.highlightRow(rowNumber);\r\n    }\r\n\r\n    // if row selection (checkbox selector) is enabled, we'll select the row in the grid\r\n    if (options.selectRow && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n      this.setSelectedRow(rowNumber);\r\n    }\r\n\r\n    // do we want to trigger an event after adding the item\r\n    if (options.triggerEvent) {\r\n      this.onItemAdded.next(item);\r\n    }\r\n\r\n    return rowNumber;\r\n  }\r\n\r\n  /**\r\n   * Add item array (data item) to the datagrid, by default it will highlight (flashing) the inserted row but we can disable it too\r\n   * @param item object arrays, which must contain unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, resortGrid, selectRow, triggerEvent)\r\n   */\r\n  addItems<T = any>(items: T | T[], options?: GridServiceInsertOption): number[] {\r\n    options = { ...GridServiceInsertOptionDefaults, ...options };\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n    const rowNumbers: number[] = [];\r\n\r\n    // loop through all items to add\r\n    if (!Array.isArray(items)) {\r\n      return [this.addItem<T>(items, options)];\r\n    } else {\r\n      this._dataView.beginUpdate();\r\n      items.forEach((item: T) => this.addItem<T>(item, { ...options, highlightRow: false, resortGrid: false, triggerEvent: false, selectRow: false }));\r\n      this._dataView.endUpdate();\r\n    }\r\n\r\n    // do we want the item to be sorted in the grid, when set to False it will insert on first row (defaults to false)\r\n    if (options.resortGrid) {\r\n      this._dataView.reSort();\r\n    }\r\n\r\n    // scroll to row index 0 when inserting on top else scroll to the bottom where it got inserted\r\n    (options && options.position === 'bottom') ? this._grid.navigateBottom() : this._grid.navigateTop();\r\n\r\n    // get row numbers of all new inserted items\r\n    // we need to do it after resort and get each row number because it possibly changed after the sort\r\n    items.forEach((item: any) => rowNumbers.push(this._dataView.getRowById(item[idPropName])));\r\n\r\n    // if user wanted to see highlighted row\r\n    if (options.highlightRow) {\r\n      this.highlightRow(rowNumbers);\r\n    }\r\n\r\n    // select the row in the grid\r\n    if (options.selectRow && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n      this.setSelectedRows(rowNumbers);\r\n    }\r\n\r\n    // do we want to trigger an event after adding the item\r\n    if (options.triggerEvent) {\r\n      this.onItemAdded.next(items);\r\n    }\r\n\r\n    return rowNumbers;\r\n  }\r\n\r\n  /** @deprecated please use \"deleteItem\" method instead */\r\n  deleteDataGridItem(item: any, shouldTriggerEvent = true) {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"deleteItem\" method since \"deleteDataGridItem\" will be deprecated in the future.');\r\n    this.deleteItem(item, { triggerEvent: shouldTriggerEvent });\r\n  }\r\n\r\n  /** @deprecated please use \"deleteItems\" method instead */\r\n  deleteDataGridItems(items: any[], shouldTriggerEvent = true) {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"deleteItems\" method since \"deleteDataGridItems\" will be deprecated in the future.');\r\n    this.deleteItems(items, { triggerEvent: shouldTriggerEvent });\r\n  }\r\n\r\n  /** @deprecated please use \"deleteItemById\" method instead */\r\n  deleteDataGridItemById(itemId: string | number, shouldTriggerEvent = true) {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"deleteItemById\" method since \"deleteDataGridItemById\" will be deprecated in the future.');\r\n    this.deleteItemById(itemId, { triggerEvent: shouldTriggerEvent });\r\n  }\r\n\r\n  /** @deprecated please use \"deleteItemByIds\" method instead */\r\n  deleteDataGridItemByIds(itemIds: number[] | string[], shouldTriggerEvent = true) {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"deleteItemByIds\" method since \"deleteDataGridItemByIds\" will be deprecated in the future.');\r\n    this.deleteItemByIds(itemIds, { triggerEvent: shouldTriggerEvent });\r\n  }\r\n\r\n  /**\r\n   * Delete an existing item from the datagrid (dataView)\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (triggerEvent)\r\n   * @return item id deleted\r\n   */\r\n  deleteItem<T = any>(item: T, options?: GridServiceDeleteOption): number | string {\r\n    options = { ...GridServiceDeleteOptionDefaults, ...options };\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n    if (!item || !(idPropName in item)) {\r\n      throw new Error(`Deleting an item requires the item to include an \"${idPropName}\" property`);\r\n    }\r\n    return this.deleteItemById(item[idPropName], options);\r\n  }\r\n\r\n  /**\r\n   * Delete an array of existing items from the datagrid\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (triggerEvent)\r\n   * @return item id deleted\r\n   */\r\n  deleteItems<T = any>(items: T | T[], options?: GridServiceDeleteOption): number[] | string[] {\r\n    options = { ...GridServiceDeleteOptionDefaults, ...options };\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n\r\n    // when it's not an array, we can call directly the single item delete\r\n    if (!Array.isArray(items)) {\r\n      this.deleteItem<T>(items, options);\r\n      return [items[idPropName]];\r\n    }\r\n\r\n    this._dataView.beginUpdate();\r\n    const itemIds = [];\r\n    items.forEach((item: T) => {\r\n      if (item && item[idPropName] !== undefined) {\r\n        itemIds.push(item[idPropName]);\r\n      }\r\n      this.deleteItem<T>(item, { ...options, triggerEvent: false });\r\n    });\r\n    this._dataView.endUpdate();\r\n\r\n    // do we want to trigger an event after deleting the item\r\n    if (options.triggerEvent) {\r\n      this.onItemDeleted.next(items);\r\n    }\r\n    return itemIds;\r\n  }\r\n\r\n  /**\r\n   * Delete an existing item from the datagrid (dataView) by it's id\r\n   * @param itemId: item unique id\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (triggerEvent)\r\n   * @return item id deleted\r\n   */\r\n  deleteItemById(itemId: string | number, options?: GridServiceDeleteOption): number | string {\r\n    options = { ...GridServiceDeleteOptionDefaults, ...options };\r\n\r\n    if (itemId === null || itemId === undefined) {\r\n      throw new Error(`Cannot delete a row without a valid \"id\"`);\r\n    }\r\n\r\n    // when user has row selection enabled, we should clear any selection to avoid confusion after a delete\r\n    const isSyncGridSelectionEnabled = this.gridStateService && this.gridStateService.needToPreserveRowSelection() || false;\r\n    if (!isSyncGridSelectionEnabled && this._grid && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n      this.setSelectedRows([]);\r\n    }\r\n\r\n    // delete the item from the dataView\r\n    this._dataView.deleteItem(itemId);\r\n\r\n    // do we want to trigger an event after deleting the item\r\n    if (options.triggerEvent) {\r\n      this.onItemDeleted.next(itemId);\r\n    }\r\n    return itemId;\r\n  }\r\n\r\n  /**\r\n   * Delete an array of existing items from the datagrid\r\n   * @param itemIds array of item unique IDs\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (triggerEvent)\r\n   */\r\n  deleteItemByIds(itemIds: number[] | string[], options?: GridServiceDeleteOption): number[] | string[] {\r\n    options = { ...GridServiceDeleteOptionDefaults, ...options };\r\n\r\n    // when it's not an array, we can call directly the single item delete\r\n    if (Array.isArray(itemIds)) {\r\n      this._dataView.beginUpdate();\r\n      for (let i = 0; i < itemIds.length; i++) {\r\n        if (itemIds[i] !== null) {\r\n          this.deleteItemById(itemIds[i], { triggerEvent: false });\r\n        }\r\n      }\r\n      this._dataView.endUpdate();\r\n\r\n      // do we want to trigger an event after deleting the item\r\n      if (options.triggerEvent) {\r\n        this.onItemDeleted.next(itemIds);\r\n      }\r\n      return itemIds;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /** @deprecated please use \"updateItem\" method instead */\r\n  updateDataGridItem(item: any, shouldHighlightRow = true, shouldTriggerEvent = true, shouldSelectRow = true): number {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"updateItem\" method since \"updateDataGridItem\" will be deprecated in the future.');\r\n    return this.updateItem(item, { highlightRow: shouldHighlightRow, triggerEvent: shouldTriggerEvent, selectRow: shouldSelectRow });\r\n  }\r\n\r\n  /** @deprecated please use \"updateItems\" method instead */\r\n  updateDataGridItems(items: any | any[], shouldHighlightRow = true, shouldTriggerEvent = true, shouldSelectRow = true): number[] {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"updateItems\" method since \"updateDataGridItems\" will be deprecated in the future.');\r\n    return this.updateItems(items, { highlightRow: shouldHighlightRow, triggerEvent: shouldTriggerEvent, selectRow: shouldSelectRow });\r\n  }\r\n\r\n  /** @deprecated please use \"updateItemById\" method instead */\r\n  updateDataGridItemById(itemId: number | string, item: any, shouldHighlightRow = true, shouldTriggerEvent = true, shouldSelectRow = true): number {\r\n    console.warn('[Angular-Slickgrid - GridService] please consider using the new \"updateItemById\" method since \"updateDataGridItemById\" will be deprecated in the future.');\r\n    return this.updateItemById(itemId, item, { highlightRow: shouldHighlightRow, triggerEvent: shouldTriggerEvent, selectRow: shouldSelectRow });\r\n  }\r\n\r\n  /**\r\n   * Update an existing item with new properties inside the datagrid\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, selectRow, triggerEvent)\r\n   * @return grid row index\r\n   */\r\n  updateItem<T = any>(item: T, options?: GridServiceUpdateOption): number {\r\n    options = { ...GridServiceUpdateOptionDefaults, ...options };\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n    const itemId = (!item || !(idPropName in item)) ? undefined : item[idPropName];\r\n\r\n    if (itemId === undefined) {\r\n      throw new Error(`Calling Update of an item requires the item to include an \"${idPropName}\" property`);\r\n    }\r\n\r\n    return this.updateItemById<T>(itemId, item, options);\r\n  }\r\n\r\n  /**\r\n   * Update an array of existing items with new properties inside the datagrid\r\n   * @param item object arrays, which must contain unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, selectRow, triggerEvent)\r\n   * @return grid row indexes\r\n   */\r\n  updateItems<T = any>(items: T | T[], options?: GridServiceUpdateOption): number[] {\r\n    options = { ...GridServiceUpdateOptionDefaults, ...options };\r\n\r\n    // when it's not an array, we can call directly the single item update\r\n    if (!Array.isArray(items)) {\r\n      return [this.updateItem<T>(items, options)];\r\n    }\r\n\r\n\r\n    this._dataView.beginUpdate();\r\n    const gridRowNumbers: number[] = [];\r\n    items.forEach((item: any) => {\r\n      gridRowNumbers.push(this.updateItem<T>(item, { ...options, highlightRow: false, selectRow: false, triggerEvent: false }));\r\n    });\r\n    this._dataView.endUpdate();\r\n\r\n    // only highlight at the end, all at once\r\n    // we have to do this because doing highlight 1 by 1 would only re-select the last highlighted row which is wrong behavior\r\n    if (options.highlightRow) {\r\n      this.highlightRow(gridRowNumbers);\r\n    }\r\n\r\n    // select the row in the grid\r\n    if (options.selectRow && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n      this.setSelectedRows(gridRowNumbers);\r\n    }\r\n\r\n    // do we want to trigger an event after updating the item\r\n    if (options.triggerEvent) {\r\n      this.onItemUpdated.next(items);\r\n    }\r\n\r\n    return gridRowNumbers;\r\n  }\r\n\r\n  /**\r\n   * Update an existing item in the datagrid by it's id and new properties\r\n   * @param itemId: item unique id\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, selectRow, triggerEvent)\r\n   * @return grid row number\r\n   */\r\n  updateItemById<T = any>(itemId: number | string, item: T, options?: GridServiceUpdateOption): number {\r\n    options = { ...GridServiceUpdateOptionDefaults, ...options };\r\n    if (itemId === undefined) {\r\n      throw new Error(`Cannot update a row without a valid \"id\"`);\r\n    }\r\n    const rowNumber = this._dataView.getRowById(itemId);\r\n\r\n    if (!item || rowNumber === undefined) {\r\n      throw new Error(`The item to update in the grid was not found with id: ${itemId}`);\r\n    }\r\n\r\n    if (this._dataView.getIdxById(itemId) !== undefined) {\r\n      // Update the item itself inside the dataView\r\n      this._dataView.updateItem(itemId, item);\r\n      this._grid.updateRow(rowNumber);\r\n\r\n      // do we want to scroll to the row so that it shows in the Viewport (UI)\r\n      if (options.scrollRowIntoView) {\r\n        this._grid.scrollRowIntoView(rowNumber);\r\n      }\r\n\r\n      // highlight the row we just updated, if defined\r\n      if (options.highlightRow) {\r\n        this.highlightRow(rowNumber);\r\n      }\r\n\r\n      // select the row in the grid\r\n      if (options.selectRow && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n        this.setSelectedRow(rowNumber);\r\n      }\r\n\r\n      // do we want to trigger an event after updating the item\r\n      if (options.triggerEvent) {\r\n        this.onItemUpdated.next(item);\r\n      }\r\n    }\r\n    return rowNumber;\r\n  }\r\n\r\n  /**\r\n   * Insert a row into the grid if it doesn't already exist or update if it does.\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, resortGrid, selectRow, triggerEvent)\r\n   */\r\n  upsertItem<T = any>(item: T, options?: GridServiceInsertOption): { added: number, updated: number } {\r\n    options = { ...GridServiceInsertOptionDefaults, ...options };\r\n    const idPropName = this._gridOptions.datasetIdPropertyName || 'id';\r\n    const itemId = (!item || !(idPropName in item)) ? undefined : item[idPropName];\r\n\r\n    if (itemId === undefined) {\r\n      throw new Error(`Calling Upsert of an item requires the item to include an \"${idPropName}\" property`);\r\n    }\r\n\r\n    return this.upsertItemById<T>(itemId, item, options);\r\n  }\r\n\r\n  /**\r\n   * Update an array of existing items with new properties inside the datagrid\r\n   * @param item object arrays, which must contain unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, resortGrid, selectRow, triggerEvent)\r\n   * @return row numbers in the grid\r\n   */\r\n  upsertItems<T = any>(items: T | T[], options?: GridServiceInsertOption): { added: number, updated: number }[] {\r\n    options = { ...GridServiceInsertOptionDefaults, ...options };\r\n    // when it's not an array, we can call directly the single item update\r\n    if (!Array.isArray(items)) {\r\n      return [this.upsertItem<T>(items, options)];\r\n    }\r\n\r\n    this._dataView.beginUpdate();\r\n    const upsertedRows: { added: number, updated: number }[] = [];\r\n    items.forEach((item: T) => {\r\n      upsertedRows.push(this.upsertItem<T>(item, { ...options, highlightRow: false, resortGrid: false, selectRow: false, triggerEvent: false }));\r\n    });\r\n    this._dataView.endUpdate();\r\n\r\n    const rowNumbers = upsertedRows.map((upsertRow) => upsertRow.added !== undefined ? upsertRow.added : upsertRow.updated);\r\n    // only highlight at the end, all at once\r\n    // we have to do this because doing highlight 1 by 1 would only re-select the last highlighted row which is wrong behavior\r\n    if (options.highlightRow) {\r\n      this.highlightRow(rowNumbers);\r\n    }\r\n\r\n    // select the row in the grid\r\n    if (options.selectRow && this._gridOptions && (this._gridOptions.enableCheckboxSelector || this._gridOptions.enableRowSelection)) {\r\n      this.setSelectedRows(rowNumbers);\r\n    }\r\n\r\n    // do we want to trigger an event after updating the item\r\n    if (options.triggerEvent) {\r\n      this.onItemUpserted.next(items);\r\n      const addedItems = upsertedRows.filter((upsertRow) => upsertRow.added !== undefined);\r\n      if (Array.isArray(addedItems) && addedItems.length > 0) {\r\n        this.onItemAdded.next(addedItems);\r\n      }\r\n      const updatedItems = upsertedRows.filter((upsertRow) => upsertRow.updated !== undefined);\r\n      if (Array.isArray(updatedItems) && updatedItems.length > 0) {\r\n        this.onItemUpdated.next(updatedItems);\r\n      }\r\n    }\r\n    return upsertedRows;\r\n  }\r\n\r\n  /**\r\n   * Update an existing item in the datagrid by it's id and new properties\r\n   * @param itemId: item unique id\r\n   * @param item object which must contain a unique \"id\" property and any other suitable properties\r\n   * @param options: provide the possibility to do certain actions after or during the upsert (highlightRow, resortGrid, selectRow, triggerEvent)\r\n   * @return grid row number in the grid\r\n   */\r\n  upsertItemById<T = any>(itemId: number | string, item: T, options?: GridServiceInsertOption): { added: number, updated: number } {\r\n    let isItemAdded = false;\r\n    options = { ...GridServiceInsertOptionDefaults, ...options };\r\n    if (itemId === undefined) {\r\n      throw new Error(`Calling Upsert of an item requires the item to include a valid and unique \"id\" property`);\r\n    }\r\n\r\n    let rowNumberAdded: number;\r\n    let rowNumberUpdated: number;\r\n    if (this._dataView.getRowById(itemId) === undefined) {\r\n      rowNumberAdded = this.addItem<T>(item, options);\r\n      isItemAdded = true;\r\n    } else {\r\n      rowNumberUpdated = this.updateItem<T>(item, { highlightRow: options.highlightRow, selectRow: options.selectRow, triggerEvent: options.triggerEvent });\r\n      isItemAdded = false;\r\n    }\r\n\r\n    // do we want to trigger an event after updating the item\r\n    if (options.triggerEvent) {\r\n      this.onItemUpserted.next(item);\r\n      isItemAdded ? this.onItemAdded.next(item) : this.onItemUpdated.next(item);\r\n    }\r\n    return { added: rowNumberAdded, updated: rowNumberUpdated };\r\n  }\r\n}\r\n","import { CellArgs, Column, GridOption, OnEventArgs, SlickEventHandler } from './../models/index';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\nexport class GridEventService {\r\n  private _eventHandler: SlickEventHandler;\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  constructor() {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  dispose() {\r\n    this._eventHandler.unsubscribeAll();\r\n    this.handleOnCellChange = null;\r\n    this.handleOnCellClick = null;\r\n  }\r\n\r\n  /* OnCellChange Event */\r\n  bindOnCellChange(grid: any, dataView: any) {\r\n    // subscribe to this Slickgrid event of onCellChange\r\n    this._eventHandler.subscribe(grid.onCellChange, (e: KeyboardEvent | MouseEvent, args: CellArgs) => {\r\n      this.handleOnCellChange.call(this, grid, dataView, e, args);\r\n    });\r\n  }\r\n\r\n  /* OnClick Event */\r\n  bindOnClick(grid: any, dataView: any) {\r\n    this._eventHandler.subscribe(grid.onClick, (e: KeyboardEvent | MouseEvent, args: CellArgs) => {\r\n      this.handleOnCellClick.call(this, grid, dataView, e, args);\r\n    });\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  /* OnCellChange Event Handler */\r\n  handleOnCellChange(grid: any, dataView: any, e: KeyboardEvent | MouseEvent, args: CellArgs) {\r\n    if (!e || !args || !grid || args.cell === undefined || !grid.getColumns || !grid.getDataItem) {\r\n      return;\r\n    }\r\n    const column: Column = grid.getColumns()[args.cell];\r\n\r\n    // if the column definition has a onCellChange property (a callback function), then run it\r\n    if (typeof column.onCellChange === 'function') {\r\n      // add to the output gridOptions & dataView since we'll need them inside the AJAX column.onCellChange\r\n      const returnedArgs: OnEventArgs = {\r\n        row: args.row,\r\n        cell: args.cell,\r\n        dataView,\r\n        grid,\r\n        columnDef: column,\r\n        dataContext: grid.getDataItem(args.row)\r\n      };\r\n\r\n      // finally call up the Slick.column.onCellChanges.... function\r\n      column.onCellChange(e, returnedArgs);\r\n    }\r\n  }\r\n\r\n  /* OnCellClick Event Handler */\r\n  private handleOnCellClick(grid: any, dataView: any, e: KeyboardEvent | MouseEvent, args: CellArgs) {\r\n    if (!e || !args || !grid || args.cell === undefined || !grid.getColumns || !grid.getDataItem) {\r\n      return;\r\n    }\r\n    const column: Column = grid && grid.getColumns && grid.getColumns()[args.cell];\r\n    const gridOptions: GridOption = grid && grid.getOptions && grid.getOptions() || {};\r\n\r\n    // only when using autoCommitEdit, we will make the cell active (in focus) when clicked\r\n    // setting the cell as active as a side effect and if autoCommitEdit is set to false then the Editors won't save correctly\r\n    if (gridOptions.enableCellNavigation && (!gridOptions.editable || (gridOptions.editable && gridOptions.autoCommitEdit))) {\r\n      grid.setActiveCell(args.row, args.cell);\r\n    }\r\n\r\n    // if the column definition has a onCellClick property (a callback function), then run it\r\n    if (typeof column.onCellClick === 'function') {\r\n      // add to the output gridOptions & dataView since we'll need them inside the AJAX column.onClick\r\n      const returnedArgs: OnEventArgs = {\r\n        row: args.row,\r\n        cell: args.cell,\r\n        dataView,\r\n        grid,\r\n        columnDef: column,\r\n        dataContext: grid.getDataItem(args.row)\r\n      };\r\n\r\n      // finally call up the Slick.column.onCellClick.... function\r\n      column.onCellClick(e, returnedArgs);\r\n    }\r\n  }\r\n}\r\n","import { GridOption } from './../models/index';\r\nimport { Subject } from 'rxjs';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n// global constants, height/width are in pixels\r\nconst DATAGRID_MIN_HEIGHT = 180;\r\nconst DATAGRID_MIN_WIDTH = 300;\r\nconst DATAGRID_BOTTOM_PADDING = 20;\r\nconst DATAGRID_FOOTER_HEIGHT = 20;\r\nconst DATAGRID_PAGINATION_HEIGHT = 35;\r\n\r\nexport interface GridDimension {\r\n  height?: number;\r\n  width?: number;\r\n  heightWithPagination?: number;\r\n}\r\n\r\nexport class ResizerService {\r\n  private _fixedHeight: number | null;\r\n  private _fixedWidth: number | null;\r\n  private _grid: any;\r\n  private _gridDomElm: any;\r\n  private _gridContainerElm: any;\r\n  private _lastDimensions: GridDimension;\r\n  private _timer: any;\r\n  private _resizePaused = false;\r\n  onGridAfterResize = new Subject<GridDimension>();\r\n  onGridBeforeResize = new Subject<Event>();\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  private get _gridUid(): string {\r\n    return (this._grid && this._grid.getUID) ? this._grid.getUID() : this._gridOptions && this._gridOptions.gridId;\r\n  }\r\n\r\n  init(grid: any, fixedDimensions?: GridDimension): void {\r\n    if (!grid || !this._gridOptions) {\r\n      throw new Error(`\r\n      Angular-Slickgrid resizer requires a valid Grid object and Grid Options defined.\r\n      You can fix this by setting your gridOption to use \"enableAutoResize\" or create an instance of the ResizerService by calling bindAutoResizeDataGrid()`);\r\n    }\r\n\r\n    this._grid = grid;\r\n    const containerNode = grid && grid.getContainerNode && grid.getContainerNode() || '';\r\n    this._gridDomElm = $(containerNode);\r\n    const autoResizeOptions = this._gridOptions && this._gridOptions.autoResize || {};\r\n    this._gridContainerElm = (autoResizeOptions && autoResizeOptions.containerId) ? $(`#${autoResizeOptions.containerId}`) : $(`#${this._gridOptions.gridContainerId}`);\r\n\r\n    if (fixedDimensions) {\r\n      this._fixedHeight = fixedDimensions.height;\r\n      this._fixedWidth = fixedDimensions.width;\r\n    }\r\n  }\r\n\r\n  /** Bind an auto resize trigger on the datagrid, if that is enable then it will resize itself to the available space\r\n   * Options: we could also provide a % factor to resize on each height/width independently\r\n   */\r\n  bindAutoResizeDataGrid(newSizes?: GridDimension) {\r\n    // if we can't find the grid to resize, return without binding anything\r\n    if (this._gridDomElm === undefined || this._gridDomElm.offset() === undefined) {\r\n      return null;\r\n    }\r\n\r\n    // -- 1st resize the datagrid size at first load (we need this because the .on event is not triggered on first load)\r\n    // -- also we add a slight delay (in ms) so that we resize after the grid render is done\r\n    this.resizeGrid(10, newSizes);\r\n\r\n    // -- 2nd bind a trigger on the Window DOM element, so that it happens also when resizing after first load\r\n    // -- bind auto-resize to Window object only if it exist\r\n    $(window).on(`resize.grid.${this._gridUid}`, this.handleResizeGrid.bind(this, newSizes));\r\n  }\r\n\r\n  handleResizeGrid(newSizes: GridDimension, event: Event) {\r\n    this.onGridBeforeResize.next(event);\r\n    if (!this._resizePaused) {\r\n      // for some yet unknown reason, calling the resize twice removes any stuttering/flickering\r\n      // when changing the height and makes it much smoother experience\r\n      this.resizeGrid(0, newSizes);\r\n      this.resizeGrid(0, newSizes);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the datagrid new height/width from the available space, also consider that a % factor might be applied to calculation\r\n   * object gridOptions\r\n   */\r\n  calculateGridNewDimensions(gridOptions: GridOption): GridDimension | null {\r\n    const autoResizeOptions = gridOptions && gridOptions.autoResize || {};\r\n    if (!window || this._gridContainerElm === undefined || this._gridDomElm.offset() === undefined) {\r\n      return null;\r\n    }\r\n\r\n    // calculate bottom padding\r\n    // if using pagination, we need to add the pagination height to this bottom padding\r\n    let bottomPadding = (autoResizeOptions && autoResizeOptions.bottomPadding !== undefined) ? autoResizeOptions.bottomPadding : DATAGRID_BOTTOM_PADDING;\r\n    if (bottomPadding && gridOptions.enablePagination) {\r\n      bottomPadding += DATAGRID_PAGINATION_HEIGHT;\r\n    }\r\n\r\n    // optionally show a custom footer with the data metrics (dataset length and last updated timestamp)\r\n    if (bottomPadding && gridOptions.showCustomFooter) {\r\n      bottomPadding += gridOptions.customFooterOptions && gridOptions.customFooterOptions.footerHeight || DATAGRID_FOOTER_HEIGHT;\r\n    }\r\n\r\n    let gridHeight = 0;\r\n    let gridOffsetTop = 0;\r\n\r\n    // which DOM element are we using to calculate the available size for the grid?\r\n    if (autoResizeOptions.calculateAvailableSizeBy === 'container') {\r\n      // uses the container's height to calculate grid height without any top offset\r\n      gridHeight = this._gridContainerElm.height() || 0;\r\n    } else {\r\n      // uses the browser's window height with its top offset to calculate grid height\r\n      gridHeight = window.innerHeight || 0;\r\n      const coordOffsetTop = this._gridDomElm.offset();\r\n      gridOffsetTop = (coordOffsetTop !== undefined) ? coordOffsetTop.top : 0;\r\n    }\r\n\r\n    const availableHeight = gridHeight - gridOffsetTop - bottomPadding;\r\n    const availableWidth = this._gridContainerElm.width() || window.innerWidth || 0;\r\n    const maxHeight = autoResizeOptions && autoResizeOptions.maxHeight || undefined;\r\n    const minHeight = (autoResizeOptions && autoResizeOptions.minHeight !== undefined) ? autoResizeOptions.minHeight : DATAGRID_MIN_HEIGHT;\r\n    const maxWidth = autoResizeOptions && autoResizeOptions.maxWidth || undefined;\r\n    const minWidth = (autoResizeOptions && autoResizeOptions.minWidth !== undefined) ? autoResizeOptions.minWidth : DATAGRID_MIN_WIDTH;\r\n\r\n    let newHeight = availableHeight;\r\n    let newWidth = (autoResizeOptions && autoResizeOptions.sidePadding) ? availableWidth - autoResizeOptions.sidePadding : availableWidth;\r\n\r\n    // optionally (when defined), make sure that grid height & width are within their thresholds\r\n    if (newHeight < minHeight) {\r\n      newHeight = minHeight;\r\n    }\r\n    if (maxHeight && newHeight > maxHeight) {\r\n      newHeight = maxHeight;\r\n    }\r\n    if (newWidth < minWidth) {\r\n      newWidth = minWidth;\r\n    }\r\n    if (maxWidth && newWidth > maxWidth) {\r\n      newWidth = maxWidth;\r\n    }\r\n\r\n    // return the new dimensions unless a fixed height/width was defined\r\n    return {\r\n      height: this._fixedHeight || newHeight,\r\n      width: this._fixedWidth || newWidth\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dispose function when element is destroyed\r\n   */\r\n  dispose() {\r\n    $(window).off(`resize.grid.${this._gridUid}`);\r\n  }\r\n\r\n  /**\r\n   * Return the last resize dimensions used by the service\r\n   * @return last dimensions\r\n   */\r\n  getLastResizeDimensions(): GridDimension {\r\n    return this._lastDimensions;\r\n  }\r\n\r\n  /** Provide the possibility to pause the resizer for some time, until user decides to re-enabled it later if he wish to. */\r\n  pauseResizer(isResizePaused: boolean) {\r\n    this._resizePaused = isResizePaused;\r\n  }\r\n\r\n  /** Resize the datagrid to fit the browser height & width */\r\n  resizeGrid(delay = 10, newSizes?: GridDimension): Promise<GridDimension> {\r\n    return new Promise((resolve) => {\r\n      // because of the javascript async nature, we might want to delay the resize a little bit\r\n      delay = delay || 0;\r\n\r\n      if (delay > 0) {\r\n        clearTimeout(this._timer);\r\n        this._timer = setTimeout(() => resolve(this.resizeGridCallback(newSizes)), delay);\r\n      } else {\r\n        resolve(this.resizeGridCallback(newSizes));\r\n      }\r\n    });\r\n  }\r\n\r\n  resizeGridCallback(newSizes: GridDimension) {\r\n    const lastDimensions = this.resizeGridWithDimensions(newSizes);\r\n    this.onGridAfterResize.next(lastDimensions);\r\n    return lastDimensions;\r\n  }\r\n\r\n  resizeGridWithDimensions(newSizes?: GridDimension): GridDimension {\r\n    // calculate the available sizes with minimum height defined as a constant\r\n    const availableDimensions = this.calculateGridNewDimensions(this._gridOptions);\r\n    const gridContainerElm = $(`#${this._gridOptions.gridContainerId}`) || {};\r\n\r\n    if ((newSizes || availableDimensions) && this._gridDomElm.length > 0) {\r\n      // get the new sizes, if new sizes are passed (not 0), we will use them else use available space\r\n      // basically if user passes 1 of the dimension, let say he passes just the height,\r\n      // we will use the height as a fixed height but the width will be resized by it's available space\r\n      const newHeight = (newSizes && newSizes.height) ? newSizes.height : availableDimensions.height;\r\n      const newWidth = (newSizes && newSizes.width) ? newSizes.width : availableDimensions.width;\r\n\r\n      // apply these new height/width to the datagrid\r\n      if (!this._gridOptions.autoHeight) {\r\n        this._gridDomElm.height(newHeight);\r\n        gridContainerElm.height(newHeight);\r\n      }\r\n      this._gridDomElm.width(newWidth);\r\n      gridContainerElm.width(newWidth);\r\n\r\n      // resize the slickgrid canvas on all browser except some IE versions\r\n      // exclude all IE below IE11\r\n      // IE11 wants to be a better standard (W3C) follower (finally) they even changed their appName output to also have 'Netscape'\r\n      if (new RegExp('MSIE [6-8]').exec(navigator.userAgent) === null && this._grid && this._grid.resizeCanvas) {\r\n        this._grid.resizeCanvas();\r\n      }\r\n\r\n      // also call the grid auto-size columns so that it takes available space when going bigger\r\n      if (this._gridOptions && this._gridOptions.enableAutoSizeColumns && this._grid.autosizeColumns) {\r\n        // make sure that the grid still exist (by looking if the Grid UID is found in the DOM tree) to avoid SlickGrid error \"missing stylesheet\"\r\n        if (this._gridUid && $(`.${this._gridUid}`).length > 0) {\r\n          this._grid.autosizeColumns();\r\n        }\r\n      }\r\n\r\n      // keep last resized dimensions & resolve them to the Promise\r\n      this._lastDimensions = {\r\n        height: newHeight,\r\n        width: newWidth\r\n      };\r\n\r\n      if ((this._gridOptions.enablePagination || this._gridOptions.backendServiceApi)) {\r\n        this._lastDimensions.heightWithPagination = newHeight + DATAGRID_PAGINATION_HEIGHT;\r\n      }\r\n    }\r\n\r\n    return this._lastDimensions;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Column, GridOption, SlickEventHandler, ExtensionName } from './../models/index';\r\nimport { ExtensionUtility } from '../extensions/extensionUtility';\r\nimport { ExtensionService } from './extension.service';\r\nimport { ResizerService } from './resizer.service';\r\nimport { unsubscribeAllObservables } from './utilities';\r\nimport { SharedService } from './shared.service';\r\n\r\n// using external non-typed js libraries\r\ndeclare let $: any;\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class GroupingAndColspanService {\r\n  private _eventHandler: SlickEventHandler;\r\n  private _grid: any;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private extensionUtility: ExtensionUtility, private extensionService: ExtensionService, private resizerService: ResizerService, private sharedService: SharedService) {\r\n    this._eventHandler = new Slick.EventHandler();\r\n  }\r\n\r\n  /** Getter of the SlickGrid Event Handler */\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  private get _gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  /** Getter for the Column Definitions pulled through the Grid Object */\r\n  private get _columnDefinitions(): Column[] {\r\n    return (this._grid && this._grid.getColumns) ? this._grid.getColumns() : [];\r\n  }\r\n\r\n  init(grid: any, dataView: any) {\r\n    this._grid = grid;\r\n\r\n    if (grid && this._gridOptions) {\r\n      // When dealing with Pre-Header Grouping colspan, we need to re-create the pre-header in multiple occasions\r\n      // for all these events, we have to trigger a re-create\r\n      if (this._gridOptions.createPreHeaderPanel) {\r\n        // on all following events, call the\r\n        this._eventHandler.subscribe(grid.onSort, () => this.renderPreHeaderRowGroupingTitles());\r\n        this._eventHandler.subscribe(grid.onColumnsResized, () => this.renderPreHeaderRowGroupingTitles());\r\n        this._eventHandler.subscribe(grid.onColumnsReordered, () => this.renderPreHeaderRowGroupingTitles());\r\n        this._eventHandler.subscribe(dataView.onRowCountChanged, () => this.renderPreHeaderRowGroupingTitles());\r\n        this.subscriptions.push(\r\n          this.resizerService.onGridAfterResize.subscribe(() => this.renderPreHeaderRowGroupingTitles()),\r\n          this.sharedService.onHeaderMenuHideColumns.subscribe(() => this.delayRenderPreHeaderRowGroupingTitles(0))\r\n        );\r\n\r\n        this._eventHandler.subscribe(grid.onSetOptions, (_e, args) => {\r\n          // when user changes frozen columns dynamically (e.g. from header menu), we need to re-render the pre-header of the grouping titles\r\n          if (args && args.optionsBefore && args.optionsAfter && args.optionsBefore.frozenColumn !== args.optionsAfter.frozenColumn) {\r\n            this.delayRenderPreHeaderRowGroupingTitles(0);\r\n          }\r\n        });\r\n\r\n        // for both picker (columnPicker/gridMenu) we also need to re-create after hiding/showing columns\r\n        const columnPickerExtension = this.extensionService.getExtensionByName(ExtensionName.columnPicker);\r\n        if (columnPickerExtension && columnPickerExtension.instance && columnPickerExtension.instance.onColumnsChanged) {\r\n          this._eventHandler.subscribe(columnPickerExtension.instance.onColumnsChanged, () => this.renderPreHeaderRowGroupingTitles());\r\n        }\r\n\r\n        const gridMenuExtension = this.extensionService.getExtensionByName(ExtensionName.gridMenu);\r\n        if (gridMenuExtension && gridMenuExtension.instance && gridMenuExtension.instance.onColumnsChanged && gridMenuExtension.instance.onMenuClose) {\r\n          this._eventHandler.subscribe(gridMenuExtension.instance.onColumnsChanged, () => this.renderPreHeaderRowGroupingTitles());\r\n          this._eventHandler.subscribe(gridMenuExtension.instance.onMenuClose, () => this.renderPreHeaderRowGroupingTitles());\r\n        }\r\n\r\n        // also not sure why at this point, but it seems that I need to call the 1st create in a delayed execution\r\n        // probably some kind of timing issues and delaying it until the grid is fully ready fixes this problem\r\n        this.delayRenderPreHeaderRowGroupingTitles(50);\r\n      }\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    // also unsubscribe all Angular Subscriptions\r\n    this.subscriptions = unsubscribeAllObservables(this.subscriptions);\r\n  }\r\n\r\n  /** call \"renderPreHeaderRowGroupingTitles()\" with a setTimeout delay */\r\n  delayRenderPreHeaderRowGroupingTitles(delay = 0) {\r\n    setTimeout(() => this.renderPreHeaderRowGroupingTitles(), delay);\r\n  }\r\n\r\n  /** Create or Render the Pre-Header Row Grouping Titles */\r\n  renderPreHeaderRowGroupingTitles() {\r\n    if (this._gridOptions && this._gridOptions.frozenColumn !== undefined && this._gridOptions.frozenColumn >= 0) {\r\n      // Add column groups to left panel\r\n      let $preHeaderPanel = $(this._grid.getPreHeaderPanelLeft());\r\n      this.renderHeaderGroups($preHeaderPanel, 0, this._gridOptions.frozenColumn + 1);\r\n\r\n      // Add column groups to right panel\r\n      $preHeaderPanel = $(this._grid.getPreHeaderPanelRight());\r\n      this.renderHeaderGroups($preHeaderPanel, this._gridOptions.frozenColumn + 1, this._columnDefinitions.length);\r\n    } else {\r\n      // regular grid (not a frozen grid)\r\n      const $preHeaderPanel = $(this._grid.getPreHeaderPanel());\r\n      this.renderHeaderGroups($preHeaderPanel, 0, this._columnDefinitions.length);\r\n    }\r\n  }\r\n\r\n  renderHeaderGroups(preHeaderPanel: any, start: number, end: number) {\r\n    preHeaderPanel.empty()\r\n      .addClass('slick-header-columns')\r\n      .css('left', '-1000px')\r\n      .width(this._grid.getHeadersWidth());\r\n    preHeaderPanel.parent().addClass('slick-header');\r\n\r\n    const headerColumnWidthDiff = this._grid.getHeaderColumnWidthDiff();\r\n\r\n    let colDef;\r\n    let header;\r\n    let lastColumnGroup = '';\r\n    let widthTotal = 0;\r\n    const frozenHeaderWidthCalcDifferential = this._gridOptions && this._gridOptions.frozenHeaderWidthCalcDifferential || 0;\r\n    const isFrozenGrid = (this._gridOptions && (this._gridOptions.frozenColumn !== undefined && this._gridOptions.frozenColumn >= 0));\r\n\r\n    for (let i = start; i < end; i++) {\r\n      colDef = this._columnDefinitions[i];\r\n      if (colDef) {\r\n        if (lastColumnGroup === colDef.columnGroup && i > 0) {\r\n          widthTotal += colDef.width || 0;\r\n          if (header && header.width) {\r\n            header.width(widthTotal - headerColumnWidthDiff - frozenHeaderWidthCalcDifferential); // remove possible frozen border\r\n          }\r\n        } else {\r\n          widthTotal = colDef.width || 0;\r\n          header = $(`<div class=\"ui-state-default slick-header-column ${isFrozenGrid ? 'frozen' : ''}\" />`)\r\n            .html(`<span class=\"slick-column-name\">${colDef.columnGroup || ''}</span>`)\r\n            .width(widthTotal - headerColumnWidthDiff)\r\n            .appendTo(preHeaderPanel);\r\n        }\r\n        lastColumnGroup = colDef.columnGroup || '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /** Translate Column Group texts and re-render them afterward. */\r\n  translateGroupingAndColSpan() {\r\n    const currentColumnDefinitions = this._grid.getColumns();\r\n    this.extensionUtility.translateItems(currentColumnDefinitions, 'columnGroupKey', 'columnGroup');\r\n    this._grid.setColumns(currentColumnDefinitions);\r\n    this.renderPreHeaderRowGroupingTitles();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subscription, isObservable, Subject } from 'rxjs';\r\nimport * as isequal_ from 'lodash.isequal';\r\nconst isequal = isequal_; // patch to fix rollup to work\r\n\r\nimport { BackendServiceApi, CurrentPagination, GraphqlResult, GraphqlPaginatedResult, GridOption, Pagination, ServicePagination } from '../models';\r\nimport { FilterService } from './filter.service';\r\nimport { GridService } from './grid.service';\r\nimport { SharedService } from './shared.service';\r\nimport { executeBackendProcessesCallback, onBackendError } from './backend-utilities';\r\nimport { unsubscribeAllObservables } from './utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n  private _initialized = false;\r\n  private _isLocalGrid = true;\r\n  private _backendServiceApi: BackendServiceApi;\r\n  private _dataFrom = 1;\r\n  private _dataTo = 1;\r\n  private _itemsPerPage: number;\r\n  private _pageCount = 1;\r\n  private _pageNumber = 1;\r\n  private _totalItems = 0;\r\n  private _availablePageSizes: number[];\r\n  private _eventHandler = new Slick.EventHandler();\r\n  private _paginationOptions: Pagination;\r\n  private _subscriptions: Subscription[] = [];\r\n  onPaginationChanged = new Subject<ServicePagination>();\r\n  onPaginationVisibilityChanged = new Subject<{ visible: boolean }>();\r\n\r\n  dataView: any;\r\n  grid: any;\r\n\r\n  /** Constructor */\r\n  constructor(private filterService: FilterService, private gridService: GridService, private sharedService: SharedService) { }\r\n\r\n  get paginationOptions(): Pagination {\r\n    return this._paginationOptions;\r\n  }\r\n  set paginationOptions(paginationOptions: Pagination) {\r\n    this._paginationOptions = paginationOptions;\r\n  }\r\n\r\n  get availablePageSizes(): number[] {\r\n    return this._availablePageSizes;\r\n  }\r\n\r\n  get dataFrom(): number {\r\n    return this._dataFrom;\r\n  }\r\n\r\n  get dataTo(): number {\r\n    return this._dataTo;\r\n  }\r\n\r\n  get itemsPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  get pageCount(): number {\r\n    return this._pageCount;\r\n  }\r\n\r\n  get pageNumber(): number {\r\n    return this._pageNumber;\r\n  }\r\n\r\n  set totalItems(totalItems: number) {\r\n    this._totalItems = totalItems;\r\n    if (this._initialized) {\r\n      this.refreshPagination();\r\n    }\r\n  }\r\n\r\n  get totalItems(): number {\r\n    return this._totalItems;\r\n  }\r\n\r\n  init(grid: any, dataView: any, paginationOptions: Pagination, backendServiceApi?: BackendServiceApi) {\r\n    this._availablePageSizes = paginationOptions.pageSizes;\r\n    this.dataView = dataView;\r\n    this.grid = grid;\r\n    this._backendServiceApi = backendServiceApi;\r\n    this._paginationOptions = paginationOptions;\r\n    this._isLocalGrid = !backendServiceApi;\r\n    this._pageNumber = paginationOptions.pageNumber || 1;\r\n\r\n    if (backendServiceApi && (!backendServiceApi.service || !backendServiceApi.process)) {\r\n      throw new Error(`BackendServiceApi requires the following 2 properties \"process\" and \"service\" to be defined.`);\r\n    }\r\n\r\n    if (this._isLocalGrid && this.dataView) {\r\n      this._eventHandler.subscribe(this.dataView.onPagingInfoChanged, (e, pagingInfo) => {\r\n        if (this._totalItems !== pagingInfo.totalRows) {\r\n          this.updateTotalItems(pagingInfo.totalRows);\r\n        }\r\n      });\r\n      dataView.setRefreshHints({ isFilterUnchanged: true });\r\n      dataView.setPagingOptions({ pageSize: this.paginationOptions.pageSize, pageNum: (this._pageNumber - 1) }); // dataView page starts at 0 instead of 1\r\n    }\r\n\r\n    // Subscribe to Filter Clear & Changed and go back to page 1 when that happen\r\n    this._subscriptions.push(this.filterService.onFilterChanged.subscribe(() => this.resetPagination()));\r\n    this._subscriptions.push(this.filterService.onFilterCleared.subscribe(() => this.resetPagination()));\r\n\r\n    // Subscribe to any dataview row count changed so that when Adding/Deleting item(s) through the DataView\r\n    // that would trigger a refresh of the pagination numbers\r\n    if (this.dataView) {\r\n      this._subscriptions.push(this.gridService.onItemAdded.subscribe((items: any | any[]) => this.processOnItemAddedOrRemoved(items, true)));\r\n      this._subscriptions.push(this.gridService.onItemDeleted.subscribe((items: any | any[]) => this.processOnItemAddedOrRemoved(items, false)));\r\n    }\r\n\r\n    this.refreshPagination(false, false);\r\n    this._initialized = true;\r\n  }\r\n\r\n  dispose() {\r\n    this._initialized = false;\r\n\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n\r\n    // also unsubscribe all Angular Subscriptions\r\n    this._subscriptions = unsubscribeAllObservables(this._subscriptions);\r\n  }\r\n\r\n  getCurrentPageNumber(): number {\r\n    return this._pageNumber;\r\n  }\r\n\r\n  getCurrentPagination(): CurrentPagination & { pageSizes: number[] } {\r\n    return {\r\n      pageNumber: this._pageNumber,\r\n      pageSize: this._itemsPerPage,\r\n      pageSizes: this._availablePageSizes,\r\n    };\r\n  }\r\n\r\n  getFullPagination(): ServicePagination {\r\n    return {\r\n      pageCount: this._pageCount,\r\n      pageNumber: this._pageNumber,\r\n      pageSize: this._itemsPerPage,\r\n      pageSizes: this._availablePageSizes,\r\n      totalItems: this._totalItems,\r\n      dataFrom: this._dataFrom,\r\n      dataTo: this._dataTo,\r\n    };\r\n  }\r\n\r\n  getCurrentItemPerPage(): number {\r\n    return this._itemsPerPage;\r\n  }\r\n\r\n  changeItemPerPage(itemsPerPage: number, event?: any): Promise<any> {\r\n    this._pageNumber = 1;\r\n    this._pageCount = Math.ceil(this._totalItems / itemsPerPage);\r\n    this._itemsPerPage = itemsPerPage;\r\n    return this.processOnPageChanged(this._pageNumber, event);\r\n  }\r\n\r\n  goToFirstPage(event?: any): Promise<any> {\r\n    this._pageNumber = 1;\r\n    return this.processOnPageChanged(this._pageNumber, event);\r\n  }\r\n\r\n  goToLastPage(event?: any): Promise<any> {\r\n    this._pageNumber = this._pageCount || 1;\r\n    return this.processOnPageChanged(this._pageNumber, event);\r\n  }\r\n\r\n  goToNextPage(event?: any): Promise<any> {\r\n    if (this._pageNumber < this._pageCount) {\r\n      this._pageNumber++;\r\n      return this.processOnPageChanged(this._pageNumber, event);\r\n    } else {\r\n      return new Promise(resolve => resolve(false));\r\n    }\r\n  }\r\n\r\n  goToPageNumber(pageNumber: number, event?: any): Promise<any> {\r\n    const previousPageNumber = this._pageNumber;\r\n\r\n    if (pageNumber < 1) {\r\n      this._pageNumber = 1;\r\n    } else if (pageNumber > this._pageCount) {\r\n      this._pageNumber = this._pageCount;\r\n    } else {\r\n      this._pageNumber = pageNumber;\r\n    }\r\n\r\n    if (this._pageNumber !== previousPageNumber) {\r\n      return this.processOnPageChanged(this._pageNumber, event);\r\n    } else {\r\n      return new Promise(resolve => resolve(false));\r\n    }\r\n  }\r\n\r\n  goToPreviousPage(event?: any): Promise<any> {\r\n    if (this._pageNumber > 1) {\r\n      this._pageNumber--;\r\n      return this.processOnPageChanged(this._pageNumber, event);\r\n    } else {\r\n      return new Promise(resolve => resolve(false));\r\n    }\r\n  }\r\n\r\n  refreshPagination(isPageNumberReset: boolean = false, triggerChangedEvent = true) {\r\n    const previousPagination = { ...this.getCurrentPagination() };\r\n\r\n    if (this._paginationOptions) {\r\n      const pagination = this._paginationOptions;\r\n\r\n      // set the number of items per page if not already set\r\n      if (!this._itemsPerPage) {\r\n        if (this._isLocalGrid) {\r\n          this._itemsPerPage = pagination.pageSize;\r\n        } else {\r\n          this._itemsPerPage = +((this._backendServiceApi && this._backendServiceApi.options && this._backendServiceApi.options.paginationOptions && this._backendServiceApi.options.paginationOptions.first) ? this._backendServiceApi.options.paginationOptions.first : pagination.pageSize);\r\n        }\r\n      }\r\n\r\n      // if totalItems changed, we should always go back to the first page and recalculation the From-To indexes\r\n      if (isPageNumberReset || this._totalItems !== pagination.totalItems) {\r\n        if (isPageNumberReset) {\r\n          this._pageNumber = 1;\r\n          this.paginationOptions.pageNumber = 1;\r\n        } else if (!this._initialized && pagination.pageNumber && pagination.pageNumber > 1) {\r\n          this._pageNumber = pagination.pageNumber || 1;\r\n        }\r\n\r\n        // when page number is set to 1 then also reset the \"offset\" of backend service\r\n        if (this._pageNumber === 1 && this._backendServiceApi) {\r\n          this._backendServiceApi.service.resetPaginationOptions();\r\n        }\r\n      }\r\n\r\n      // calculate and refresh the multiple properties of the pagination UI\r\n      this._availablePageSizes = pagination.pageSizes;\r\n      if (!this._totalItems && pagination.totalItems) {\r\n        this._totalItems = pagination.totalItems;\r\n      }\r\n      this.recalculateFromToIndexes();\r\n    }\r\n    this._pageCount = Math.ceil(this._totalItems / this._itemsPerPage);\r\n    const currentPagination = this.getCurrentPagination();\r\n    this.sharedService.currentPagination = currentPagination;\r\n\r\n    if (triggerChangedEvent && !isequal(previousPagination, currentPagination)) {\r\n      this.onPaginationChanged.next(currentPagination);\r\n    }\r\n  }\r\n\r\n  processOnPageChanged(pageNumber: number, event?: Event | undefined): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.recalculateFromToIndexes();\r\n\r\n      if (this._isLocalGrid && this.dataView) {\r\n        this.dataView.setPagingOptions({ pageSize: this._itemsPerPage, pageNum: (pageNumber - 1) }); // dataView page starts at 0 instead of 1\r\n        this.onPaginationChanged.next(this.getFullPagination());\r\n      } else {\r\n        const itemsPerPage = +this._itemsPerPage;\r\n\r\n        // keep start time & end timestamps & return it after process execution\r\n        const startTime = new Date();\r\n\r\n        // run any pre-process, if defined, for example a spinner\r\n        if (this._backendServiceApi.preProcess) {\r\n          this._backendServiceApi.preProcess();\r\n        }\r\n\r\n        const query = this._backendServiceApi.service.processOnPaginationChanged(event, { newPage: pageNumber, pageSize: itemsPerPage });\r\n\r\n        // the processes can be Promises or an Observables (like HttpClient)\r\n        const process = this._backendServiceApi.process(query);\r\n        if (process instanceof Promise) {\r\n          process\r\n            .then((processResult: GraphqlResult | GraphqlPaginatedResult | any) => {\r\n              resolve(executeBackendProcessesCallback(startTime, processResult, this._backendServiceApi, this._totalItems));\r\n            })\r\n            .catch((error) => {\r\n              onBackendError(error, this._backendServiceApi);\r\n              reject(process);\r\n            });\r\n        } else if (isObservable(process)) {\r\n          this._subscriptions.push(\r\n            process.subscribe(\r\n              (processResult: GraphqlResult | GraphqlPaginatedResult | any) => {\r\n                resolve(executeBackendProcessesCallback(startTime, processResult, this._backendServiceApi, this._totalItems));\r\n              },\r\n              (error: any) => {\r\n                onBackendError(error, this._backendServiceApi);\r\n                reject(process);\r\n              }\r\n            )\r\n          );\r\n        }\r\n        this.onPaginationChanged.next(this.getFullPagination());\r\n      }\r\n    });\r\n  }\r\n\r\n  recalculateFromToIndexes() {\r\n    if (this._totalItems === 0) {\r\n      this._dataFrom = 0;\r\n      this._dataTo = 1;\r\n      this._pageNumber = 0;\r\n    } else {\r\n      this._dataFrom = this._pageNumber > 1 ? ((this._pageNumber * this._itemsPerPage) - this._itemsPerPage + 1) : 1;\r\n      this._dataTo = (this._totalItems < this._itemsPerPage) ? this._totalItems : ((this._pageNumber || 1) * this._itemsPerPage);\r\n      if (this._dataTo > this._totalItems) {\r\n        this._dataTo = this._totalItems;\r\n      }\r\n    }\r\n    this._pageNumber = (this._totalItems > 0 && this._pageNumber === 0) ? 1 : this._pageNumber;\r\n\r\n    // do a final check on the From/To and make sure they are not over or below min/max acceptable values\r\n    if (this._dataTo > this._totalItems) {\r\n      this._dataTo = this._totalItems;\r\n    } else if (this._totalItems < this._itemsPerPage) {\r\n      this._dataTo = this._totalItems;\r\n    }\r\n  }\r\n\r\n  /** Reset the Pagination to first page and recalculate necessary numbers */\r\n  resetPagination(triggerChangedEvent = true) {\r\n    if (this._isLocalGrid) {\r\n      // on a local grid we also need to reset the DataView paging to 1st page\r\n      this.dataView.setPagingOptions({ pageSize: this._itemsPerPage, pageNum: 0 });\r\n    }\r\n    this.refreshPagination(true, triggerChangedEvent);\r\n  }\r\n\r\n  /**\r\n   * Toggle the Pagination (show/hide), it will use the visible if defined else it will automatically inverse when called without argument\r\n   *\r\n   * IMPORTANT NOTE:\r\n   * The Pagination must be created on initial page load, then only after can you toggle it.\r\n   * Basically this method WILL NOT WORK to show the Pagination if it was not there from the start.\r\n   */\r\n  togglePaginationVisibility(visible?: boolean) {\r\n    if (this.grid && this.sharedService && this.sharedService.gridOptions) {\r\n      const isVisible = visible !== undefined ? visible : !this.sharedService.gridOptions.enablePagination;\r\n      this.sharedService.gridOptions.enablePagination = isVisible;\r\n      this.onPaginationVisibilityChanged.next({ visible: isVisible });\r\n\r\n      // make sure to reset the Pagination and go back to first page to avoid any issues with Pagination being offset\r\n      if (isVisible) {\r\n        this.goToFirstPage();\r\n      }\r\n\r\n      // when using a local grid, we can reset the DataView pagination by changing its page size\r\n      // page size of 0 would show all, hence cancel the pagination\r\n      if (this._isLocalGrid) {\r\n        const pageSize = visible ? this._itemsPerPage : 0;\r\n        this.dataView.setPagingOptions({ pageSize, pageNum: 0 });\r\n      }\r\n    }\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // --------------------\r\n\r\n  updateTotalItems(totalItems: number, triggerChangedEvent = false) {\r\n    this._totalItems = totalItems;\r\n    if (this._paginationOptions) {\r\n      this._paginationOptions.totalItems = totalItems;\r\n      this.refreshPagination(false, triggerChangedEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When item is added or removed, we will refresh the numbers on the pagination however we won't trigger a backend change\r\n   * This will have a side effect though, which is that the \"To\" count won't be matching the \"items per page\" count,\r\n   * that is a necessary side effect to avoid triggering a backend query just to refresh the paging,\r\n   * basically we assume that this offset is fine for the time being,\r\n   * until user does an action which will refresh the data hence the pagination which will then become normal again\r\n   */\r\n  private processOnItemAddedOrRemoved(items: any | any[], isItemAdded = true) {\r\n    if (items !== null) {\r\n      const previousDataTo = this._dataTo;\r\n      const itemCount = Array.isArray(items) ? items.length : 1;\r\n      const itemCountWithDirection = isItemAdded ? +itemCount : -itemCount;\r\n\r\n      // refresh the total count in the pagination and in the UI\r\n      this._totalItems += itemCountWithDirection;\r\n      this.recalculateFromToIndexes();\r\n\r\n      // finally refresh the \"To\" count and we know it might be different than the \"items per page\" count\r\n      // but this is necessary since we don't want an actual backend refresh\r\n      this._dataTo = previousDataTo + itemCountWithDirection;\r\n      this.onPaginationChanged.next(this.getFullPagination());\r\n    }\r\n  }\r\n}\r\n","import { Aggregator } from './../models/aggregator.interface';\r\n\r\nexport class AvgAggregator implements Aggregator {\r\n  private _count = 0;\r\n  private _nonNullCount: number;\r\n  private _sum: number;\r\n  private _field: number | string;\r\n\r\n  constructor(field: number | string) {\r\n    this._field = field;\r\n  }\r\n\r\n  init(): void {\r\n    this._count = 0;\r\n    this._nonNullCount = 0;\r\n    this._sum = 0;\r\n  }\r\n\r\n  accumulate(item: any) {\r\n    const val = (item && item.hasOwnProperty(this._field)) ? item[this._field] : null;\r\n    this._count++;\r\n    if (val !== null && val !== undefined && val !== '' && !isNaN(val)) {\r\n      this._nonNullCount++;\r\n      this._sum += parseFloat(val);\r\n    }\r\n  }\r\n\r\n  storeResult(groupTotals: any) {\r\n    if (!groupTotals || groupTotals.avg === undefined) {\r\n      groupTotals.avg = {};\r\n    }\r\n    if (this._nonNullCount !== 0) {\r\n      groupTotals.avg[this._field] = this._sum / this._nonNullCount;\r\n    }\r\n  }\r\n}\r\n","import { Aggregator } from './../models/aggregator.interface';\r\n\r\nexport class MinAggregator implements Aggregator {\r\n  private _min: number | null;\r\n  private _field: number | string;\r\n\r\n  constructor(field: number | string) {\r\n    this._field = field;\r\n  }\r\n\r\n  init() {\r\n    this._min = null;\r\n  }\r\n\r\n  accumulate(item: any) {\r\n    const val = (item && item.hasOwnProperty(this._field)) ? item[this._field] : null;\r\n    if (val !== null && val !== undefined && val !== '' && !isNaN(val)) {\r\n      if (this._min === null || this._min === undefined || val < this._min) {\r\n        this._min = parseFloat(val);\r\n      }\r\n    }\r\n  }\r\n\r\n  storeResult(groupTotals: any) {\r\n    if (!groupTotals || groupTotals.min === undefined) {\r\n      groupTotals.min = {};\r\n    }\r\n    groupTotals.min[this._field] = this._min;\r\n  }\r\n}\r\n","import { Aggregator } from './../models/aggregator.interface';\r\n\r\nexport class MaxAggregator implements Aggregator {\r\n  private _max: number | null;\r\n  private _field: number | string;\r\n\r\n  constructor(field: number | string) {\r\n    this._field = field;\r\n  }\r\n\r\n  init(): void {\r\n    this._max = null;\r\n  }\r\n\r\n  accumulate(item: any) {\r\n    const val = (item && item.hasOwnProperty(this._field)) ? item[this._field] : null;\r\n    if (val !== null && val !== undefined && val !== '' && !isNaN(val)) {\r\n      if (this._max === null || this._max === undefined || val > this._max) {\r\n        this._max = parseFloat(val);\r\n      }\r\n    }\r\n  }\r\n\r\n  storeResult(groupTotals: any) {\r\n    if (!groupTotals || groupTotals.max === undefined) {\r\n      groupTotals.max = {};\r\n    }\r\n    groupTotals.max[this._field] = this._max;\r\n  }\r\n}\r\n","import { Aggregator } from './../models/aggregator.interface';\r\n\r\nexport class SumAggregator implements Aggregator {\r\n  private _sum: number = 0;\r\n  private _field: number | string;\r\n\r\n  constructor(field: number | string) {\r\n    this._field = field;\r\n  }\r\n\r\n  init() {\r\n    this._sum = 0;\r\n  }\r\n\r\n  accumulate(item: any) {\r\n    const val = (item && item.hasOwnProperty(this._field)) ? item[this._field] : null;\r\n    if (val !== null && val !== undefined && val !== '' && !isNaN(val)) {\r\n      this._sum += parseFloat(val);\r\n    }\r\n  }\r\n\r\n  storeResult(groupTotals: any) {\r\n    if (!groupTotals || groupTotals.sum === undefined) {\r\n      groupTotals.sum = {};\r\n    }\r\n    groupTotals.sum[this._field] = this._sum;\r\n  }\r\n}\r\n","import { AvgAggregator } from './avgAggregator';\r\nimport { MinAggregator } from './minAggregator';\r\nimport { MaxAggregator } from './maxAggregator';\r\nimport { SumAggregator } from './sumAggregator';\r\n\r\n/** Provides a list of different Aggregators for the Group Formatter */\r\nexport const Aggregators = {\r\n  Avg: AvgAggregator,\r\n  Min: MinAggregator,\r\n  Max: MaxAggregator,\r\n  Sum: SumAggregator\r\n};\r\n","import { Constants } from '../constants';\r\nimport { EditorValidatorOutput } from '../models/editorValidatorOutput.interface';\r\nimport { EditorValidator } from '../models/editorValidator.interface';\r\n\r\ninterface TextValidatorOptions {\r\n  editorArgs: any;\r\n  errorMessage?: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  operatorConditionalType?: 'inclusive' | 'exclusive';\r\n  required?: boolean;\r\n  validator?: EditorValidator;\r\n}\r\n\r\nexport function textValidator(inputValue: any, options: TextValidatorOptions): EditorValidatorOutput {\r\n  const errorMsg = options.errorMessage;\r\n  const isRequired = options.required;\r\n  const minLength = options.minLength;\r\n  const maxLength = options.maxLength;\r\n  const operatorConditionalType = options.operatorConditionalType || 'inclusive';\r\n  const mapValidation = {\r\n    '{{minLength}}': minLength,\r\n    '{{maxLength}}': maxLength\r\n  };\r\n  let isValid = true;\r\n  let outputMsg = '';\r\n  const inputValueLength = inputValue && inputValue.length || 0;\r\n\r\n  if (options.validator) {\r\n    return options.validator(inputValue, options.editorArgs);\r\n  }\r\n\r\n  // by default the editor is almost always valid (except when it's required but not provided)\r\n  if (isRequired && inputValue === '') {\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_REQUIRED_FIELD;\r\n  } else if (minLength !== undefined && maxLength !== undefined && ((operatorConditionalType === 'exclusive' && (inputValueLength <= minLength || inputValueLength >= maxLength)) || (operatorConditionalType === 'inclusive' && (inputValueLength < minLength || inputValueLength > maxLength)))) {\r\n    // MIN & MAX Length provided\r\n    // make sure text length is between minLength and maxLength\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_TEXT_LENGTH_BETWEEN.replace(/{{minLength}}|{{maxLength}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (minLength !== undefined && inputValueLength !== null && ((operatorConditionalType === 'exclusive' && inputValueLength <= minLength) || (operatorConditionalType === 'inclusive' && inputValueLength !== null && inputValueLength < minLength))) {\r\n    // MIN Length ONLY\r\n    // when text length is shorter than minLength\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_TEXT_MIN_LENGTH_INCLUSIVE : Constants.VALIDATION_EDITOR_TEXT_MIN_LENGTH;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{minLength}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (maxLength !== undefined && inputValueLength !== null && ((operatorConditionalType === 'exclusive' && inputValueLength >= maxLength) || (operatorConditionalType === 'inclusive' && inputValueLength !== null && inputValueLength > maxLength))) {\r\n    // MAX Length ONLY\r\n    // when text length is longer than minLength\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_TEXT_MAX_LENGTH_INCLUSIVE : Constants.VALIDATION_EDITOR_TEXT_MAX_LENGTH;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{maxLength}}/gi, (matched) => mapValidation[matched]);\r\n  }\r\n\r\n  return { valid: isValid, msg: outputMsg };\r\n}\r\n","import * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport {\r\n  AutocompleteOption,\r\n  CollectionCustomStructure,\r\n  Column,\r\n  ColumnEditor,\r\n  Editor,\r\n  EditorArguments,\r\n  EditorValidator,\r\n  EditorValidatorOutput,\r\n  FieldType,\r\n  GridOption,\r\n  KeyCode,\r\n} from './../models/index';\r\nimport { findOrDefault, getDescendantProperty, setDeepValue, toKebabCase } from '../services/utilities';\r\nimport { textValidator } from '../editorValidators/textValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n// minimum length of chars to type before starting to start querying\r\nconst MIN_LENGTH = 3;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class AutoCompleteEditor implements Editor {\r\n  private _autoCompleteOptions: AutocompleteOption;\r\n  private _currentValue: any;\r\n  private _defaultTextValue: string;\r\n  private _elementCollection: any[] | null;\r\n  private _lastInputEvent: JQuery.Event;\r\n\r\n  /** The JQuery DOM element */\r\n  private _$editorElm: any;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  /** The property name for labels in the collection */\r\n  labelName: string;\r\n\r\n  /** The property name for a prefix that can be added to the labels in the collection */\r\n  labelPrefixName: string;\r\n\r\n  /** The property name for a suffix that can be added to the labels in the collection */\r\n  labelSuffixName: string;\r\n\r\n  /** The property name for values in the collection */\r\n  valueName: string;\r\n\r\n  forceUserInput: boolean;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Getter for the Autocomplete Option */\r\n  get autoCompleteOptions(): Partial<AutocompleteOption> {\r\n    return this._autoCompleteOptions || {};\r\n  }\r\n\r\n  /** Get the Collection */\r\n  get editorCollection(): any[] {\r\n    return this.columnDef && this.columnDef.internalColumnEditor && this.columnDef.internalColumnEditor.collection || [];\r\n  }\r\n\r\n  /** Get the Final Collection used in the AutoCompleted Source (this may vary from the \"collection\" especially when providing a customStructure) */\r\n  get elementCollection(): any[] | null {\r\n    return this._elementCollection;\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Getter for the Custom Structure if exist */\r\n  get customStructure(): CollectionCustomStructure {\r\n    let customStructure = this.columnEditor && this.columnEditor.customStructure;\r\n    const columnType = this.columnEditor && this.columnEditor.type || this.columnDef && this.columnDef.type;\r\n    if (!customStructure && (columnType === FieldType.object && this.columnDef && this.columnDef.dataKey && this.columnDef.labelKey)) {\r\n      customStructure = {\r\n        label: this.columnDef.labelKey,\r\n        value: this.columnDef.dataKey,\r\n      };\r\n    }\r\n    return customStructure;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.gridOptions.autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  get editorOptions() {\r\n    return this.columnEditor && this.columnEditor.editorOptions || {};\r\n  }\r\n\r\n  /** jQuery UI AutoComplete instance */\r\n  get instance(): any {\r\n    return this._$editorElm.autocomplete('instance');\r\n  }\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  get gridOptions(): GridOption {\r\n    return (this.grid && this.grid.getOptions) ? this.grid.getOptions() : {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$editorElm;\r\n  }\r\n\r\n  init() {\r\n    this.labelName = this.customStructure && this.customStructure.label || 'label';\r\n    this.valueName = this.customStructure && this.customStructure.value || 'value';\r\n    this.labelPrefixName = this.customStructure && this.customStructure.labelPrefix || 'labelPrefix';\r\n    this.labelSuffixName = this.customStructure && this.customStructure.labelSuffix || 'labelSuffix';\r\n\r\n    // always render the DOM element, even if user passed a \"collectionAsync\",\r\n    const newCollection = this.columnEditor.collection || [];\r\n    this.renderDomElement(newCollection);\r\n  }\r\n\r\n  destroy() {\r\n    if (this._$editorElm) {\r\n      this._$editorElm.autocomplete('destroy');\r\n      this._$editorElm.off('keydown.nav').remove();\r\n    }\r\n    this._$editorElm = null;\r\n    this._elementCollection = null;\r\n  }\r\n\r\n  focus() {\r\n    if (this._$editorElm) {\r\n      this._$editorElm.focus().select();\r\n    }\r\n  }\r\n\r\n  getValue() {\r\n    return this._$editorElm.val();\r\n  }\r\n\r\n  setValue(value: string) {\r\n    this._$editorElm.val(value);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    let newValue = state;\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    // if we have a collection defined, we will try to find the string within the collection and return it\r\n    if (Array.isArray(this.editorCollection) && this.editorCollection.length > 0) {\r\n      newValue = findOrDefault(this.editorCollection, (collectionItem: any) => {\r\n        if (collectionItem && typeof state === 'object' && collectionItem.hasOwnProperty(this.labelName)) {\r\n          return (collectionItem.hasOwnProperty(this.labelName) && collectionItem[this.labelName].toString()) === (state.hasOwnProperty(this.labelName) && state[this.labelName].toString());\r\n        } else if (collectionItem && typeof state === 'string' && collectionItem.hasOwnProperty(this.labelName)) {\r\n          return (collectionItem.hasOwnProperty(this.labelName) && collectionItem[this.labelName].toString()) === state;\r\n        }\r\n        return collectionItem && collectionItem.toString() === state;\r\n      });\r\n    }\r\n\r\n    // is the field a complex object, \"address.streetNumber\"\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(newValue);\r\n    newValue = (validation && validation.valid) ? newValue : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$editorElm.val();\r\n    const lastKeyEvent = this._lastInputEvent && this._lastInputEvent.keyCode;\r\n    if (this.columnEditor && this.columnEditor.alwaysSaveOnEnterKey && lastKeyEvent === KeyCode.ENTER) {\r\n      return true;\r\n    }\r\n    return (!(elmValue === '' && (this._defaultTextValue === null || this._defaultTextValue === undefined))) && (elmValue !== this._defaultTextValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const data = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this._currentValue = data;\r\n      this._defaultTextValue = typeof data === 'string' ? data : (data && data.hasOwnProperty(this.labelName) && data[this.labelName] || '');\r\n      this._$editorElm.val(this._defaultTextValue);\r\n      this._$editorElm.select();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue(): any {\r\n    // if you want to add the autocomplete functionality but want the user to be able to input a new option\r\n    if (this.editorOptions.forceUserInput) {\r\n      const minLength = this.editorOptions && this.editorOptions.hasOwnProperty('minLength') ? this.editorOptions.minLength : MIN_LENGTH;\r\n      this._currentValue = this._$editorElm.val().length > minLength ? this._$editorElm.val() : this._currentValue;\r\n    }\r\n    // if user provided a custom structure, we will serialize the value returned from the object with custom structure\r\n    if (this.customStructure && this._currentValue && this._currentValue.hasOwnProperty(this.valueName) && (this.columnDef && this.columnDef.type !== FieldType.object && this.columnEditor && this.columnEditor.type !== FieldType.object)) {\r\n      return this._currentValue[this.valueName];\r\n    } else if (this._currentValue && this._currentValue.value !== undefined) {\r\n      // when object has a \"value\" property and its column is set as an Object type, we'll return an object with optional custom structure\r\n      if (this.columnDef && this.columnDef.type === FieldType.object || ((this.columnEditor && this.columnEditor.type) === FieldType.object)) {\r\n        return {\r\n          [this.labelName]: this._currentValue.label,\r\n          [this.valueName]: this._currentValue.value\r\n        };\r\n      }\r\n      return this._currentValue.value;\r\n    }\r\n    // if it falls here it might be that the user provided its own custom item with something else than the regular label/value pair\r\n    // at this point it's only available when user provide a custom template for the autocomplete renderItem callback\r\n    return this._currentValue;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const val = (inputValue !== undefined) ? inputValue : this._$editorElm && this._$editorElm.val && this._$editorElm.val();\r\n    return textValidator(val, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      minLength: this.columnEditor.minLength,\r\n      maxLength: this.columnEditor.maxLength,\r\n      operatorConditionalType: this.columnEditor.operatorConditionalType,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  // this function should be PRIVATE but for unit tests purposes we'll make it public until a better solution is found\r\n  // a better solution would be to get the autocomplete DOM element to work with selection but I couldn't find how to do that in Jest\r\n  onSelect(_event: Event, ui: { item: any; }) {\r\n    if (ui && ui.item) {\r\n      const item = ui && ui.item;\r\n      this._currentValue = item;\r\n      // when the user defines a \"renderItem\" (or \"_renderItem\") template, then we assume the user defines his own custom structure of label/value pair\r\n      // otherwise we know that jQueryUI always require a label/value pair, we can pull them directly\r\n      const hasCustomRenderItemCallback = this.columnEditor && this.columnEditor.callbacks && this.columnEditor.callbacks.hasOwnProperty('_renderItem') || (this.columnEditor && this.columnEditor.editorOptions && this.columnEditor.editorOptions.renderItem) || false;\r\n\r\n      const itemLabel = typeof item === 'string' ? item : (hasCustomRenderItemCallback ? item[this.labelName] : item.label);\r\n      this.setValue(itemLabel);\r\n      this.save();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private renderCustomItem(ul: HTMLElement, item: any) {\r\n    const templateString = this._autoCompleteOptions && this._autoCompleteOptions.renderItem && this._autoCompleteOptions.renderItem.templateCallback(item) || '';\r\n\r\n    // sanitize any unauthorized html tags like script and others\r\n    // for the remaining allowed tags we'll permit all attributes\r\n    const sanitizedTemplateText = (DOMPurify.sanitize(templateString, {}) || '').toString();\r\n\r\n    return $('<li></li>')\r\n      .data('item.autocomplete', item)\r\n      .append(sanitizedTemplateText)\r\n      .appendTo(ul);\r\n  }\r\n\r\n  private renderCollectionItem(ul: HTMLElement, item: any) {\r\n    const isRenderHtmlEnabled = this.columnEditor && this.columnEditor.enableRenderHtml || false;\r\n    const prefixText = item.labelPrefix || '';\r\n    const labelText = item.label || '';\r\n    const suffixText = item.labelSuffix || '';\r\n    const finalText = prefixText + labelText + suffixText;\r\n\r\n    // sanitize any unauthorized html tags like script and others\r\n    // for the remaining allowed tags we'll permit all attributes\r\n    const sanitizedText = (DOMPurify.sanitize(finalText, {}) || '').toString();\r\n\r\n    const $liDiv = $('<div></div>')[isRenderHtmlEnabled ? 'html' : 'text'](sanitizedText);\r\n    return $('<li></li>')\r\n      .data('item.autocomplete', item)\r\n      .append($liDiv)\r\n      .appendTo(ul);\r\n  }\r\n\r\n  private renderDomElement(collection: any[]) {\r\n    if (!Array.isArray(collection)) {\r\n      throw new Error('The \"collection\" passed to the Autocomplete Editor is not a valid array.');\r\n    }\r\n    const columnId = this.columnDef && this.columnDef.id || '';\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n\r\n    this._$editorElm = $(`<input type=\"text\" role=\"presentation\" autocomplete=\"off\" class=\"autocomplete editor-text editor-${columnId}\" placeholder=\"${placeholder}\" title=\"${title}\" />`)\r\n      .appendTo(this.args.container)\r\n      .on('keydown.nav', (event: JQuery.Event) => {\r\n        this._lastInputEvent = event;\r\n        if (event.keyCode === KeyCode.LEFT || event.keyCode === KeyCode.RIGHT) {\r\n          event.stopImmediatePropagation();\r\n        }\r\n      });\r\n\r\n    // add a <span> in order to add spinner styling\r\n    $(`<span></span>`).appendTo(this.args.container);\r\n\r\n    // user might pass his own autocomplete options\r\n    const autoCompleteOptions: AutocompleteOption = this.columnEditor.editorOptions;\r\n\r\n    // assign the collection to a temp variable before filtering/sorting the collection\r\n    let finalCollection = collection;\r\n\r\n    // user might provide his own custom structure\r\n    // jQuery UI autocomplete requires a label/value pair, so we must remap them when user provide different ones\r\n    if (Array.isArray(finalCollection)) {\r\n      finalCollection = finalCollection.map((item) => {\r\n        return { label: item[this.labelName], value: item[this.valueName], labelPrefix: item[this.labelPrefixName] || '', labelSuffix: item[this.labelSuffixName] || '' };\r\n      });\r\n    }\r\n\r\n    // keep the final source collection used in the AutoComplete as reference\r\n    this._elementCollection = finalCollection;\r\n\r\n    // when user passes it's own autocomplete options\r\n    // we still need to provide our own \"select\" callback implementation\r\n    if (autoCompleteOptions && autoCompleteOptions.source) {\r\n      autoCompleteOptions.select = (event: Event, ui: { item: any; }) => this.onSelect(event, ui);\r\n      this._autoCompleteOptions = { ...autoCompleteOptions };\r\n\r\n      // when \"renderItem\" is defined, we need to add our custom style CSS class\r\n      if (this._autoCompleteOptions.renderItem) {\r\n        this._autoCompleteOptions.classes = {\r\n          'ui-autocomplete': `autocomplete-custom-${toKebabCase(this._autoCompleteOptions.renderItem.layout)}`\r\n        };\r\n      }\r\n      // create the jQueryUI AutoComplete\r\n      this._$editorElm.autocomplete(this._autoCompleteOptions);\r\n\r\n      // when \"renderItem\" is defined, we need to call the user's custom renderItem template callback\r\n      if (this._autoCompleteOptions.renderItem) {\r\n        this._$editorElm.autocomplete('instance')._renderItem = this.renderCustomItem.bind(this);\r\n      }\r\n    } else {\r\n      const definedOptions: AutocompleteOption = {\r\n        source: finalCollection,\r\n        minLength: 0,\r\n        select: (event: Event, ui: { item: any; }) => this.onSelect(event, ui),\r\n      };\r\n      this._autoCompleteOptions = { ...definedOptions, ...(this.columnEditor.editorOptions as AutocompleteOption) };\r\n      this._$editorElm.autocomplete(this._autoCompleteOptions);\r\n\r\n      // we'll use our own renderer so that it works with label prefix/suffix and also with html rendering when enabled\r\n      this._$editorElm.autocomplete('instance')._renderItem = this.renderCollectionItem.bind(this);\r\n    }\r\n\r\n    // in case the user wants to save even an empty value,\r\n    // we need to subscribe to the onKeyDown event for that use case and clear the current value\r\n    if (this.columnEditor.alwaysSaveOnEnterKey) {\r\n      this._$editorElm.keydown((event: JQuery.Event) => {\r\n        if (event.keyCode === KeyCode.ENTER) {\r\n          this._currentValue = null;\r\n        }\r\n      });\r\n    }\r\n\r\n    // we could optionally trigger a search when clicking on the AutoComplete\r\n    if (this.editorOptions.openSearchListOnFocus) {\r\n      this._$editorElm.click(() => this._$editorElm.autocomplete('search', this._$editorElm.val()));\r\n    }\r\n\r\n    // user might override any of the jQueryUI callback methods\r\n    if (this.columnEditor.callbacks) {\r\n      for (const callback of Object.keys(this.columnEditor.callbacks)) {\r\n        if (typeof this.columnEditor.callbacks[callback] === 'function') {\r\n          this.instance[callback] = this.columnEditor.callbacks[callback];\r\n        }\r\n      }\r\n    }\r\n\r\n    this._$editorElm.on('focus', () => {\r\n      this._$editorElm.select();\r\n\r\n      // we could optionally trigger a search to open the AutoComplete search list\r\n      if (this.editorOptions.openSearchListOnFocus) {\r\n        this._$editorElm.autocomplete('search', this._$editorElm.val());\r\n      }\r\n    });\r\n\r\n    setTimeout(() => this.focus(), 50);\r\n  }\r\n}\r\n","import { Constants } from './../constants';\r\nimport { Column, ColumnEditor, Editor, EditorArguments, EditorValidator, EditorValidatorOutput } from './../models/index';\r\nimport { getDescendantProperty, setDeepValue } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class CheckboxEditor implements Editor {\r\n  private _$input: any;\r\n  originalValue: boolean;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.args.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init(): void {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n\r\n    this._$input = $(`<input type=\"checkbox\" value=\"true\" class=\"editor-checkbox editor-${fieldId}\" title=\"${title}\" />`);\r\n    this._$input.appendTo(this.args.container);\r\n    this.focus();\r\n\r\n    // make the checkbox editor act like a regular checkbox that commit the value on click\r\n    if (this.hasAutoCommitEdit) {\r\n      this._$input.click(() => this.save());\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this._$input.remove();\r\n    this._$input = null;\r\n  }\r\n\r\n  focus(): void {\r\n    this._$input.focus();\r\n  }\r\n\r\n  getValue() {\r\n    return this._$input.prop('checked');\r\n  }\r\n\r\n  setValue(val: boolean | string) {\r\n    const isChecked = val ? true : false;\r\n    this._$input.prop('checked', isChecked);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged() {\r\n    return (this.serializeValue() !== this.originalValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this.originalValue = value;\r\n      if (this.originalValue) {\r\n        this._$input.prop('checked', true);\r\n      } else {\r\n        this._$input.prop('checked', false);\r\n      }\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue(): boolean {\r\n    return this._$input.prop('checked');\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const isRequired = this.columnEditor.required;\r\n    const isChecked = (inputValue !== undefined) ? inputValue : this._$input && this._$input.prop && this._$input.prop('checked');\r\n    const errorMsg = this.columnEditor.errorMessage;\r\n\r\n    if (this.validator) {\r\n      return this.validator(isChecked, this.args);\r\n    }\r\n\r\n    // by default the editor is almost always valid (except when it's required but not provided)\r\n    if (isRequired && !isChecked) {\r\n      return {\r\n        valid: false,\r\n        msg: errorMsg || Constants.VALIDATION_REQUIRED_FIELD\r\n      };\r\n    }\r\n\r\n    return {\r\n      valid: true,\r\n      msg: null\r\n    };\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport * as moment_ from 'moment-mini';\r\nimport { BaseOptions as FlatpickrBaseOptions } from 'flatpickr/dist/types/options';\r\nimport * as _flatpickr from 'flatpickr';\r\nimport { FlatpickrFn } from 'flatpickr/dist/types/instance';\r\nconst flatpickr: FlatpickrFn = _flatpickr as any; // patch for rollup\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\nimport { Constants } from './../constants';\r\nimport { destroyObjectDomElementProps, getDescendantProperty, mapFlatpickrDateFormatWithFieldType, mapMomentDateFormatWithFieldType, setDeepValue } from './../services/utilities';\r\nimport {\r\n  Column,\r\n  ColumnEditor,\r\n  Editor,\r\n  EditorArguments,\r\n  EditorValidator,\r\n  EditorValidatorOutput,\r\n  FieldType,\r\n  FlatpickrOption,\r\n  GridOption,\r\n} from './../models/index';\r\n\r\ndeclare function require(name: string);\r\nrequire('flatpickr');\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/*\r\n * An example of a date picker editor using Flatpickr\r\n * https://chmln.github.io/flatpickr\r\n */\r\nexport class DateEditor implements Editor {\r\n  private _$inputWithData: any;\r\n  private _$input: any;\r\n  private _$editorInputElm: any;\r\n  private _originalDate: string;\r\n  private _pickerMergedOptions: FlatpickrOption;\r\n\r\n  /** The translate library */\r\n  private _translate: TranslateService;\r\n\r\n  flatInstance: any;\r\n  defaultDate: string;\r\n  originalDate: string;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  /** Grid options */\r\n  gridOptions: GridOption;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.gridOptions = (args.grid && args.grid.getOptions() || {}) as GridOption;\r\n    const options = this.gridOptions || this.args.column.params || {};\r\n    if (options && options.i18n instanceof TranslateService) {\r\n      this._translate = options.i18n;\r\n    }\r\n\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  /** Get Flatpickr options passed to the editor by the user */\r\n  get editorOptions(): FlatpickrOption {\r\n    return this.columnEditor.editorOptions || {};\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  get pickerOptions(): FlatpickrOption {\r\n    return this._pickerMergedOptions;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init(): void {\r\n    if (this.args && this.columnDef) {\r\n      const columnId = this.columnDef && this.columnDef.id;\r\n      const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n      const title = this.columnEditor && this.columnEditor.title || '';\r\n      this.defaultDate = (this.args.item) ? this.args.item[this.columnDef.field] : null;\r\n      const inputFormat = mapFlatpickrDateFormatWithFieldType(this.columnEditor.type || this.columnDef.type || FieldType.dateUtc);\r\n      const outputFormat = mapFlatpickrDateFormatWithFieldType(this.columnDef.outputType || this.columnEditor.type || this.columnDef.type || FieldType.dateUtc);\r\n      let currentLocale = this._translate && this._translate.currentLang || this.gridOptions.locale || 'en';\r\n      if (currentLocale && currentLocale.length > 2) {\r\n        currentLocale = currentLocale.substring(0, 2);\r\n      }\r\n\r\n      const pickerOptions: FlatpickrOption = {\r\n        defaultDate: this.defaultDate as string,\r\n        altInput: true,\r\n        altFormat: outputFormat,\r\n        dateFormat: inputFormat,\r\n        closeOnSelect: true,\r\n        wrap: true,\r\n        locale: (currentLocale !== 'en') ? this.loadFlatpickrLocale(currentLocale) : 'en',\r\n        onChange: () => this.save(),\r\n        errorHandler: () => {\r\n          // do nothing, Flatpickr is a little too sensitive and will throw an error when provided date is lower than minDate so just disregard the error completely\r\n        }\r\n      };\r\n\r\n      // merge options with optional user's custom options\r\n      this._pickerMergedOptions = { ...pickerOptions, ...(this.editorOptions as FlatpickrOption) };\r\n      const inputCssClasses = `.editor-text.editor-${columnId}.form-control`;\r\n      if (this._pickerMergedOptions.altInput) {\r\n        this._pickerMergedOptions.altInputClass = 'flatpickr-alt-input form-control';\r\n      }\r\n\r\n      this._$editorInputElm = $(`<div class=\"flatpickr input-group\"></div>`);\r\n      const closeButtonElm = $(`<span class=\"input-group-btn\" data-clear>\r\n          <button class=\"btn btn-default icon-close\" type=\"button\"></button>\r\n        </span>`);\r\n      this._$input = $(`<input type=\"text\" data-input data-defaultDate=\"${this.defaultDate}\" class=\"${inputCssClasses.replace(/\\./g, ' ')}\" placeholder=\"${placeholder}\" title=\"${title}\" />`);\r\n      this._$input.appendTo(this._$editorInputElm);\r\n\r\n      // show clear date button (unless user specifically doesn't want it)\r\n      const isCloseButtonHidden = this.columnEditor && this.columnEditor.params && this.columnEditor.params.hideClearButton || false;\r\n      if (!isCloseButtonHidden) {\r\n        closeButtonElm.appendTo(this._$editorInputElm);\r\n      }\r\n\r\n      this._$editorInputElm.appendTo(this.args.container);\r\n      this.flatInstance = (flatpickr && this._$editorInputElm[0] && typeof this._$editorInputElm[0].flatpickr === 'function') ? this._$editorInputElm[0].flatpickr(this._pickerMergedOptions) : flatpickr(this._$editorInputElm, this._pickerMergedOptions as unknown as Partial<FlatpickrBaseOptions>);\r\n\r\n      // when we're using an alternate input to display data, we'll consider this input as the one to do the focus later on\r\n      // else just use the top one\r\n      this._$inputWithData = (this._pickerMergedOptions && this._pickerMergedOptions.altInput) ? $(`${inputCssClasses}.flatpickr-alt-input`) : this._$input;\r\n\r\n      setTimeout(() => {\r\n        this.show();\r\n        this.focus();\r\n      }, 50);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.hide();\r\n    if (this.flatInstance && typeof this.flatInstance.destroy === 'function') {\r\n      this.flatInstance.destroy();\r\n      if (this.flatInstance.element) {\r\n        setTimeout(() => destroyObjectDomElementProps(this.flatInstance));\r\n      }\r\n      this.flatInstance = null;\r\n    }\r\n    if (this._$editorInputElm) {\r\n      this._$editorInputElm.remove();\r\n      this._$editorInputElm = null;\r\n    }\r\n    if (this._$inputWithData) {\r\n      this._$inputWithData.remove();\r\n      this._$inputWithData = null;\r\n    }\r\n    this._$input.remove();\r\n  }\r\n\r\n  focus() {\r\n    this._$input.focus();\r\n    if (this._$inputWithData && typeof this._$inputWithData.focus === 'function') {\r\n      this._$inputWithData.focus().select();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (this.flatInstance && typeof this.flatInstance.close === 'function') {\r\n      this.flatInstance.close();\r\n    }\r\n  }\r\n\r\n  show() {\r\n    if (this.flatInstance && typeof this.flatInstance.open === 'function' && this.flatInstance._input) {\r\n      this.flatInstance.open();\r\n    }\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$input.val();\r\n  }\r\n\r\n  setValue(val: string) {\r\n    this.flatInstance.setDate(val);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    if (fieldName !== undefined) {\r\n      const outputTypeFormat = mapMomentDateFormatWithFieldType((this.columnDef && (this.columnDef.outputType || this.columnEditor.type || this.columnDef.type)) || FieldType.dateUtc);\r\n      const saveTypeFormat = mapMomentDateFormatWithFieldType((this.columnDef && (this.columnDef.saveOutputType || this.columnDef.outputType || this.columnEditor.type || this.columnDef.type)) || FieldType.dateUtc);\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n      // validate the value before applying it (if not valid we'll set an empty string)\r\n      const validation = this.validate(state);\r\n      const newValue = (state && validation && validation.valid) ? moment(state, outputTypeFormat).format(saveTypeFormat) : '';\r\n\r\n      // set the new value to the item datacontext\r\n      if (isComplexObject) {\r\n        setDeepValue(item, fieldName, newValue);\r\n      } else {\r\n        item[fieldName] = newValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$input.val();\r\n    const inputFormat = mapMomentDateFormatWithFieldType(this.columnEditor.type || (this.columnDef && this.columnDef.type) || FieldType.dateIso);\r\n    const outputTypeFormat = mapMomentDateFormatWithFieldType((this.columnDef && (this.columnDef.outputType || this.columnEditor.type || this.columnDef.type)) || FieldType.dateUtc);\r\n    const elmDateStr = elmValue ? moment(elmValue, inputFormat, false).format(outputTypeFormat) : '';\r\n    const orgDateStr = this._originalDate ? moment(this._originalDate, inputFormat, false).format(outputTypeFormat) : '';\r\n    if (elmDateStr === 'Invalid date' || orgDateStr === 'Invalid date') {\r\n      return false;\r\n    }\r\n\r\n    const isChanged = (!(elmDateStr === '' && orgDateStr === '')) && (elmDateStr !== orgDateStr);\r\n    return isChanged;\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this._originalDate = value;\r\n      this.flatInstance.setDate(value);\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    const domValue: string = this._$input.val();\r\n\r\n    if (!domValue) {\r\n      return '';\r\n    }\r\n\r\n    const inputFormat = mapMomentDateFormatWithFieldType(this.columnEditor.type || (this.columnDef && this.columnDef.type) || FieldType.dateIso);\r\n    const outputTypeFormat = mapMomentDateFormatWithFieldType((this.columnDef && (this.columnDef.outputType || this.columnEditor.type || this.columnDef.type)) || FieldType.dateIso);\r\n    const value = moment(domValue, inputFormat, false).format(outputTypeFormat);\r\n\r\n    return value;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const isRequired = this.columnEditor.required;\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this._$input && this._$input.val && this._$input.val();\r\n    const errorMsg = this.columnEditor.errorMessage;\r\n\r\n    if (this.validator) {\r\n      return this.validator(elmValue, this.args);\r\n    }\r\n\r\n    // by default the editor is almost always valid (except when it's required but not provided)\r\n    if (isRequired && elmValue === '') {\r\n      return {\r\n        valid: false,\r\n        msg: errorMsg || Constants.VALIDATION_REQUIRED_FIELD\r\n      };\r\n    }\r\n\r\n    return {\r\n      valid: true,\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  /** Load a different set of locales for Flatpickr to be localized */\r\n  private loadFlatpickrLocale(language: string) {\r\n    let locales = 'en';\r\n\r\n    if (language !== 'en') {\r\n      // change locale if needed, Flatpickr reference: https://chmln.github.io/flatpickr/localization/\r\n      const localeDefault: any = require(`flatpickr/dist/l10n/${language}.js`).default;\r\n      locales = (localeDefault && localeDefault[language]) ? localeDefault[language] : 'en';\r\n    }\r\n    return locales;\r\n  }\r\n}\r\n","import { Constants } from '../constants';\r\nimport { EditorValidatorOutput } from '../models/editorValidatorOutput.interface';\r\nimport { EditorValidator } from '../models/editorValidator.interface';\r\n\r\ninterface FloatValidatorOptions {\r\n  editorArgs: any;\r\n  decimal?: number;\r\n  errorMessage?: string;\r\n  minValue?: string | number;\r\n  maxValue?: string | number;\r\n  operatorConditionalType?: 'inclusive' | 'exclusive';\r\n  required?: boolean;\r\n  validator?: EditorValidator;\r\n}\r\n\r\nexport function floatValidator(inputValue: any, options: FloatValidatorOptions): EditorValidatorOutput {\r\n  const floatNumber = !isNaN(inputValue as number) ? parseFloat(inputValue) : null;\r\n  const decPlaces = options.decimal || 0;\r\n  const isRequired = options.required;\r\n  const minValue = options.minValue;\r\n  const maxValue = options.maxValue;\r\n  const operatorConditionalType = options.operatorConditionalType || 'inclusive';\r\n  const errorMsg = options.errorMessage;\r\n  const mapValidation = {\r\n    '{{minValue}}': minValue,\r\n    '{{maxValue}}': maxValue,\r\n    '{{minDecimal}}': 0,\r\n    '{{maxDecimal}}': decPlaces\r\n  };\r\n  let isValid = true;\r\n  let outputMsg = '';\r\n\r\n  if (typeof options.validator === 'function') {\r\n    return options.validator(inputValue, options.editorArgs);\r\n  } else if (isRequired && inputValue === '') {\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_REQUIRED_FIELD;\r\n  } else if (inputValue !== '' && (isNaN(inputValue as number) || (decPlaces === 0 && !/^[-+]?(\\d*(\\.)?(\\d)*)$/.test(inputValue)))) {\r\n    // when decimal value is 0 (which is the default), we accept 0 or more decimal values\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_VALID_NUMBER;\r\n  } else if (minValue !== undefined && maxValue !== undefined && floatNumber !== null && ((operatorConditionalType === 'exclusive' && (floatNumber <= minValue || floatNumber >= maxValue)) || (operatorConditionalType === 'inclusive' && (floatNumber < minValue || floatNumber > maxValue)))) {\r\n    // MIN & MAX Values provided\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_NUMBER_BETWEEN.replace(/{{minValue}}|{{maxValue}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (minValue !== undefined && floatNumber !== null && ((operatorConditionalType === 'exclusive' && floatNumber <= minValue) || (operatorConditionalType === 'inclusive' && floatNumber < minValue))) {\r\n    // MIN VALUE ONLY\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_NUMBER_MIN_INCLUSIVE : Constants.VALIDATION_EDITOR_NUMBER_MIN;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{minValue}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (maxValue !== undefined && floatNumber !== null && ((operatorConditionalType === 'exclusive' && floatNumber >= maxValue) || (operatorConditionalType === 'inclusive' && floatNumber > maxValue))) {\r\n    // MAX VALUE ONLY\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_NUMBER_MAX_INCLUSIVE : Constants.VALIDATION_EDITOR_NUMBER_MAX;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{maxValue}}/gi, (matched) => mapValidation[matched]);\r\n  } else if ((decPlaces > 0 && !new RegExp(`^[-+]?(\\\\d*(\\\\.)?(\\\\d){0,${decPlaces}})$`).test(inputValue))) {\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_DECIMAL_BETWEEN.replace(/{{minDecimal}}|{{maxDecimal}}/gi, (matched) => mapValidation[matched]);\r\n  }\r\n\r\n  return { valid: isValid, msg: outputMsg };\r\n}\r\n","import { Constants } from '../constants';\r\nimport { EditorValidatorOutput } from '../models/editorValidatorOutput.interface';\r\nimport { EditorValidator } from '../models/editorValidator.interface';\r\n\r\ninterface IntegerValidatorOptions {\r\n  editorArgs: any;\r\n  errorMessage?: string;\r\n  minValue?: string | number;\r\n  maxValue?: string | number;\r\n  operatorConditionalType?: 'inclusive' | 'exclusive';\r\n  required?: boolean;\r\n  validator?: EditorValidator;\r\n}\r\n\r\nexport function integerValidator(inputValue: any, options: IntegerValidatorOptions): EditorValidatorOutput {\r\n  let intNumber = !isNaN(inputValue as number) ? parseInt(inputValue, 10) : null;\r\n  if (intNumber !== null && isNaN(intNumber)) {\r\n    intNumber = null;\r\n  }\r\n  const errorMsg = options.errorMessage;\r\n  const isRequired = options.required;\r\n  const minValue = options.minValue;\r\n  const maxValue = options.maxValue;\r\n  const operatorConditionalType = options.operatorConditionalType || 'inclusive';\r\n  const mapValidation = {\r\n    '{{minValue}}': minValue,\r\n    '{{maxValue}}': maxValue\r\n  };\r\n  let isValid = true;\r\n  let outputMsg = '';\r\n\r\n  if (options.validator) {\r\n    return options.validator(inputValue, options.editorArgs);\r\n  } else if (isRequired && inputValue === '') {\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_REQUIRED_FIELD;\r\n  } else if (inputValue !== '' && ((isNaN(inputValue as number) || !/^[+-]?\\d+$/.test(inputValue)))) {\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_VALID_INTEGER;\r\n  } else if (minValue !== undefined && maxValue !== undefined && intNumber !== null && ((operatorConditionalType === 'exclusive' && (intNumber <= minValue || intNumber >= maxValue)) || (operatorConditionalType === 'inclusive' && (intNumber < minValue || intNumber > maxValue)))) {\r\n    // MIN & MAX Values provided (between)\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    isValid = false;\r\n    outputMsg = errorMsg || Constants.VALIDATION_EDITOR_INTEGER_BETWEEN.replace(/{{minValue}}|{{maxValue}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (minValue !== undefined && intNumber !== null && ((operatorConditionalType === 'exclusive' && intNumber <= minValue) || (operatorConditionalType === 'inclusive' && intNumber !== null && intNumber < minValue))) {\r\n    // MIN VALUE ONLY\r\n    // when decimal value has to be higher then provided minValue\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_INTEGER_MIN_INCLUSIVE : Constants.VALIDATION_EDITOR_INTEGER_MIN;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{minValue}}/gi, (matched) => mapValidation[matched]);\r\n  } else if (maxValue !== undefined && intNumber !== null && ((operatorConditionalType === 'exclusive' && intNumber >= maxValue) || (operatorConditionalType === 'inclusive' && intNumber !== null && intNumber > maxValue))) {\r\n    // MAX VALUE ONLY\r\n    // when decimal value has to be lower then provided maxValue\r\n    isValid = false;\r\n    const defaultErrorMsg = operatorConditionalType === 'inclusive' ? Constants.VALIDATION_EDITOR_INTEGER_MAX_INCLUSIVE : Constants.VALIDATION_EDITOR_INTEGER_MAX;\r\n    outputMsg = errorMsg || defaultErrorMsg.replace(/{{maxValue}}/gi, (matched) => mapValidation[matched]);\r\n  }\r\n\r\n  return { valid: isValid, msg: outputMsg };\r\n}\r\n","import { Constants } from '../constants';\r\nimport { EditorValidatorOutput } from '../models/editorValidatorOutput.interface';\r\nimport { EditorValidator } from '../models/editorValidator.interface';\r\n\r\ninterface SliderValidatorOptions {\r\n  editorArgs: any;\r\n  errorMessage?: string;\r\n  minValue?: string | number;\r\n  maxValue?: string | number;\r\n  required?: boolean;\r\n  validator?: EditorValidator;\r\n}\r\n\r\nexport function sliderValidator(inputValue: any, options: SliderValidatorOptions): EditorValidatorOutput {\r\n  const isRequired = options.required;\r\n  const minValue = options.minValue;\r\n  const maxValue = options.maxValue;\r\n  const errorMsg = options.errorMessage;\r\n  const mapValidation = {\r\n    '{{minValue}}': minValue,\r\n    '{{maxValue}}': maxValue\r\n  };\r\n\r\n  if (options.validator) {\r\n    return options.validator(inputValue, options.editorArgs);\r\n  } else if (isRequired && inputValue === '') {\r\n    return {\r\n      valid: false,\r\n      msg: errorMsg || Constants.VALIDATION_REQUIRED_FIELD\r\n    };\r\n  } else if (minValue !== undefined && maxValue !== undefined && inputValue !== null && (inputValue < minValue || inputValue > maxValue)) {\r\n    // when decimal value is bigger than 0, we only accept the decimal values as that value set\r\n    // for example if we set decimalPlaces to 2, we will only accept numbers between 0 and 2 decimals\r\n    return {\r\n      valid: false,\r\n      msg: errorMsg || Constants.VALIDATION_EDITOR_NUMBER_BETWEEN.replace(/{{minValue}}|{{maxValue}}/gi, (matched) => {\r\n        return mapValidation[matched];\r\n      })\r\n    };\r\n  }\r\n\r\n  return { valid: true, msg: null };\r\n}\r\n","import {\r\n  DOMEvent,\r\n  Column,\r\n  ColumnEditor,\r\n  ColumnEditorDualInput,\r\n  Editor,\r\n  EditorArguments,\r\n  EditorValidator,\r\n  EditorValidatorOutput,\r\n  GridOption,\r\n  KeyCode,\r\n  SlickEventHandler,\r\n} from '../models/index';\r\nimport { BindingEventService } from '../services/bindingEvent.service';\r\nimport { getDescendantProperty, setDeepValue } from '../services/utilities';\r\nimport { floatValidator, integerValidator, textValidator } from '../editorValidators';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class DualInputEditor implements Editor {\r\n  private _bindEventService: BindingEventService;\r\n  private _eventHandler: SlickEventHandler;\r\n  private _isValueSaveCalled = false;\r\n  private _lastEventType: string | undefined;\r\n  private _lastInputKeyEvent: JQuery.Event;\r\n  private _leftInput: HTMLInputElement;\r\n  private _rightInput: HTMLInputElement;\r\n  private _leftFieldName: string;\r\n  private _rightFieldName: string;\r\n  originalLeftValue: string | number;\r\n  originalRightValue: string | number;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  /** Grid options */\r\n  gridOptions: GridOption;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-Slickgrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.gridOptions = (this.grid.getOptions() || {}) as GridOption;\r\n    this._eventHandler = new Slick.EventHandler();\r\n    this._bindEventService = new BindingEventService();\r\n    this.init();\r\n    this._eventHandler.subscribe(this.grid.onValidationError, () => this._isValueSaveCalled = true);\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): { leftInput: HTMLInputElement, rightInput: HTMLInputElement } {\r\n    return { leftInput: this._leftInput, rightInput: this._rightInput };\r\n  }\r\n\r\n  get editorParams(): ColumnEditorDualInput {\r\n    return this.columnEditor.params || {};\r\n  }\r\n\r\n  get eventHandler(): SlickEventHandler {\r\n    return this._eventHandler;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  get isValueSaveCalled(): boolean {\r\n    return this._isValueSaveCalled;\r\n  }\r\n\r\n  /** Get the Shared Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator | undefined {\r\n    return (this.columnEditor && this.columnEditor.validator) || (this.columnDef && this.columnDef.validator);\r\n  }\r\n\r\n  init() {\r\n    if (!this.editorParams || !this.editorParams.leftInput || !this.editorParams.leftInput.field || !this.editorParams.rightInput || !this.editorParams.rightInput.field) {\r\n      throw new Error(`[Angular-Slickgrid] Please make sure that your Combo Input Editor has params defined with \"leftInput\" and \"rightInput\" (example: { editor: { model: Editors.comboInput, params: { leftInput: { field: 'firstName' }, { rightSide: { field: 'lastName' } }}}`);\r\n    }\r\n    this._leftFieldName = this.editorParams && this.editorParams.leftInput && this.editorParams.leftInput.field;\r\n    this._rightFieldName = this.editorParams && this.editorParams.rightInput && this.editorParams.rightInput.field;\r\n    this._leftInput = this.createInput('leftInput');\r\n    this._rightInput = this.createInput('rightInput');\r\n\r\n    const containerElm = this.args.container;\r\n    if (containerElm && typeof containerElm.appendChild === 'function') {\r\n      containerElm.appendChild(this._leftInput);\r\n      containerElm.appendChild(this._rightInput);\r\n    }\r\n\r\n    this._leftInput.onkeydown = this.handleKeyDown.bind(this);\r\n    this._rightInput.onkeydown = this.handleKeyDown.bind(this);\r\n\r\n    // the lib does not get the focus out event for some reason, so register it here\r\n    if (this.hasAutoCommitEdit) {\r\n      this._bindEventService.bind(this._leftInput, 'focusout', (event: DOMEvent<HTMLInputElement>) => this.handleFocusOut(event, 'leftInput'));\r\n      this._bindEventService.bind(this._rightInput, 'focusout', (event: DOMEvent<HTMLInputElement>) => this.handleFocusOut(event, 'rightInput'));\r\n    }\r\n\r\n    setTimeout(() => this._leftInput.select(), 50);\r\n  }\r\n\r\n  handleFocusOut(event: DOMEvent<HTMLInputElement>, position: 'leftInput' | 'rightInput') {\r\n    // when clicking outside the editable cell OR when focusing out of it\r\n    const targetClassNames = event.relatedTarget && event.relatedTarget.className || '';\r\n    if (targetClassNames.indexOf('dual-editor') === -1 && this._lastEventType !== 'focusout-right') {\r\n      if (position === 'rightInput' || (position === 'leftInput' && this._lastEventType !== 'focusout-left')) {\r\n        this.save();\r\n      }\r\n    }\r\n    const side = (position === 'leftInput') ? 'left' : 'right';\r\n    this._lastEventType = `${event && event.type}-${side}`;\r\n  }\r\n\r\n  handleKeyDown(event: JQuery.Event) {\r\n    this._lastInputKeyEvent = event;\r\n    if (event.keyCode === KeyCode.LEFT || event.keyCode === KeyCode.RIGHT || event.keyCode === KeyCode.TAB) {\r\n      event.stopImmediatePropagation();\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    // unsubscribe all SlickGrid events\r\n    this._eventHandler.unsubscribeAll();\r\n    this._bindEventService.unbindAll();\r\n  }\r\n\r\n  createInput(position: 'leftInput' | 'rightInput'): HTMLInputElement {\r\n    const editorSideParams = this.editorParams[position];\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const idPropName = this.gridOptions.datasetIdPropertyName || 'id';\r\n    const itemId = this.args && this.args.item && this.args.item[idPropName] || 0;\r\n\r\n    let fieldType: string = editorSideParams.type || 'text';\r\n    if (fieldType === 'float' || fieldType === 'integer') {\r\n      fieldType = 'number';\r\n    }\r\n\r\n    const input = document.createElement('input') as HTMLInputElement;\r\n    input.id = `item-${itemId}-${position}`;\r\n    input.className = `dual-editor-text editor-${columnId} ${position.replace(/input/gi, '')}`;\r\n    if (fieldType === 'readonly') {\r\n      // when the custom type is defined as readonly, we'll make a readonly text input\r\n      input.readOnly = true;\r\n      fieldType = 'text';\r\n    }\r\n    input.type = fieldType || 'text';\r\n    input.setAttribute('role', 'presentation');\r\n    input.autocomplete = 'off';\r\n    input.placeholder = editorSideParams.placeholder || '';\r\n    input.title = editorSideParams.title || '';\r\n    if (fieldType === 'number') {\r\n      input.step = this.getInputDecimalSteps(position);\r\n    }\r\n    return input;\r\n  }\r\n\r\n  focus() {\r\n    // do nothing since we have 2 inputs and we might focus on left/right depending on which is invalid and/or new\r\n  }\r\n\r\n  getValues(): { [fieldName: string]: string | number } {\r\n    const obj = {};\r\n    const leftInputValue = this._leftInput.value;\r\n    const rightInputValue = this._rightInput.value;\r\n    const isLeftInputTypeNumber = (this.editorParams.leftInput && (this.editorParams.leftInput.type === 'float' || this.editorParams.leftInput.type === 'integer'));\r\n    const isRightInputTypeNumber = (this.editorParams.rightInput && (this.editorParams.rightInput.type === 'float' || this.editorParams.rightInput.type === 'integer'));\r\n    const resultLeftValue = (leftInputValue !== '' && isLeftInputTypeNumber) ? +this._leftInput.value : (leftInputValue || '');\r\n    const resultRightValue = (rightInputValue !== '' && isRightInputTypeNumber) ? +this._rightInput.value : (rightInputValue || '');\r\n    setDeepValue(obj, this._leftFieldName, resultLeftValue);\r\n    setDeepValue(obj, this._rightFieldName, resultRightValue);\r\n\r\n    return obj;\r\n  }\r\n\r\n  setValues(values: Array<number | string>) {\r\n    if (Array.isArray(values) && values.length === 2) {\r\n      this._leftInput.value = `${values[0]}`;\r\n      this._rightInput.value = `${values[1]}`;\r\n    }\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    this.applyValueByPosition(item, state, 'leftInput');\r\n    this.applyValueByPosition(item, state, 'rightInput');\r\n  }\r\n\r\n  applyValueByPosition(item: any, state: any, position: 'leftInput' | 'rightInput') {\r\n    const fieldName = position === 'leftInput' ? this._leftFieldName : this._rightFieldName;\r\n    if (fieldName !== undefined) {\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n      let fieldNameToUse = fieldName;\r\n      if (isComplexObject) {\r\n        const complexFieldNames = fieldName.split(/\\.(.*)/);\r\n        fieldNameToUse = (complexFieldNames.length > 1 ? complexFieldNames[1] : complexFieldNames) as string;\r\n      }\r\n\r\n      // validate the value before applying it (if not valid we'll set an empty string)\r\n      const stateValue = isComplexObject ? getDescendantProperty(state, fieldNameToUse) : state[fieldName];\r\n      const validation = this.validate({ position, inputValue: stateValue });\r\n\r\n      // set the new value to the item datacontext\r\n      if (isComplexObject) {\r\n        const newValueFromComplex = getDescendantProperty(state, fieldNameToUse);\r\n        const newValue = (validation && validation.valid) ? newValueFromComplex : '';\r\n        setDeepValue(item, fieldName, newValue);\r\n      } else if (fieldName) {\r\n        item[fieldName] = (validation && validation.valid) ? state[fieldName] : '';\r\n      }\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const leftElmValue = this._leftInput.value;\r\n    const rightElmValue = this._rightInput.value;\r\n    const leftEditorParams = this.editorParams && this.editorParams.leftInput;\r\n    const rightEditorParams = this.editorParams && this.editorParams.rightInput;\r\n    const lastKeyEvent = this._lastInputKeyEvent && this._lastInputKeyEvent.keyCode;\r\n    if ((leftEditorParams && leftEditorParams.alwaysSaveOnEnterKey || rightEditorParams && rightEditorParams.alwaysSaveOnEnterKey) && lastKeyEvent === KeyCode.ENTER) {\r\n      return true;\r\n    }\r\n    const leftResult = (!(leftElmValue === '' && (this.originalLeftValue === null || this.originalLeftValue === undefined))) && (leftElmValue !== this.originalLeftValue);\r\n    const rightResult = (!(rightElmValue === '' && (this.originalRightValue === null || this.originalRightValue === undefined))) && (rightElmValue !== this.originalRightValue);\r\n    return leftResult || rightResult;\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    this.loadValueByPosition(item, 'leftInput');\r\n    this.loadValueByPosition(item, 'rightInput');\r\n    this._leftInput.select();\r\n  }\r\n\r\n  loadValueByPosition(item: any, position: 'leftInput' | 'rightInput') {\r\n    // is the field a complex object, \"address.streetNumber\"\r\n    const fieldName = (position === 'leftInput') ? this._leftFieldName : this._rightFieldName;\r\n    const originalValuePosition = (position === 'leftInput') ? 'originalLeftValue' : 'originalRightValue';\r\n    const inputVarPosition = (position === 'leftInput') ? '_leftInput' : '_rightInput';\r\n\r\n    if (item && fieldName !== undefined) {\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const itemValue = (isComplexObject) ? getDescendantProperty(item, fieldName) : (item.hasOwnProperty(fieldName) ? item[fieldName] : '');\r\n      this[originalValuePosition] = itemValue;\r\n      if (this.editorParams[position].type === 'float') {\r\n        const decimalPlaces = this.getDecimalPlaces(position);\r\n        if (decimalPlaces !== null && (this[originalValuePosition] || this[originalValuePosition] === 0) && (+this[originalValuePosition]).toFixed) {\r\n          this[originalValuePosition] = (+this[originalValuePosition]).toFixed(decimalPlaces);\r\n        }\r\n      }\r\n      if (this[inputVarPosition]) {\r\n        const originalValue = this[originalValuePosition];\r\n        this[inputVarPosition].value = `${originalValue}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (!this._isValueSaveCalled) {\r\n      if (this.hasAutoCommitEdit && isValid) {\r\n        this.grid.getEditorLock().commitCurrentEdit();\r\n      } else {\r\n        this.args.commitChanges();\r\n      }\r\n      this._isValueSaveCalled = true;\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    const obj = {};\r\n    const leftValue = this.serializeValueByPosition('leftInput');\r\n    const rightValue = this.serializeValueByPosition('rightInput');\r\n\r\n    setDeepValue(obj, this._leftFieldName, leftValue);\r\n    setDeepValue(obj, this._rightFieldName, rightValue);\r\n\r\n    return obj;\r\n  }\r\n\r\n  serializeValueByPosition(position: 'leftInput' | 'rightInput') {\r\n    const elmValue = position === 'leftInput' ? this._leftInput.value : this._rightInput.value;\r\n    if (elmValue === '' || isNaN(+elmValue)) {\r\n      return elmValue;\r\n    }\r\n\r\n    let rtn = parseFloat(elmValue);\r\n    const decPlaces = this.getDecimalPlaces(position);\r\n    if (decPlaces !== null && (rtn || rtn === 0) && rtn.toFixed) {\r\n      rtn = parseFloat(rtn.toFixed(decPlaces));\r\n    }\r\n\r\n    return rtn;\r\n  }\r\n\r\n  getDecimalPlaces(position: 'leftInput' | 'rightInput'): number {\r\n    const defaultDecimalPlaces = 0; // TODO move into a constant\r\n\r\n    // returns the number of fixed decimal places or null\r\n    const positionSide = position === 'leftInput' ? 'leftInput' : 'rightInput';\r\n    const sideParams = this.editorParams[positionSide];\r\n    const rtn: number | undefined = sideParams && sideParams.decimal;\r\n\r\n    if (rtn === undefined) {\r\n      return defaultDecimalPlaces;\r\n    }\r\n    return rtn;\r\n  }\r\n\r\n  getInputDecimalSteps(position: 'leftInput' | 'rightInput'): string {\r\n    const decimals = this.getDecimalPlaces(position);\r\n    let zeroString = '';\r\n    for (let i = 1; i < decimals; i++) {\r\n      zeroString += '0';\r\n    }\r\n\r\n    if (decimals > 0) {\r\n      return `0.${zeroString}1`;\r\n    }\r\n    return '1';\r\n  }\r\n\r\n  validate(inputValidation?: { position: 'leftInput' | 'rightInput', inputValue: any }): EditorValidatorOutput {\r\n    if (inputValidation) {\r\n      const posValidation = this.validateByPosition(inputValidation.position, inputValidation.inputValue);\r\n      if (!posValidation.valid) {\r\n        inputValidation.position === 'leftInput' ? this._leftInput.select() : this._rightInput.select();\r\n        return posValidation;\r\n      }\r\n    } else {\r\n      const leftValidation = this.validateByPosition('leftInput');\r\n      const rightValidation = this.validateByPosition('rightInput');\r\n\r\n      if (!leftValidation.valid) {\r\n        this._leftInput.select();\r\n        return leftValidation;\r\n      }\r\n      if (!rightValidation.valid) {\r\n        this._rightInput.select();\r\n        return rightValidation;\r\n      }\r\n    }\r\n    return { valid: true, msg: '' };\r\n  }\r\n\r\n  validateByPosition(position: 'leftInput' | 'rightInput', inputValue?: any): EditorValidatorOutput {\r\n    const positionEditorParams = this.editorParams[position];\r\n    let currentVal: any = '';\r\n    if (inputValue) {\r\n      currentVal = inputValue;\r\n    } else {\r\n      const input = position === 'leftInput' ? this._leftInput : this._rightInput;\r\n      currentVal = input && input.value;\r\n    }\r\n\r\n    // there are 2 ways of passing a Validator, 1-independent validator on each side, 2-shared validator\r\n    const commonValidator = this.validator;\r\n    currentVal = typeof commonValidator === 'function' ? this.getValues() : currentVal;\r\n    const baseValidatorOptions = {\r\n      editorArgs: this.args,\r\n      errorMessage: positionEditorParams.errorMessage,\r\n      required: positionEditorParams.required,\r\n      validator: typeof commonValidator === 'function' ? commonValidator : positionEditorParams.validator,\r\n    };\r\n\r\n    switch (positionEditorParams.type) {\r\n      case 'float':\r\n        return floatValidator(currentVal, {\r\n          ...baseValidatorOptions,\r\n          decimal: this.getDecimalPlaces(position),\r\n          minValue: positionEditorParams.minValue,\r\n          maxValue: positionEditorParams.maxValue,\r\n          operatorConditionalType: positionEditorParams.operatorConditionalType,\r\n        });\r\n      case 'integer':\r\n        return integerValidator(currentVal, {\r\n          ...baseValidatorOptions,\r\n          minValue: positionEditorParams.minValue,\r\n          maxValue: positionEditorParams.maxValue,\r\n          operatorConditionalType: positionEditorParams.operatorConditionalType,\r\n        });\r\n      case 'text':\r\n      case 'password':\r\n      default:\r\n        return textValidator(currentVal, baseValidatorOptions);\r\n    }\r\n  }\r\n}\r\n","import { Column, ColumnEditor, Editor, EditorArguments, EditorValidator, EditorValidatorOutput, KeyCode } from './../models/index';\r\nimport { setDeepValue, getDescendantProperty } from '../services/utilities';\r\nimport { floatValidator } from '../editorValidators/floatValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nconst defaultDecimalPlaces = 0;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class FloatEditor implements Editor {\r\n  private _lastInputEvent: JQuery.Event;\r\n  private _$input: any;\r\n  originalValue: number | string;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid && this.grid.getOptions && this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init() {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n\r\n    this._$input = $(`<input type=\"number\" role=\"presentation\" autocomplete=\"off\" class=\"editor-text editor-${columnId}\" placeholder=\"${placeholder}\" title=\"${title}\" step=\"${this.getInputDecimalSteps()}\" />`)\r\n      .appendTo(this.args.container)\r\n      .on('keydown.nav', (event: JQuery.Event) => {\r\n        this._lastInputEvent = event;\r\n        if (event.keyCode === KeyCode.LEFT || event.keyCode === KeyCode.RIGHT) {\r\n          event.stopImmediatePropagation();\r\n        }\r\n      });\r\n\r\n    // the lib does not get the focus out event for some reason\r\n    // so register it here\r\n    if (this.hasAutoCommitEdit) {\r\n      this._$input.on('focusout', () => this.save());\r\n    }\r\n\r\n    setTimeout(() => this.focus(), 50);\r\n  }\r\n\r\n  destroy() {\r\n    if (this._$input) {\r\n      this._$input.off('keydown.nav').remove();\r\n      this._$input = null;\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    if (this._$input) {\r\n      this._$input.focus();\r\n    }\r\n  }\r\n\r\n  getDecimalPlaces(): number {\r\n    // returns the number of fixed decimal places or null\r\n    let rtn = (this.columnEditor.params && this.columnEditor.params.hasOwnProperty('decimalPlaces')) ? this.columnEditor.params.decimalPlaces : undefined;\r\n\r\n    if (rtn === undefined) {\r\n      rtn = defaultDecimalPlaces;\r\n    }\r\n    return (!rtn && rtn !== 0 ? null : rtn);\r\n  }\r\n\r\n  getInputDecimalSteps(): string {\r\n    const decimals = this.getDecimalPlaces();\r\n    let zeroString = '';\r\n    for (let i = 1; i < decimals; i++) {\r\n      zeroString += '0';\r\n    }\r\n\r\n    if (decimals > 0) {\r\n      return `0.${zeroString}1`;\r\n    }\r\n    return '1';\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$input.val() || '';\r\n  }\r\n\r\n  setValue(value: number | string) {\r\n    this._$input.val(value);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$input.val();\r\n    const lastKeyEvent = this._lastInputEvent && this._lastInputEvent.keyCode;\r\n    if (this.columnEditor && this.columnEditor.alwaysSaveOnEnterKey && lastKeyEvent === KeyCode.ENTER) {\r\n      return true;\r\n    }\r\n    return (!(elmValue === '' && (this.originalValue === null || this.originalValue === undefined))) && (elmValue !== this.originalValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this.originalValue = value;\r\n      const decPlaces = this.getDecimalPlaces();\r\n      if (decPlaces !== null && (this.originalValue || this.originalValue === 0) && (+this.originalValue).toFixed) {\r\n        this.originalValue = (+this.originalValue).toFixed(decPlaces);\r\n      }\r\n      this._$input.val(this.originalValue);\r\n      this._$input.select();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    const elmValue = this._$input.val();\r\n    if (elmValue === '' || isNaN(elmValue)) {\r\n      return elmValue;\r\n    }\r\n\r\n    let rtn = parseFloat(elmValue);\r\n    const decPlaces = this.getDecimalPlaces();\r\n    if (decPlaces !== null && (rtn || rtn === 0) && rtn.toFixed) {\r\n      rtn = parseFloat(rtn.toFixed(decPlaces));\r\n    }\r\n\r\n    return rtn;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const elmValue = (inputValue !== undefined) ? inputValue : (this._$input && this._$input.val && this._$input.val());\r\n    return floatValidator(elmValue, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      decimal: this.getDecimalPlaces(),\r\n      minValue: this.columnEditor.minValue,\r\n      maxValue: this.columnEditor.maxValue,\r\n      operatorConditionalType: this.columnEditor.operatorConditionalType,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n}\r\n","import { Column, ColumnEditor, Editor, EditorArguments, EditorValidator, EditorValidatorOutput, KeyCode } from './../models/index';\r\nimport { getDescendantProperty, setDeepValue } from '../services/utilities';\r\nimport { integerValidator } from '../editorValidators/integerValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class IntegerEditor implements Editor {\r\n  private _lastInputEvent: JQuery.Event;\r\n  private _$input: any;\r\n  originalValue: number | string;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.args && this.grid && this.grid.getOptions && this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init() {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n\r\n    this._$input = $(`<input type=\"number\" role=\"presentation\" autocomplete=\"off\" class=\"editor-text editor-${columnId}\" placeholder=\"${placeholder}\" title=\"${title}\" />`)\r\n      .appendTo(this.args.container)\r\n      .on('keydown.nav', (event: JQuery.Event) => {\r\n        this._lastInputEvent = event;\r\n        if (event.keyCode === KeyCode.LEFT || event.keyCode === KeyCode.RIGHT) {\r\n          event.stopImmediatePropagation();\r\n        }\r\n      });\r\n\r\n    // the lib does not get the focus out event for some reason\r\n    // so register it here\r\n    if (this.hasAutoCommitEdit) {\r\n      this._$input.on('focusout', () => this.save());\r\n    }\r\n\r\n    setTimeout(() => this.focus(), 50);\r\n  }\r\n\r\n  destroy() {\r\n    this._$input.off('keydown.nav focusout').remove();\r\n    this._$input = null;\r\n  }\r\n\r\n  focus() {\r\n    if (this._$input) {\r\n      this._$input.focus();\r\n    }\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$input.val() || '';\r\n  }\r\n\r\n  setValue(value: number | string) {\r\n    this._$input.val(value);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$input.val();\r\n    const lastKeyEvent = this._lastInputEvent && this._lastInputEvent.keyCode;\r\n    if (this.columnEditor && this.columnEditor.alwaysSaveOnEnterKey && lastKeyEvent === KeyCode.ENTER) {\r\n      return true;\r\n    }\r\n    return (!(elmValue === '' && (this.originalValue === null || this.originalValue === undefined))) && (elmValue !== this.originalValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this.originalValue = (isNaN(value) || value === null || value === undefined) ? value : `${value}`;\r\n      this._$input.val(this.originalValue);\r\n      this._$input.select();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    const elmValue = this._$input.val();\r\n    if (elmValue === '' || isNaN(elmValue)) {\r\n      return elmValue;\r\n    }\r\n    const output = isNaN(elmValue) ? elmValue : parseInt(elmValue, 10);\r\n    return isNaN(output) ? elmValue : output;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this.getValue();\r\n    return integerValidator(elmValue, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      minValue: this.columnEditor.minValue,\r\n      maxValue: this.columnEditor.maxValue,\r\n      operatorConditionalType: this.columnEditor.operatorConditionalType,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { Constants } from './../constants';\r\nimport {\r\n  Column,\r\n  ColumnEditor,\r\n  Editor,\r\n  EditorArguments,\r\n  EditorValidator,\r\n  EditorValidatorOutput,\r\n  GridOption,\r\n  HtmlElementPosition,\r\n  KeyCode,\r\n  Locale,\r\n} from './../models/index';\r\nimport { getDescendantProperty, getHtmlElementOffset, getTranslationPrefix, setDeepValue } from '../services/utilities';\r\nimport { textValidator } from '../editorValidators/textValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\nconst DEFAULT_MAX_LENGTH = 500;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class LongTextEditor implements Editor {\r\n  private _locales: Locale;\r\n  private _$textarea: any;\r\n  private _$currentLengthElm: any;\r\n  private _$wrapper: any;\r\n  defaultValue: any;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  /** Grid options */\r\n  gridOptions: GridOption;\r\n\r\n  /** The translate library */\r\n  private _translate: TranslateService;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.gridOptions = args.grid && args.grid.getOptions() as GridOption;\r\n    const options = this.gridOptions || this.args.column.params || {};\r\n    if (options && options.i18n instanceof TranslateService) {\r\n      this._translate = options.i18n;\r\n    }\r\n    // get locales provided by user in forRoot or else use default English locales via the Constants\r\n    this._locales = this.gridOptions && this.gridOptions.locales || Constants.locales;\r\n\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$textarea;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator | undefined {\r\n    return (this.columnEditor && this.columnEditor.validator) || (this.columnDef && this.columnDef.validator);\r\n  }\r\n\r\n  init(): void {\r\n    let cancelText = '';\r\n    let saveText = '';\r\n\r\n    if (this._translate && this._translate.instant && this._translate.currentLang) {\r\n      const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n      cancelText = this._translate.instant(`${translationPrefix}CANCEL`);\r\n      saveText = this._translate.instant(`${translationPrefix}SAVE`);\r\n    } else {\r\n      cancelText = this._locales && this._locales.TEXT_CANCEL;\r\n      saveText = this._locales && this._locales.TEXT_SAVE;\r\n    }\r\n\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n    const maxLength = this.columnEditor && this.columnEditor.maxLength || DEFAULT_MAX_LENGTH;\r\n    const textAreaRows = this.columnEditor && this.columnEditor.params && this.columnEditor.params.textAreaRows || 6;\r\n\r\n    const $container = $('body');\r\n    this._$wrapper = $(`<div class=\"slick-large-editor-text editor-${columnId}\" />`).appendTo($container);\r\n    this._$textarea = $(`<textarea hidefocus rows=\"${textAreaRows}\" placeholder=\"${placeholder}\" title=\"${title}\">`).appendTo(this._$wrapper);\r\n\r\n    const editorFooterElm = $(`<div class=\"editor-footer\"/>`);\r\n    const countContainerElm = $(`<span class=\"counter\"/>`);\r\n    this._$currentLengthElm = $(`<span class=\"text-length\">0</span>`);\r\n    const textMaxLengthElm = $(`<span>/</span><span class=\"max-length\">${maxLength}</span>`);\r\n    this._$currentLengthElm.appendTo(countContainerElm);\r\n    textMaxLengthElm.appendTo(countContainerElm);\r\n\r\n    const cancelBtnElm = $(`<button class=\"btn btn-cancel btn-default btn-xs\">${cancelText}</button>`);\r\n    const saveBtnElm = $(`<button class=\"btn btn-save btn-primary btn-xs\">${saveText}</button>`);\r\n    countContainerElm.appendTo(editorFooterElm);\r\n    cancelBtnElm.appendTo(editorFooterElm);\r\n    saveBtnElm.appendTo(editorFooterElm);\r\n    editorFooterElm.appendTo(this._$wrapper);\r\n\r\n    this._$wrapper.find('.btn-save').on('click', () => this.save());\r\n    this._$wrapper.find('.btn-cancel').on('click', () => this.cancel());\r\n    this._$textarea.on('keydown', this.handleKeyDown.bind(this));\r\n    this._$textarea.on('input', this.handleOnInputChange.bind(this));\r\n\r\n    this.position(this.args && this.args.position);\r\n    this._$textarea.focus().select();\r\n  }\r\n\r\n  cancel() {\r\n    const value = this.defaultValue || '';\r\n    this._$textarea.val(value);\r\n    this._$currentLengthElm.text(value.length);\r\n    if (this.args && this.args.cancelChanges) {\r\n      this.args.cancelChanges();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this._$wrapper.hide();\r\n  }\r\n\r\n  show() {\r\n    this._$wrapper.show();\r\n  }\r\n\r\n  destroy() {\r\n    if (this._$textarea) {\r\n      this._$textarea.off('keydown');\r\n      this._$textarea.off('input');\r\n    }\r\n    if (this._$wrapper) {\r\n      this._$wrapper.find('.btn-save').off('click');\r\n      this._$wrapper.find('.btn-cancel').off('click');\r\n      this._$wrapper.remove();\r\n    }\r\n    this._$wrapper = null;\r\n  }\r\n\r\n  focus() {\r\n    this._$textarea.focus();\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$textarea.val();\r\n  }\r\n\r\n  setValue(val: string) {\r\n    this._$textarea.val(val);\r\n    this._$currentLengthElm.text(val.length);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$textarea.val();\r\n    return (!(elmValue === '' && (this.defaultValue === null || this.defaultValue === undefined))) && (elmValue !== this.defaultValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this.defaultValue = value || '';\r\n      this._$textarea.val(this.defaultValue);\r\n      this._$currentLengthElm.text(this.defaultValue.length);\r\n      this._$textarea[0].defaultValue = this.defaultValue;\r\n      this._$textarea.select();\r\n    }\r\n  }\r\n\r\n  position(parentPosition: HtmlElementPosition) {\r\n    const containerOffset = getHtmlElementOffset(this.args.container);\r\n\r\n    this._$wrapper\r\n      .css('top', (containerOffset.top || parentPosition.top || 0))\r\n      .css('left', (containerOffset.left || parentPosition.left || 0));\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    return this._$textarea.val();\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this._$textarea && this._$textarea.val && this._$textarea.val();\r\n    return textValidator(elmValue, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      minLength: this.columnEditor.minLength,\r\n      maxLength: this.columnEditor.maxLength,\r\n      operatorConditionalType: this.columnEditor.operatorConditionalType,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n\r\n  // --\r\n  // private functions\r\n  // ------------------\r\n\r\n  private handleKeyDown(event: KeyboardEvent) {\r\n    const keyCode = event.keyCode || event.code;\r\n    if (keyCode === KeyCode.ENTER && event.ctrlKey) {\r\n      this.save();\r\n    } else if (keyCode === KeyCode.ESCAPE) {\r\n      event.preventDefault();\r\n      this.cancel();\r\n    } else if (keyCode === KeyCode.TAB && event.shiftKey) {\r\n      event.preventDefault();\r\n      if (this.args && this.grid) {\r\n        this.grid.navigatePrev();\r\n      }\r\n    } else if (keyCode === KeyCode.TAB) {\r\n      event.preventDefault();\r\n      if (this.args && this.grid) {\r\n        this.grid.navigateNext();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** On every input change event, we'll update the current text length counter */\r\n  private handleOnInputChange(event: KeyboardEvent & { target: HTMLTextAreaElement }) {\r\n    const textLength = event.target.value.length;\r\n    this._$currentLengthElm.text(textLength);\r\n  }\r\n}\r\n","import { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\nimport * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport { Constants } from '../constants';\r\nimport {\r\n  CollectionCustomStructure,\r\n  CollectionOption,\r\n  Column,\r\n  ColumnEditor,\r\n  Editor,\r\n  EditorArguments,\r\n  EditorValidator,\r\n  EditorValidatorOutput,\r\n  FieldType,\r\n  GridOption,\r\n  Locale,\r\n  MultipleSelectOption,\r\n  SelectOption,\r\n} from './../models/index';\r\nimport { CollectionService } from '../services/index';\r\nimport { charArraysEqual, findOrDefault, getDescendantProperty, getTranslationPrefix, htmlEncode, setDeepValue, unsubscribeAllObservables } from '../services/utilities';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/**\r\n * Slickgrid editor class for multiple/single select lists\r\n */\r\nexport class SelectEditor implements Editor {\r\n  /** The JQuery DOM element */\r\n  $editorElm: any;\r\n\r\n  /** Editor Multiple-Select options */\r\n  editorElmOptions: MultipleSelectOption;\r\n\r\n  /** DOM Element Name, useful for auto-detecting positioning (dropup / dropdown) */\r\n  elementName: string;\r\n\r\n  /** The multiple-select options for a multiple select list */\r\n  defaultOptions: MultipleSelectOption;\r\n\r\n  /** The original item values that are set at the beginning */\r\n  originalValue: any[];\r\n\r\n  /** The property name for values in the collection */\r\n  valueName: string;\r\n\r\n  /** The property name for labels in the collection */\r\n  labelName: string;\r\n\r\n  /** The property name for a prefix that can be added to the labels in the collection */\r\n  labelPrefixName: string;\r\n\r\n  /** The property name for a suffix that can be added to the labels in the collection */\r\n  labelSuffixName: string;\r\n\r\n  /** A label that can be added to each option and can be used as an alternative to display selected options */\r\n  optionLabel: string;\r\n\r\n  /** Grid options */\r\n  gridOptions: GridOption;\r\n\r\n  /** Do we translate the label? */\r\n  enableTranslateLabel: boolean;\r\n\r\n  /** Locales */\r\n  protected _locales: Locale;\r\n\r\n  /** Observable Subscriptions */\r\n  protected _subscriptions: Subscription[] = [];\r\n\r\n  // flag to signal that the editor is destroying itself, helps prevent\r\n  // commit changes from being called twice and erroring\r\n  protected _destroying = false;\r\n\r\n  /** Collection Service */\r\n  protected _collectionService: CollectionService;\r\n\r\n  /** The translate library */\r\n  protected _translate: TranslateService;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(protected args: EditorArguments, protected isMultipleSelect) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.gridOptions = (this.grid.getOptions() || {}) as GridOption;\r\n    const options = this.gridOptions || this.args.column.params || {};\r\n    if (options && options.i18n instanceof TranslateService) {\r\n      this._translate = options.i18n;\r\n    }\r\n\r\n    // get locales provided by user in main file or else use default English locales via the Constants\r\n    this._locales = this.gridOptions.locales || Constants.locales;\r\n\r\n    // provide the name attribute to the DOM element which will be needed to auto-adjust drop position (dropup / dropdown)\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    this.elementName = `editor-${fieldId}`;\r\n\r\n    const libOptions: MultipleSelectOption = {\r\n      autoAdjustDropHeight: true,\r\n      autoAdjustDropPosition: true,\r\n      autoAdjustDropWidthByTextSize: true,\r\n      container: 'body',\r\n      filter: false,\r\n      maxHeight: 275,\r\n      name: this.elementName,\r\n      single: true,\r\n      textTemplate: ($elm) => {\r\n        // render HTML code or not, by default it is sanitized and won't be rendered\r\n        const isRenderHtmlEnabled = this.columnDef && this.columnDef.internalColumnEditor && this.columnDef.internalColumnEditor.enableRenderHtml || false;\r\n        return isRenderHtmlEnabled ? $elm.text() : $elm.html();\r\n      },\r\n      onClose: () => this.save(),\r\n    };\r\n\r\n    if (isMultipleSelect) {\r\n      libOptions.single = false;\r\n      libOptions.addTitle = true;\r\n      libOptions.okButton = true;\r\n      libOptions.selectAllDelimiter = ['', ''];\r\n\r\n      if (this._translate && this._translate.instant && this._translate.currentLang) {\r\n        const translationPrefix = getTranslationPrefix(this.gridOptions);\r\n        libOptions.countSelected = this._translate.instant(`${translationPrefix}X_OF_Y_SELECTED`);\r\n        libOptions.allSelected = this._translate.instant(`${translationPrefix}ALL_SELECTED`);\r\n        libOptions.selectAllText = this._translate.instant(`${translationPrefix}SELECT_ALL`);\r\n        libOptions.okButtonText = this._translate.instant(`${translationPrefix}OK`);\r\n      } else {\r\n        libOptions.countSelected = this._locales && this._locales.TEXT_X_OF_Y_SELECTED;\r\n        libOptions.allSelected = this._locales && this._locales.TEXT_ALL_SELECTED;\r\n        libOptions.selectAllText = this._locales && this._locales.TEXT_SELECT_ALL;\r\n        libOptions.okButtonText = this._locales && this._locales.TEXT_OK;\r\n      }\r\n    }\r\n\r\n    // assign the multiple select lib options\r\n    this.defaultOptions = libOptions;\r\n\r\n    this.init();\r\n  }\r\n\r\n  /** Get the Collection */\r\n  get collection(): SelectOption[] {\r\n    return this.columnDef && this.columnDef.internalColumnEditor.collection || [];\r\n  }\r\n\r\n\r\n  /** Getter for the Collection Options */\r\n  get collectionOptions(): CollectionOption {\r\n    return this.columnDef && this.columnDef.internalColumnEditor && this.columnDef.internalColumnEditor.collectionOptions;\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor | undefined {\r\n    return this.columnDef && this.columnDef.internalColumnEditor;\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this.$editorElm;\r\n  }\r\n\r\n  /** Getter for the Custom Structure if exist */\r\n  protected get customStructure(): CollectionCustomStructure {\r\n    return this.columnDef && this.columnDef.internalColumnEditor && this.columnDef.internalColumnEditor.customStructure;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /**\r\n   * The current selected values (multiple select) from the collection\r\n   */\r\n  get currentValues() {\r\n    const elmValue = this.$editorElm.val();\r\n\r\n    // collection of strings, just return the filtered string that are equals\r\n    if (this.collection.every(x => typeof x === 'string')) {\r\n      return this.collection.filter(c => elmValue.indexOf(c.toString()) !== -1);\r\n    }\r\n\r\n    // collection of label/value pair\r\n    const separatorBetweenLabels = this.collectionOptions && this.collectionOptions.separatorBetweenTextLabels || '';\r\n    const isIncludingPrefixSuffix = this.collectionOptions && this.collectionOptions.includePrefixSuffixToSelectedValues || false;\r\n\r\n    return this.collection\r\n      .filter(c => elmValue.indexOf(c.hasOwnProperty(this.valueName) && c[this.valueName] !== null && c[this.valueName].toString()) !== -1)\r\n      .map(c => {\r\n        const labelText = c[this.valueName];\r\n        let prefixText = c[this.labelPrefixName] || '';\r\n        let suffixText = c[this.labelSuffixName] || '';\r\n\r\n        // when it's a complex object, then pull the object name only, e.g.: \"user.firstName\" => \"user\"\r\n        const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n        // is the field a complex object, \"address.streetNumber\"\r\n        const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n        if (isComplexObject && typeof c === 'object') {\r\n          return c;\r\n        }\r\n\r\n        // also translate prefix/suffix if enableTranslateLabel is true and text is a string\r\n        prefixText = (this.enableTranslateLabel && prefixText && typeof prefixText === 'string') ? this._translate.instant(prefixText || ' ') : prefixText;\r\n        suffixText = (this.enableTranslateLabel && suffixText && typeof suffixText === 'string') ? this._translate.instant(suffixText || ' ') : suffixText;\r\n\r\n        if (isIncludingPrefixSuffix) {\r\n          const tmpOptionArray = [prefixText, labelText, suffixText].filter((text) => text); // add to a temp array for joining purpose and filter out empty text\r\n          return tmpOptionArray.join(separatorBetweenLabels);\r\n        }\r\n        return labelText;\r\n      });\r\n  }\r\n\r\n  /**\r\n   * The current selected values (single select) from the collection\r\n   */\r\n  get currentValue() {\r\n    const elmValue = this.$editorElm.val();\r\n\r\n    // collection of strings, just return the filtered string that are equals\r\n    if (this.collection.every(x => typeof x === 'string')) {\r\n      return findOrDefault(this.collection, (c: any) => c.toString() === elmValue);\r\n    }\r\n\r\n    // collection of label/value pair\r\n    const separatorBetweenLabels = this.collectionOptions && this.collectionOptions.separatorBetweenTextLabels || '';\r\n    const isIncludingPrefixSuffix = this.collectionOptions && this.collectionOptions.includePrefixSuffixToSelectedValues || false;\r\n    const itemFound = findOrDefault(this.collection, (c: any) => c.hasOwnProperty(this.valueName) && c[this.valueName] !== null && c[this.valueName].toString() === elmValue);\r\n\r\n    // is the field a complex object, \"address.streetNumber\"\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n\r\n    if (isComplexObject && typeof itemFound === 'object') {\r\n      return itemFound;\r\n    } else if (itemFound && itemFound.hasOwnProperty(this.valueName)) {\r\n      const labelText = itemFound[this.valueName];\r\n\r\n      if (isIncludingPrefixSuffix) {\r\n        let prefixText = itemFound[this.labelPrefixName] || '';\r\n        let suffixText = itemFound[this.labelSuffixName] || '';\r\n\r\n        // also translate prefix/suffix if enableTranslateLabel is true and text is a string\r\n        prefixText = (this.enableTranslateLabel && prefixText && typeof prefixText === 'string') ? this._translate.instant(prefixText || ' ') : prefixText;\r\n        suffixText = (this.enableTranslateLabel && suffixText && typeof suffixText === 'string') ? this._translate.instant(suffixText || ' ') : suffixText;\r\n\r\n        // add to a temp array for joining purpose and filter out empty text\r\n        const tmpOptionArray = [prefixText, labelText, suffixText].filter((text) => text);\r\n        return tmpOptionArray.join(separatorBetweenLabels);\r\n      }\r\n\r\n      return labelText;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init() {\r\n    if (!this.columnDef || !this.columnDef.internalColumnEditor || (!this.columnDef.internalColumnEditor.collection && !this.columnDef.internalColumnEditor.collectionAsync)) {\r\n      throw new Error(`[Angular-SlickGrid] You need to pass a \"collection\" (or \"collectionAsync\") inside Column Definition Editor for the MultipleSelect/SingleSelect Editor to work correctly.\r\n      Also each option should include a value/label pair (or value/labelKey when using Locale).\r\n      For example: { editor: { collection: [{ value: true, label: 'True' },{ value: false, label: 'False'}] } }`);\r\n    }\r\n\r\n    this._collectionService = new CollectionService(this._translate);\r\n    this.enableTranslateLabel = (this.columnDef.internalColumnEditor.enableTranslateLabel) ? this.columnDef.internalColumnEditor.enableTranslateLabel : false;\r\n    this.labelName = this.customStructure && this.customStructure.label || 'label';\r\n    this.labelPrefixName = this.customStructure && this.customStructure.labelPrefix || 'labelPrefix';\r\n    this.labelSuffixName = this.customStructure && this.customStructure.labelSuffix || 'labelSuffix';\r\n    this.optionLabel = this.customStructure && this.customStructure.optionLabel || 'value';\r\n    this.valueName = this.customStructure && this.customStructure.value || 'value';\r\n\r\n    if (this.enableTranslateLabel && (!this._translate || typeof this._translate.instant !== 'function')) {\r\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\r\n    }\r\n\r\n    // always render the Select (dropdown) DOM element, even if user passed a \"collectionAsync\",\r\n    // if that is the case, the Select will simply be without any options but we still have to render it (else SlickGrid would throw an error)\r\n    this.renderDomElement(this.collection);\r\n  }\r\n\r\n  getValue(): any | any[] {\r\n    return (this.isMultipleSelect) ? this.currentValues : this.currentValue;\r\n  }\r\n\r\n  setValue(value: any | any[]) {\r\n    if (this.isMultipleSelect && Array.isArray(value)) {\r\n      this.loadMultipleValues(value);\r\n    } else {\r\n      this.loadSingleValue(value);\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (this.$editorElm && typeof this.$editorElm.multipleSelect === 'function') {\r\n      this.$editorElm.multipleSelect('close');\r\n    }\r\n  }\r\n\r\n  show() {\r\n    if (this.$editorElm && typeof this.$editorElm.multipleSelect === 'function') {\r\n      this.$editorElm.multipleSelect('open');\r\n    }\r\n  }\r\n\r\n  applyValue(item: any, state: any): void {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const fieldType = this.columnDef && this.columnDef.type;\r\n    let newValue = state;\r\n\r\n    // when the provided user defined the column field type as a possible number then try parsing the state value as that\r\n    if (fieldType === FieldType.number || fieldType === FieldType.integer || fieldType === FieldType.boolean) {\r\n      newValue = parseFloat(state);\r\n    }\r\n\r\n    // when set as a multiple selection, we can assume that the 3rd party lib multiple-select will return a CSV string\r\n    // we need to re-split that into an array to be the same as the original column\r\n    if (this.isMultipleSelect && typeof state === 'string' && state.indexOf(',') >= 0) {\r\n      newValue = state.split(',');\r\n    }\r\n\r\n    // is the field a complex object, \"user.address.streetNumber\"\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(newValue);\r\n    newValue = (validation && validation.valid) ? newValue : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      // when it's a complex object, user could override the object path (where the editable object is located)\r\n      // else we use the path provided in the Field Column Definition\r\n      const objectPath = this.columnEditor && this.columnEditor.complexObjectPath || fieldName;\r\n      setDeepValue(item, objectPath, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this._destroying = true;\r\n    if (this.$editorElm && typeof this.$editorElm.multipleSelect === 'function') {\r\n      this.$editorElm.multipleSelect('destroy');\r\n      this.$editorElm.remove();\r\n      const elementClassName = this.elementName.toString().replace('.', '\\\\.'); // make sure to escape any dot \".\" from CSS class to avoid console error\r\n      $(`[name=${elementClassName}].ms-drop`).remove();\r\n      this.$editorElm.remove();\r\n      this.$editorElm = null;\r\n    }\r\n  }\r\n\r\n  loadValue(item: any): void {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n\r\n      // when it's a complex object, user could override the object path (where the editable object is located)\r\n      // else we use the path provided in the Field Column Definition\r\n      const objectPath = this.columnEditor && this.columnEditor.complexObjectPath || fieldName;\r\n      const currentValue = (isComplexObject) ? getDescendantProperty(item, objectPath) : item[fieldName];\r\n      const value = (isComplexObject && currentValue.hasOwnProperty(this.valueName)) ? currentValue[this.valueName] : currentValue;\r\n\r\n      if (this.isMultipleSelect && Array.isArray(value)) {\r\n        this.loadMultipleValues(value);\r\n      } else {\r\n        this.loadSingleValue(value);\r\n      }\r\n      this.refresh();\r\n    }\r\n  }\r\n\r\n  loadMultipleValues(currentValues: any[]) {\r\n    // convert to string because that is how the DOM will return these values\r\n    if (Array.isArray(currentValues)) {\r\n      // keep the default values in memory for references\r\n      this.originalValue = currentValues.map((i: any) => i);\r\n\r\n      // compare all the array values but as string type since multiple-select always return string\r\n      const currentStringValues = currentValues.map((i: any) => i.toString());\r\n      this.$editorElm.find('option').each((i: number, $e: any) => {\r\n        $e.selected = (currentStringValues.indexOf($e.value) !== -1);\r\n      });\r\n    }\r\n  }\r\n\r\n  loadSingleValue(currentValue: any) {\r\n    // keep the default value in memory for references\r\n    this.originalValue = typeof currentValue === 'number' ? `${currentValue}` : currentValue;\r\n    this.$editorElm.val(currentValue);\r\n\r\n    // make sure the prop exists first\r\n    this.$editorElm.find('option').each((i: number, $e: any) => {\r\n      // check equality after converting originalValue to string since the DOM value will always be of type string\r\n      $e.selected = (`${currentValue}` === $e.value);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (!this._destroying && this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue(): any | any[] {\r\n    return (this.isMultipleSelect) ? this.currentValues : this.currentValue;\r\n  }\r\n\r\n  focus() {\r\n    if (this.$editorElm && this.$editorElm.multipleSelect) {\r\n      this.$editorElm.multipleSelect('focus');\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    if (this.isMultipleSelect) {\r\n      return !charArraysEqual(this.$editorElm.val(), this.originalValue);\r\n    }\r\n    return this.$editorElm.val() !== this.originalValue;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const isRequired = this.columnEditor.required;\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this.$editorElm && this.$editorElm.val && this.$editorElm.val();\r\n    const errorMsg = this.columnEditor.errorMessage;\r\n\r\n    if (this.validator) {\r\n      const value = (inputValue !== undefined) ? inputValue : (this.isMultipleSelect ? this.currentValues : this.currentValue);\r\n      return this.validator(value, this.args);\r\n    }\r\n\r\n    // by default the editor is almost always valid (except when it's required but not provided)\r\n    if (isRequired && (elmValue === '' || (Array.isArray(elmValue) && elmValue.length === 0))) {\r\n      return {\r\n        valid: false,\r\n        msg: errorMsg || Constants.VALIDATION_REQUIRED_FIELD\r\n      };\r\n    }\r\n\r\n    return {\r\n      valid: true,\r\n      msg: null\r\n    };\r\n  }\r\n\r\n  //\r\n  // protected functions\r\n  // ------------------\r\n\r\n  /**\r\n   * user might want to filter certain items of the collection\r\n   * @param inputCollection\r\n   * @return outputCollection filtered and/or sorted collection\r\n   */\r\n  protected filterCollection(inputCollection) {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to filter certain items of the collection\r\n    if (this.columnEditor && this.columnEditor.collectionFilterBy) {\r\n      const filterBy = this.columnEditor.collectionFilterBy;\r\n      const filterCollectionBy = this.columnEditor.collectionOptions && this.columnEditor.collectionOptions.filterResultAfterEachPass || null;\r\n      outputCollection = this._collectionService.filterCollection(outputCollection, filterBy, filterCollectionBy);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  /**\r\n   * user might want to sort the collection in a certain way\r\n   * @param inputCollection\r\n   * @return outputCollection sorted collection\r\n   */\r\n  protected sortCollection(inputCollection) {\r\n    let outputCollection = inputCollection;\r\n\r\n    // user might want to sort the collection\r\n    if (this.columnDef.internalColumnEditor && this.columnDef.internalColumnEditor.collectionSortBy) {\r\n      const sortBy = this.columnDef.internalColumnEditor.collectionSortBy;\r\n      outputCollection = this._collectionService.sortCollection(this.columnDef, outputCollection, sortBy, this.enableTranslateLabel);\r\n    }\r\n\r\n    return outputCollection;\r\n  }\r\n\r\n  protected renderDomElement(inputCollection: any[]) {\r\n    if (!Array.isArray(inputCollection) && this.collectionOptions && (this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty)) {\r\n      const collectionInsideObjectProperty = this.collectionOptions.collectionInsideObjectProperty || this.collectionOptions.collectionInObjectProperty;\r\n      inputCollection = getDescendantProperty(inputCollection, collectionInsideObjectProperty);\r\n    }\r\n    if (!Array.isArray(inputCollection)) {\r\n      throw new Error('The \"collection\" passed to the Select Editor is not a valid array.');\r\n    }\r\n\r\n    // make a copy of the collection so that we don't impact SelectFilter, this could happen when calling \"addBlankEntry\" or \"addCustomFirstEntry\"\r\n    let collection: any[] = [];\r\n    if (inputCollection.length > 0) {\r\n      collection = [...inputCollection];\r\n    }\r\n\r\n    // user can optionally add a blank entry at the beginning of the collection\r\n    // make sure however that it wasn't added more than once\r\n    if (this.collectionOptions && this.collectionOptions.addBlankEntry && Array.isArray(collection) && collection.length > 0 && collection[0][this.valueName] !== '') {\r\n      collection.unshift(this.createBlankEntry());\r\n    }\r\n\r\n    // user can optionally add his own custom entry at the beginning of the collection\r\n    if (this.collectionOptions && this.collectionOptions.addCustomFirstEntry && Array.isArray(collection) && collection.length > 0 && collection[0][this.valueName] !== this.collectionOptions.addCustomFirstEntry[this.valueName]) {\r\n      collection.unshift(this.collectionOptions && this.collectionOptions.addCustomFirstEntry);\r\n    }\r\n\r\n    // user can optionally add his own custom entry at the end of the collection\r\n    if (this.collectionOptions && this.collectionOptions.addCustomLastEntry && Array.isArray(collection) && collection.length > 0) {\r\n      const lastCollectionIndex = collection.length - 1;\r\n      if (collection[lastCollectionIndex][this.valueName] !== this.collectionOptions.addCustomLastEntry[this.valueName]) {\r\n        collection.push(this.collectionOptions && this.collectionOptions.addCustomLastEntry);\r\n      }\r\n    }\r\n\r\n    let newCollection = collection || [];\r\n\r\n    // user might want to filter and/or sort certain items of the collection\r\n    newCollection = this.filterCollection(newCollection);\r\n    newCollection = this.sortCollection(newCollection);\r\n\r\n    // step 1, create HTML string template\r\n    const editorTemplate = this.buildTemplateHtmlString(newCollection);\r\n\r\n    // step 2, create the DOM Element of the editor\r\n    // also subscribe to the onClose event\r\n    this.createDomElement(editorTemplate);\r\n  }\r\n\r\n  protected buildTemplateHtmlString(collection: any[]) {\r\n    let options = '';\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const separatorBetweenLabels = this.collectionOptions && this.collectionOptions.separatorBetweenTextLabels || '';\r\n    const isRenderHtmlEnabled = this.columnDef.internalColumnEditor.enableRenderHtml || false;\r\n    const sanitizedOptions = this.gridOptions && this.gridOptions.sanitizeHtmlOptions || {};\r\n\r\n    // collection could be an Array of Strings OR Objects\r\n    if (collection.every(x => typeof x === 'string')) {\r\n      collection.forEach((option: string) => {\r\n        options += `<option value=\"${option}\" label=\"${option}\">${option}</option>`;\r\n      });\r\n    } else {\r\n      // array of objects will require a label/value pair unless a customStructure is passed\r\n      collection.forEach((option: SelectOption) => {\r\n        if (!option || (option[this.labelName] === undefined && option.labelKey === undefined)) {\r\n          throw new Error(`[select-editor] A collection with value/label (or value/labelKey when using Locale) is required to populate the Select list, for example: { collection: [ { value: '1', label: 'One' } ])`);\r\n        }\r\n        const labelKey = (option.labelKey || option[this.labelName]) as string;\r\n        const labelText = ((option.labelKey || this.enableTranslateLabel) && labelKey) ? this._translate.instant(labelKey || ' ') : labelKey;\r\n        let prefixText = option[this.labelPrefixName] || '';\r\n        let suffixText = option[this.labelSuffixName] || '';\r\n        let optionLabel = option[this.optionLabel] || '';\r\n        if (optionLabel && optionLabel.toString) {\r\n          optionLabel = optionLabel.toString().replace(/\\\"/g, '\\''); // replace double quotes by single quotes to avoid interfering with regular html\r\n        }\r\n\r\n        // also translate prefix/suffix if enableTranslateLabel is true and text is a string\r\n        prefixText = (this.enableTranslateLabel && prefixText && typeof prefixText === 'string') ? this._translate.instant(prefixText || ' ') : prefixText;\r\n        suffixText = (this.enableTranslateLabel && suffixText && typeof suffixText === 'string') ? this._translate.instant(suffixText || ' ') : suffixText;\r\n        optionLabel = (this.enableTranslateLabel && optionLabel && typeof optionLabel === 'string') ? this._translate.instant(optionLabel || ' ') : optionLabel;\r\n\r\n        // add to a temp array for joining purpose and filter out empty text\r\n        const tmpOptionArray = [prefixText, labelText, suffixText].filter(text => (text !== undefined && text !== ''));\r\n        let optionText = tmpOptionArray.join(separatorBetweenLabels);\r\n\r\n        // if user specifically wants to render html text, he needs to opt-in else it will stripped out by default\r\n        // also, the 3rd party lib will saninitze any html code unless it's encoded, so we'll do that\r\n        if (isRenderHtmlEnabled) {\r\n          // sanitize any unauthorized html tags like script and others\r\n          // for the remaining allowed tags we'll permit all attributes\r\n          const sanitizedText = (DOMPurify.sanitize(optionText, sanitizedOptions) || '').toString();\r\n          optionText = htmlEncode(sanitizedText);\r\n        }\r\n\r\n        // html text of each select option\r\n        let optionValue = option[this.valueName];\r\n        if (optionValue === undefined || optionValue === null) {\r\n          optionValue = '';\r\n        }\r\n        options += `<option value=\"${optionValue}\" label=\"${optionLabel}\">${optionText}</option>`;\r\n      });\r\n    }\r\n\r\n    return `<select id=\"${this.elementName}\" class=\"ms-filter search-filter editor-${fieldId}\" ${this.isMultipleSelect ? 'multiple=\"multiple\"' : ''}>${options}</select>`;\r\n  }\r\n\r\n  /** Create a blank entry that can be added to the collection. It will also reuse the same customStructure if need be */\r\n  protected createBlankEntry() {\r\n    const blankEntry = {\r\n      [this.labelName]: '',\r\n      [this.valueName]: ''\r\n    };\r\n    if (this.labelPrefixName) {\r\n      blankEntry[this.labelPrefixName] = '';\r\n    }\r\n    if (this.labelSuffixName) {\r\n      blankEntry[this.labelSuffixName] = '';\r\n    }\r\n    return blankEntry;\r\n  }\r\n\r\n  /** Build the template HTML string */\r\n  protected createDomElement(editorTemplate: string) {\r\n    this.$editorElm = $(editorTemplate);\r\n\r\n    if (this.$editorElm && typeof this.$editorElm.appendTo === 'function') {\r\n      this.$editorElm.appendTo(this.args.container);\r\n    }\r\n\r\n    // add placeholder when found\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    this.defaultOptions.placeholder = placeholder || '';\r\n\r\n    if (typeof this.$editorElm.multipleSelect === 'function') {\r\n      const elementOptions = (this.columnDef.internalColumnEditor) ? this.columnDef.internalColumnEditor.elementOptions : {};\r\n      const editorOptions = (this.columnDef && this.columnDef.internalColumnEditor) ? this.columnDef.internalColumnEditor.editorOptions : {};\r\n      this.editorElmOptions = { ...this.defaultOptions, ...elementOptions, ...editorOptions };\r\n      this.$editorElm = this.$editorElm.multipleSelect(this.editorElmOptions);\r\n      setTimeout(() => this.show());\r\n    }\r\n  }\r\n\r\n  // refresh the jquery object because the selected checkboxes were already set\r\n  // prior to this method being called\r\n  protected refresh() {\r\n    if (typeof this.$editorElm.multipleSelect === 'function') {\r\n      this.$editorElm.multipleSelect('refresh');\r\n    }\r\n  }\r\n}\r\n","import { SelectEditor } from './selectEditor';\r\n\r\nexport class MultipleSelectEditor extends SelectEditor {\r\n  /**\r\n   * Initialize the Editor\r\n   */\r\n  constructor(protected args: any) {\r\n    super(args, true);\r\n  }\r\n}\r\n","import { SelectEditor } from './selectEditor';\r\n\r\nexport class SingleSelectEditor extends SelectEditor {\r\n  /**\r\n   * Initialize the Editor\r\n   */\r\n  constructor(protected args: any) {\r\n    super(args, false);\r\n  }\r\n}\r\n","import { Column, Editor, EditorArguments, EditorValidator, EditorValidatorOutput, ColumnEditor } from './../models/index';\r\nimport { getDescendantProperty, setDeepValue } from '../services/utilities';\r\nimport { sliderValidator } from '../editorValidators/sliderValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\nconst DEFAULT_MIN_VALUE = 0;\r\nconst DEFAULT_MAX_VALUE = 100;\r\nconst DEFAULT_STEP = 1;\r\n\r\nexport class SliderEditor implements Editor {\r\n  private _elementRangeInputId: string;\r\n  private _elementRangeOutputId: string;\r\n  private _$editorElm: any;\r\n  private _$input: any;\r\n  $sliderNumber: any;\r\n  defaultValue: any;\r\n  originalValue: any;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid && this.grid.getOptions && this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Getter for the Editor Generic Params */\r\n  private get editorParams(): any {\r\n    return this.columnEditor.params || {};\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init(): void {\r\n    const container = this.args && this.args.container;\r\n\r\n    // define the input & slider number IDs\r\n    const itemId = this.args && this.args.item && this.args.item.id;\r\n    this._elementRangeInputId = `rangeInput_${this.columnDef.field}_${itemId}`;\r\n    this._elementRangeOutputId = `rangeOutput_${this.columnDef.field}_${itemId}`;\r\n\r\n    // create HTML string template\r\n    const editorTemplate = this.buildTemplateHtmlString();\r\n    this._$editorElm = $(editorTemplate);\r\n    this._$input = this._$editorElm.children('input');\r\n    this.$sliderNumber = this._$editorElm.children('div.input-group-addon.input-group-append').children();\r\n    this.focus();\r\n\r\n    // watch on change event\r\n    this._$editorElm\r\n      .appendTo(container)\r\n      .on('mouseup', () => this.save());\r\n\r\n    // if user chose to display the slider number on the right side, then update it every time it changes\r\n    // we need to use both \"input\" and \"change\" event to be all cross-browser\r\n    if (!this.editorParams.hideSliderNumber) {\r\n      this._$editorElm.on('input change', (event: JQuery.Event & { target: HTMLInputElement }) => {\r\n        const value = event && event.target && event.target.value || '';\r\n        if (value) {\r\n          const elements = document.getElementsByClassName(this._elementRangeOutputId);\r\n          if (elements.length) {\r\n            elements[0].innerHTML = event.target.value;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this._$input.val(this.originalValue);\r\n    this.args.cancelChanges();\r\n  }\r\n\r\n  destroy() {\r\n    if (this._$editorElm) {\r\n      this._$editorElm.off('input change mouseup touchend').remove();\r\n      this._$editorElm = null;\r\n    }\r\n  }\r\n\r\n  focus() {\r\n    this._$editorElm.focus();\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$input.val() || '';\r\n  }\r\n\r\n  setValue(value: number | string) {\r\n    this._$input.val(value);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged() {\r\n    const elmValue = this._$input.val();\r\n    return (!(elmValue === '' && this.originalValue === undefined)) && (+elmValue !== this.originalValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      let value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      if (value === '' || value === null || value === undefined) {\r\n        value = this.defaultValue; // load default value when item doesn't have any value\r\n      }\r\n      this.originalValue = +value;\r\n      this._$input.val(value);\r\n      this.$sliderNumber.html(value);\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    const elmValue: string = this._$input.val();\r\n    return elmValue !== '' ? parseInt(elmValue, 10) : this.originalValue;\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this._$input && this._$input.val();\r\n    return sliderValidator(elmValue, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      minValue: this.columnEditor.minValue,\r\n      maxValue: this.columnEditor.maxValue,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  /**\r\n   * Create the HTML template as a string\r\n   */\r\n  private buildTemplateHtmlString() {\r\n    const fieldId = this.columnDef && this.columnDef.id;\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n    const minValue = this.columnEditor.hasOwnProperty('minValue') ? this.columnEditor.minValue : DEFAULT_MIN_VALUE;\r\n    const maxValue = this.columnEditor.hasOwnProperty('maxValue') ? this.columnEditor.maxValue : DEFAULT_MAX_VALUE;\r\n    const defaultValue = this.editorParams.hasOwnProperty('sliderStartValue') ? this.editorParams.sliderStartValue : minValue;\r\n    const step = this.columnEditor.hasOwnProperty('valueStep') ? this.columnEditor.valueStep : DEFAULT_STEP;\r\n    this.defaultValue = defaultValue;\r\n\r\n    if (this.editorParams.hideSliderNumber) {\r\n      return `\r\n      <div class=\"slider-container slider-editor\">\r\n        <input type=\"range\" name=\"${this._elementRangeInputId}\" title=\"${title}\"\r\n          defaultValue=\"${defaultValue}\" value=\"${defaultValue}\"\r\n          min=\"${minValue}\" max=\"${maxValue}\" step=\"${step}\"\r\n          class=\"form-control slider-editor-input editor-${fieldId} range ${this._elementRangeInputId}\" />\r\n      </div>`;\r\n    }\r\n\r\n    return `\r\n      <div class=\"input-group slider-container slider-editor\">\r\n        <input type=\"range\" name=\"${this._elementRangeInputId}\" title=\"${title}\"\r\n          defaultValue=\"${defaultValue}\" value=\"${defaultValue}\"\r\n          min=\"${minValue}\" max=\"${maxValue}\" step=\"${step}\"\r\n          class=\"form-control slider-editor-input editor-${fieldId} range ${this._elementRangeInputId}\" />\r\n        <div class=\"input-group-addon input-group-append slider-value\"><span class=\"input-group-text ${this._elementRangeOutputId}\">${defaultValue}</span></div>\r\n      </div>`;\r\n  }\r\n}\r\n","import { Column, ColumnEditor, Editor, EditorArguments, EditorValidator, EditorValidatorOutput, KeyCode } from './../models/index';\r\nimport { getDescendantProperty, setDeepValue } from '../services/utilities';\r\nimport { textValidator } from '../editorValidators/textValidator';\r\n\r\n// using external non-typed js libraries\r\ndeclare const $: any;\r\n\r\n/*\r\n * An example of a 'detached' editor.\r\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\r\n */\r\nexport class TextEditor implements Editor {\r\n  private _lastInputEvent: JQuery.Event;\r\n  private _$input: any;\r\n  originalValue: string;\r\n\r\n  /** SlickGrid Grid object */\r\n  grid: any;\r\n\r\n  constructor(private args: EditorArguments) {\r\n    if (!args) {\r\n      throw new Error('[Angular-SlickGrid] Something is wrong with this grid, an Editor must always have valid arguments.');\r\n    }\r\n    this.grid = args.grid;\r\n    this.init();\r\n  }\r\n\r\n  /** Get Column Definition object */\r\n  get columnDef(): Column | undefined {\r\n    return this.args && this.args.column;\r\n  }\r\n\r\n  /** Get Column Editor object */\r\n  get columnEditor(): ColumnEditor {\r\n    return this.columnDef && this.columnDef.internalColumnEditor || {};\r\n  }\r\n\r\n  /** Get the Editor DOM Element */\r\n  get editorDomElement(): any {\r\n    return this._$input;\r\n  }\r\n\r\n  get hasAutoCommitEdit() {\r\n    return this.grid.getOptions().autoCommitEdit;\r\n  }\r\n\r\n  /** Get the Validator function, can be passed in Editor property or Column Definition */\r\n  get validator(): EditorValidator {\r\n    return this.columnEditor.validator || this.columnDef.validator;\r\n  }\r\n\r\n  init() {\r\n    const columnId = this.columnDef && this.columnDef.id;\r\n    const placeholder = this.columnEditor && this.columnEditor.placeholder || '';\r\n    const title = this.columnEditor && this.columnEditor.title || '';\r\n\r\n    this._$input = $(`<input type=\"text\" role=\"presentation\"  autocomplete=\"off\" class=\"editor-text editor-${columnId}\" placeholder=\"${placeholder}\" title=\"${title}\" />`)\r\n      .appendTo(this.args.container)\r\n      .on('keydown.nav', (event: JQuery.Event) => {\r\n        this._lastInputEvent = event;\r\n        if (event.keyCode === KeyCode.LEFT || event.keyCode === KeyCode.RIGHT) {\r\n          event.stopImmediatePropagation();\r\n        }\r\n      });\r\n\r\n    // the lib does not get the focus out event for some reason\r\n    // so register it here\r\n    if (this.hasAutoCommitEdit) {\r\n      this._$input.on('focusout', () => this.save());\r\n    }\r\n\r\n    setTimeout(() => this.focus(), 50);\r\n  }\r\n\r\n  destroy() {\r\n    this._$input.off('keydown.nav focusout').remove();\r\n    this._$input = null;\r\n  }\r\n\r\n  focus() {\r\n    if (this._$input) {\r\n      this._$input.focus();\r\n    }\r\n  }\r\n\r\n  getValue(): string {\r\n    return this._$input.val();\r\n  }\r\n\r\n  setValue(val: string) {\r\n    this._$input.val(val);\r\n  }\r\n\r\n  applyValue(item: any, state: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n    const isComplexObject = fieldName && fieldName.indexOf('.') > 0; // is the field a complex object, \"address.streetNumber\"\r\n\r\n    // validate the value before applying it (if not valid we'll set an empty string)\r\n    const validation = this.validate(state);\r\n    const newValue = (validation && validation.valid) ? state : '';\r\n\r\n    // set the new value to the item datacontext\r\n    if (isComplexObject) {\r\n      setDeepValue(item, fieldName, newValue);\r\n    } else {\r\n      item[fieldName] = newValue;\r\n    }\r\n  }\r\n\r\n  isValueChanged(): boolean {\r\n    const elmValue = this._$input.val();\r\n    const lastKeyEvent = this._lastInputEvent && this._lastInputEvent.keyCode;\r\n    if (this.columnEditor && this.columnEditor.alwaysSaveOnEnterKey && lastKeyEvent === KeyCode.ENTER) {\r\n      return true;\r\n    }\r\n    return (!(elmValue === '' && (this.originalValue === null || this.originalValue === undefined))) && (elmValue !== this.originalValue);\r\n  }\r\n\r\n  loadValue(item: any) {\r\n    const fieldName = this.columnDef && this.columnDef.field;\r\n\r\n    if (item && fieldName !== undefined) {\r\n      // is the field a complex object, \"address.streetNumber\"\r\n      const isComplexObject = fieldName && fieldName.indexOf('.') > 0;\r\n      const value = (isComplexObject) ? getDescendantProperty(item, fieldName) : item[fieldName];\r\n\r\n      this.originalValue = value;\r\n      this._$input.val(this.originalValue);\r\n      this._$input.select();\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const validation = this.validate();\r\n    const isValid = (validation && validation.valid) || false;\r\n\r\n    if (this.hasAutoCommitEdit && isValid) {\r\n      // do not use args.commitChanges() as this sets the focus to the next row.\r\n      // also the select list will stay shown when clicking off the grid\r\n      this.grid.getEditorLock().commitCurrentEdit();\r\n    } else {\r\n      this.args.commitChanges();\r\n    }\r\n  }\r\n\r\n  serializeValue() {\r\n    return this._$input.val();\r\n  }\r\n\r\n  validate(inputValue?: any): EditorValidatorOutput {\r\n    const elmValue = (inputValue !== undefined) ? inputValue : this._$input && this._$input.val();\r\n    return textValidator(elmValue, {\r\n      editorArgs: this.args,\r\n      errorMessage: this.columnEditor.errorMessage,\r\n      minLength: this.columnEditor.minLength,\r\n      maxLength: this.columnEditor.maxLength,\r\n      operatorConditionalType: this.columnEditor.operatorConditionalType,\r\n      required: this.columnEditor.required,\r\n      validator: this.validator,\r\n    });\r\n  }\r\n}\r\n","import { AutoCompleteEditor } from './autoCompleteEditor';\r\nimport { CheckboxEditor } from './checkboxEditor';\r\nimport { DateEditor } from './dateEditor';\r\nimport { DualInputEditor } from './dualInputEditor';\r\nimport { FloatEditor } from './floatEditor';\r\nimport { IntegerEditor } from './integerEditor';\r\nimport { LongTextEditor } from './longTextEditor';\r\nimport { MultipleSelectEditor } from './multipleSelectEditor';\r\nimport { SingleSelectEditor } from './singleSelectEditor';\r\nimport { SliderEditor } from './sliderEditor';\r\nimport { TextEditor } from './textEditor';\r\n\r\nexport const Editors = {\r\n  /** AutoComplete Editor (using jQuery UI autocomplete feature) */\r\n  autoComplete: AutoCompleteEditor,\r\n\r\n  /** Checkbox Editor (uses native checkbox DOM element) */\r\n  checkbox: CheckboxEditor,\r\n\r\n  /** Date Picker Editor (which uses 3rd party lib \"flatpickr\") */\r\n  date: DateEditor,\r\n\r\n  /** Dual Input Editor, default input type is text but it could be (integer/float/number/password/text) */\r\n  dualInput: DualInputEditor,\r\n\r\n  /** Float Number Editor */\r\n  float: FloatEditor,\r\n\r\n  /** Integer Editor */\r\n  integer: IntegerEditor,\r\n\r\n  /** Long Text Editor (uses a textarea) */\r\n  longText: LongTextEditor,\r\n\r\n  /** Multiple Select editor (which uses 3rd party lib \"multiple-select.js\") */\r\n  multipleSelect: MultipleSelectEditor,\r\n\r\n  /** Single Select editor (which uses 3rd party lib \"multiple-select.js\") */\r\n  singleSelect: SingleSelectEditor,\r\n\r\n  /** Slider Editor */\r\n  slider: SliderEditor,\r\n\r\n  /** Text Editor */\r\n  text: TextEditor\r\n};\r\n","import { Column, FieldType, Formatter, GridOption } from '../models/index';\r\nimport { mapMomentDateFormatWithFieldType } from '../services/utilities';\r\nimport * as moment_ from 'moment-mini';\r\nconst moment = moment_; // patch to fix rollup \"moment has no default export\" issue, document here https://github.com/rollup/rollup/issues/670\r\n\r\n/**\r\n * Find the option value from the following (in order of execution)\r\n * 1- Column Definition \"params\"\r\n * 2- Grid Options \"formatterOptions\"\r\n * 3- nothing found, return default value provided\r\n */\r\nexport function getValueFromParamsOrFormatterOptions(optionName: string, columnDef: Column, grid: any, defaultValue?: any) {\r\n  const gridOptions = ((grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {}) as GridOption;\r\n  const params = columnDef && columnDef.params;\r\n\r\n  if (params && params.hasOwnProperty(optionName)) {\r\n    return params[optionName];\r\n  } else if (gridOptions.formatterOptions && gridOptions.formatterOptions.hasOwnProperty(optionName)) {\r\n    return gridOptions.formatterOptions[optionName];\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\n/** From a FieldType, return the associated date Formatter */\r\nexport function getAssociatedDateFormatter(fieldType: FieldType, defaultSeparator: string): Formatter {\r\n  const defaultDateFormat = mapMomentDateFormatWithFieldType(fieldType);\r\n\r\n  return (_row: number, _cell: number, value: any, columnDef: Column, _dataContext: any, grid: any) => {\r\n    const gridOptions = ((grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {}) as GridOption;\r\n    const customSeparator = gridOptions && gridOptions.formatterOptions && gridOptions.formatterOptions.dateSeparator || defaultSeparator;\r\n    const inputType = columnDef && columnDef.type || FieldType.date;\r\n    const inputDateFormat = mapMomentDateFormatWithFieldType(inputType);\r\n    const isParsingAsUtc = columnDef && columnDef.params && columnDef.params.parseDateAsUtc || false;\r\n\r\n    const isDateValid = moment(value, inputDateFormat, false).isValid();\r\n    let outputDate = value;\r\n    if (value && isDateValid) {\r\n      outputDate = isParsingAsUtc ? moment.utc(value).format(defaultDateFormat) : moment(value).format(defaultDateFormat);\r\n    }\r\n\r\n    // user can customize the separator through the \"formatterOptions\"\r\n    // if that is the case we need to replace the default \"/\" to the new separator\r\n    if (outputDate && customSeparator !== defaultSeparator) {\r\n      const regex = new RegExp(defaultSeparator, 'ig'); // find separator globally\r\n      outputDate = outputDate.replace(regex, customSeparator);\r\n    }\r\n\r\n    return outputDate;\r\n  };\r\n}\r\n","import { Formatter } from './../models/index';\r\n\r\nexport const alignRightFormatter: Formatter = (_row: number, _cell: number, value: string | any): string => {\r\n  let outputValue = value;\r\n\r\n  if (value === null || value === undefined) {\r\n    outputValue = '';\r\n  }\r\n  return `<div style=\"float: right\">${outputValue}</div>`;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const arrayObjectToCsvFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  const columnParams = columnDef && columnDef.params || {};\r\n  const propertyNames = columnParams.propertyNames;\r\n  let parentObjectKeyName = columnParams.dataContextProperty;\r\n  if (!parentObjectKeyName) {\r\n    parentObjectKeyName = columnDef && columnDef.field && columnDef.field.split('.')[0]; // e.g. \"users.roles\" would be \"users\"\r\n  }\r\n\r\n  if (!propertyNames || !Array.isArray(propertyNames) || !parentObjectKeyName) {\r\n    throw new Error(`Formatters.arrayObjectToCsv requires you to pass an array of \"propertyNames\" (declared in \"params\") that you want to pull the data from.\r\n      For example, if we have an array of user objects that have the property of firstName & lastName then we need to pass in your column definition:: { params: { propertyNames: ['firtName'] }}.\r\n      Optionally, you can also pass the \"dataContextProperty\" if you wish to run this on another completely different field of the dataContext object.`);\r\n  }\r\n\r\n  // the dataContext holds all the data, so we can find the values we want even when \"value\" argument might be null\r\n  // e.g. if we want to use the propertyNames of ['firstName', 'lastName'] from the \"users\" array of objects\r\n  if (dataContext[parentObjectKeyName] && Array.isArray(dataContext[parentObjectKeyName])) {\r\n    // we will 1st get the object from the dataContext, then\r\n    if (Array.isArray(dataContext[parentObjectKeyName]) && dataContext[parentObjectKeyName].length > 0) {\r\n      const outputStrings = [];\r\n      dataContext[parentObjectKeyName].forEach((data: any) => {\r\n        const strings = [];\r\n\r\n        // 2nd from that data loop through all propertyNames we want to use (e.g.: ['firstName', 'lastName'])\r\n        propertyNames.forEach((prop) => {\r\n          strings.push(data[prop]);\r\n        });\r\n        // we will join these strings with spaces (e.g. 'John Doe' where 'John' was firstName and 'Doe' was lastName)\r\n        outputStrings.push(strings.join(' '));\r\n      });\r\n\r\n      // finally join all the output strings by CSV (e.g.: 'John Doe, Jane Doe')\r\n      const output = outputStrings.join(', ');\r\n      return `<span title=\"${output}\">${output}</span>`;\r\n    }\r\n  }\r\n  return value;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const arrayToCsvFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  if (value && Array.isArray(value) && value.length > 0) {\r\n    const values = value.join(', ');\r\n    return `<span title=\"${values}\">${values}</span>`;\r\n  }\r\n  return value;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\n\r\nexport const boldFormatter: Formatter = (row: number, cell: number, value: any) => {\r\n  return value ? `<b>${value}</b>` : '';\r\n};\r\n","import { Formatter } from './../models/index';\r\n\r\nexport const centerFormatter: Formatter = (_row: number, _cell: number, value: string | any): string => {\r\n  let outputValue = value;\r\n\r\n  if (value === null || value === undefined) {\r\n    outputValue = '';\r\n  }\r\n  return `<center>${outputValue}</center>`;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const checkboxFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) =>\r\n  value ? '&#x2611;' : '';\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const checkmarkFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  let isChecked = false;\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n\r\n  if (isNumber) {\r\n    value = +value; // convert to number before doing next condition\r\n  }\r\n\r\n  if (value === true || (isNumber && +value > 0) || (typeof value === 'string' && value.length > 0 && value.toLowerCase() !== 'false' && value !== '0')) {\r\n    isChecked = true;\r\n  }\r\n\r\n  return isChecked ? `<i class=\"fa fa-check checkmark-icon\" aria-hidden=\"true\"></i>` : '';\r\n};\r\n","import { arrayToCsvFormatter } from './arrayToCsvFormatter';\r\nimport { Column, Formatter } from './../models/index';\r\nimport { findOrDefault } from '../services/utilities';\r\n\r\n/**\r\n * A formatter to show the label property value of a params collection\r\n */\r\nexport const collectionFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  if (!value || !columnDef || !columnDef.params || !columnDef.params.collection\r\n    || !columnDef.params.collection.length) {\r\n    return value;\r\n  }\r\n\r\n  const { params, params: { collection } } = columnDef;\r\n  const labelName = (params.customStructure) ? params.customStructure.label : 'label';\r\n  const valueName = (params.customStructure) ? params.customStructure.value : 'value';\r\n\r\n  if (Array.isArray(value)) {\r\n    return arrayToCsvFormatter(row,\r\n      cell,\r\n      value.map((v: any) => findOrDefault(collection, (c: any) => c[valueName] === v)[labelName]),\r\n      columnDef,\r\n      dataContext,\r\n      grid);\r\n  }\r\n\r\n  return findOrDefault(collection, (c: any) => c[valueName] === value)[labelName] || '';\r\n};\r\n","import { arrayToCsvFormatter } from './arrayToCsvFormatter';\r\nimport { Column, Formatter } from './../models/index';\r\nimport { findOrDefault } from '../services/utilities';\r\n\r\n/**\r\n * A formatter to show the label property value of an editor collection\r\n */\r\nexport const collectionEditorFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  if (!value || !columnDef || !columnDef.internalColumnEditor || !columnDef.internalColumnEditor.collection\r\n    || !columnDef.internalColumnEditor.collection.length) {\r\n    return value;\r\n  }\r\n\r\n  const { internalColumnEditor, internalColumnEditor: { collection } } = columnDef;\r\n  const labelName = (internalColumnEditor.customStructure) ? internalColumnEditor.customStructure.label : 'label';\r\n  const valueName = (internalColumnEditor.customStructure) ? internalColumnEditor.customStructure.value : 'value';\r\n\r\n  if (Array.isArray(value)) {\r\n    if (collection.every(x => typeof x === 'string')) {\r\n      return arrayToCsvFormatter(row,\r\n        cell,\r\n        value.map((v: any) => findOrDefault(collection, (c: any) => c === v)),\r\n        columnDef,\r\n        dataContext,\r\n        grid);\r\n    } else {\r\n      return arrayToCsvFormatter(row,\r\n        cell,\r\n        value.map((v: any) => findOrDefault(collection, (c: any) => c[valueName] === v)[labelName]),\r\n        columnDef,\r\n        dataContext,\r\n        grid);\r\n    }\r\n  }\r\n\r\n  return findOrDefault(collection, (c: any) => c[valueName] === value)[labelName] || '';\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const complexObjectFormatter: Formatter = (row: number, cell: number, cellValue: any, columnDef: Column, dataContext: any) => {\r\n  if (!columnDef) {\r\n    return '';\r\n  }\r\n\r\n  const columnParams = columnDef.params || {};\r\n  const complexFieldLabel = columnParams && columnParams.complexFieldLabel || columnDef.field;\r\n\r\n  if (!complexFieldLabel) {\r\n    throw new Error(`For the Formatters.complexObject to work properly, you need to tell it which property of the complex object to use.\r\n      There are 3 ways to provide it:\r\n      1- via the generic \"params\" with a \"complexFieldLabel\" property on your Column Definition, example: this.columnDefs = [{ id: 'user', field: 'user', params: { complexFieldLabel: 'user.firstName' } }]\r\n      2- via the generic \"params\" with a \"complexFieldLabel\" and a \"labelKey\" property on your Column Definition, example: this.columnDefs = [{ id: 'user', field: 'user', labelKey: 'firstName' params: { complexFieldLabel: 'user' } }]\r\n      3- via the field name that includes a dot notation, example: this.columnDefs = [{ id: 'user', field: 'user.firstName'}] `);\r\n  }\r\n\r\n  if (columnDef.labelKey && dataContext.hasOwnProperty(complexFieldLabel)) {\r\n    return dataContext[complexFieldLabel] && dataContext[complexFieldLabel][columnDef.labelKey];\r\n  }\r\n\r\n  // when complexFieldLabel includes the dot \".\", we will do the split and get the value from the complex object\r\n  // however we also need to make sure that the complex objet exist, else we'll return the cell value (original value)\r\n  if (typeof complexFieldLabel === 'string' && complexFieldLabel.indexOf('.') > 0) {\r\n    return complexFieldLabel.split('.').reduce((obj, i) => (obj && obj.hasOwnProperty(i) ? obj[i] : cellValue), dataContext);\r\n  }\r\n  return cellValue;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const decimalFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const params = columnDef.params || {};\r\n  let minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  let maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 2);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  // @deprecated: decimalPlaces, minDecimalPlaces, maxDecimalPlaces\r\n  // add these extra checks to support previous way of passing the decimal count\r\n  if ((params.minDecimalPlaces !== null && params.minDecimalPlaces) || (params.decimalPlaces !== null && params.decimalPlaces)) {\r\n    console.warn('[Angular-Slickgrid] please consider using \"minDecimal\" (instead of \"minDecimalPlaces\" or \"decimalPlaces\").');\r\n    minDecimal = (params.minDecimalPlaces !== null && params.minDecimalPlaces) || (params.decimalPlaces !== null && params.decimalPlaces);\r\n  }\r\n  if (params.maxDecimalPlaces !== null && params.maxDecimalPlaces) {\r\n    console.warn('[Angular-Slickgrid] please consider using \"maxDecimal\" (instead of \"maxDecimalPlaces\").');\r\n    maxDecimal = (params.maxDecimalPlaces !== null && params.maxDecimalPlaces);\r\n  }\r\n\r\n  if (isNumber) {\r\n    return formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n  }\r\n  return value;\r\n};\r\n\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const deleteIconFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) =>\r\n  `<i class=\"fa fa-trash pointer delete-icon\" aria-hidden=\"true\"></i>`;\r\n","import { Column, Formatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const dollarColoredBoldFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    const colorStyle = (value >= 0) ? 'green' : 'red';\r\n    const formattedNumber = formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `<span style=\"color:${colorStyle}; font-weight:bold;\">${formattedNumber}</span>`;\r\n  }\r\n  return value;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const dollarColoredFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    const colorStyle = (value >= 0) ? 'green' : 'red';\r\n    const formattedNumber = formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `<span style=\"color:${colorStyle}\">${formattedNumber}</span>`;\r\n  }\r\n  return value;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const dollarFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    return formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n  }\r\n  return value;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const editIconFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) =>\r\n  `<i class=\"fa fa-pencil pointer edit-icon\" aria-hidden=\"true\"></i>`;\r\n","import { Formatter } from '../models/formatter.interface';\r\n\r\nexport const fakeHyperlinkFormatter: Formatter = (_row: number, _cell: number, value: string) => {\r\n  return value ? `<span class=\"fake-hyperlink\">${value}</span>` : '';\r\n};\r\n","import * as DOMPurify_ from 'dompurify';\r\nconst DOMPurify = DOMPurify_; // patch to fix rollup to work\r\n\r\nimport { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\n/**\r\n * Takes an hyperlink cell value and transforms it into a real hyperlink, given that the value starts with 1 of these (http|ftp|https).\r\n * The structure will be \"<a href=\"hyperlink\">hyperlink</a>\"\r\n *\r\n * You can optionally change the hyperlink text displayed by using the generic params \"hyperlinkText\" in the column definition\r\n * For example: { id: 'link', field: 'link', params: { hyperlinkText: 'Company Website' } } will display \"<a href=\"link\">Company Website</a>\"\r\n *\r\n * You can also optionally provide the hyperlink URL by using the generic params \"hyperlinkUrl\" in the column definition\r\n * For example: { id: 'link', field: 'link', params: {  hyperlinkText: 'Company Website', hyperlinkUrl: 'http://www.somewhere.com' } } will display \"<a href=\"http://www.somewhere.com\">Company Website</a>\"\r\n */\r\nexport const hyperlinkFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  const columnParams = columnDef && columnDef.params || {};\r\n\r\n  let displayedText = columnParams.hyperlinkText ? columnParams.hyperlinkText : value;\r\n  displayedText = DOMPurify.sanitize(displayedText || '');\r\n\r\n  let outputLink = columnParams.hyperlinkUrl ? columnParams.hyperlinkUrl : value;\r\n  outputLink = DOMPurify.sanitize(outputLink || '');\r\n\r\n  const matchUrl = outputLink.match(/^(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&amp;:\\/~\\+#]*[\\w\\-\\@?^=%&amp;\\/~\\+#])?/i);\r\n\r\n  if (matchUrl && Array.isArray(matchUrl) && matchUrl.length > 0) {\r\n    const finalUrl = matchUrl[0];\r\n    return `<a href=\"${finalUrl}\">${displayedText}</a>`;\r\n  }\r\n\r\n  return value;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const iconFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  const columnParams = columnDef && columnDef.params || {};\r\n  const icon = columnParams.icon || columnParams.formatterIcon;\r\n\r\n  if (!icon) {\r\n    throw new Error(`You must provide the \"icon\" or \"formatterIcon\" via the generic \"params\" options (e.g.: { formatter: Formatters.icon, params: { formatterIcon: 'fa fa-search' }}`);\r\n  }\r\n  return `<i class=\"${icon}\" aria-hidden=\"true\"></i>`;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const infoIconFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) =>\r\n  `<i class=\"fa fa-info-circle pointer info-icon\" aria-hidden=\"true\"></i>`;\r\n","import { Column, Formatter } from './../models/index';\r\n\r\nexport const italicFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  return value ? `<i>${value}</i>` : '';\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const lowercaseFormatter: Formatter = (row: number, cell: number, value: string | any, columnDef: Column, dataContext: any): string => {\r\n  // make sure the value is a string\r\n  if (value !== undefined && typeof value !== 'string') {\r\n    value = value + '';\r\n  }\r\n  return value ? value.toLowerCase() : '';\r\n};\r\n","\r\nimport { Column, Formatter } from './../models/index';\r\n\r\n/**\r\n * Takes a value display it according to a mask provided\r\n * e.: 1234567890 with mask \"(000) 000-0000\" will display \"(123) 456-7890\"\r\n */\r\nexport const maskFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  const params = columnDef.params || {};\r\n  const mask = params.mask;\r\n\r\n  if (!mask) {\r\n    throw new Error(`You must provide a \"mask\" via the generic \"params\" options (e.g.: { formatter: Formatters.mask, params: { mask: '000-000' }}`);\r\n  }\r\n\r\n  if (value) {\r\n    let i = 0;\r\n    const v = value.toString();\r\n    return mask.replace(/[09A]/gi, () => v[i++] || '');\r\n  }\r\n  return value;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\n\r\nexport const multipleFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const params = columnDef.params || {};\r\n  if (!params.formatters || !Array.isArray(params.formatters)) {\r\n    throw new Error(`The multiple formatter requires the \"formatters\" to be provided as a column params.\r\n    For example: this.columnDefinitions = [{ id: title, field: title, formatter: Formatters.multiple, params: { formatters: [Formatters.lowercase, Formatters.uppercase] }`);\r\n  }\r\n  const formatters: Formatter[] = params.formatters;\r\n\r\n  // loop through all Formatters, the value of 1st formatter will be used by 2nd formatter and so on.\r\n  // they are piped and executed in sequences\r\n  let currentValue = value;\r\n  for (const formatter of formatters) {\r\n    currentValue = formatter(row, cell, currentValue, columnDef, dataContext, grid);\r\n  }\r\n  return currentValue;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const percentFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any): string => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    const percentValue = value * 100;\r\n    return formatNumber(percentValue, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '%', decimalSeparator, thousandSeparator);\r\n  }\r\n  return value;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\n\r\nexport const percentCompleteBarFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any): string => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  if (!isNumber) {\r\n    return '';\r\n  }\r\n\r\n  let color = '';\r\n  let inputNumber = parseFloat(value);\r\n  if (inputNumber > 100) {\r\n    inputNumber = 100;\r\n  }\r\n\r\n  if (inputNumber < 30) {\r\n    color = 'red';\r\n  } else if (inputNumber < 70) {\r\n    color = 'silver';\r\n  } else {\r\n    color = 'green';\r\n  }\r\n\r\n  return `<span class=\"percent-complete-bar\" style=\"background:${color}; width:${inputNumber}%\"></span>`;\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const percentCompleteFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any): string => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    const colorStyle = (value < 50) ? 'red' : 'green';\r\n    const formattedNumber = formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '%', decimalSeparator, thousandSeparator);\r\n    const outputFormattedValue = value > 100 ? '100%' : formattedNumber;\r\n    return `<span style='color:${colorStyle}'>${outputFormattedValue}</span>`;\r\n  }\r\n  return value;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from './formatterUtilities';\r\n\r\nexport const percentSymbolFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any): string => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (isNumber) {\r\n    return formatNumber(value, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '%', decimalSeparator, thousandSeparator);\r\n  }\r\n  return value;\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const progressBarFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any): string => {\r\n  const isNumber = (value === null || value === undefined || value === '') ? false : !isNaN(+value);\r\n  if (!isNumber) {\r\n    return '';\r\n  }\r\n\r\n  let color = '';\r\n  let inputNumber = parseFloat(value);\r\n  if (inputNumber > 100) {\r\n    inputNumber = 100;\r\n  }\r\n\r\n  if (inputNumber < 30) {\r\n    color = 'danger';\r\n  } else if (inputNumber < 70) {\r\n    color = 'warning';\r\n  } else {\r\n    color = 'success';\r\n  }\r\n\r\n  const output = `<div class=\"progress\">\r\n    <div class=\"progress-bar progress-bar-${color} bg-${color}\" role=\"progressbar\" aria-valuenow=\"${inputNumber}\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"min-width: 2em; width: ${inputNumber}%;\">\r\n    ${inputNumber}%\r\n    </div>\r\n  </div>`;\r\n\r\n  return output.replace(/\\s{2,}/g, ' ').trim();\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\n\r\n/** Takes a cell value and translates it with the \"ngx-translate\" service */\r\nexport const translateFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const gridOptions = (grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {};\r\n  const translate = gridOptions.i18n || (columnDef && columnDef.params && columnDef.params.i18n);\r\n\r\n  if (!translate || typeof translate.instant !== 'function') {\r\n    throw new Error(`The translate formatter requires the \"ngx-translate\" Service to be provided as a Grid Options or Column Definition \"i18n\".\r\n    For example: this.gridOptions = { enableTranslate: true, i18n: this.translate }`);\r\n  }\r\n\r\n  // make sure the value is a string (for example a boolean value would throw an error)\r\n  if (value !== undefined && value !== null && typeof value !== 'string') {\r\n    value = value + '';\r\n  }\r\n\r\n  return value ? translate.instant(value) : '';\r\n};\r\n","import { Column, Formatter } from './../models/index';\r\n\r\n/** Takes a boolean value, cast it to upperCase string and finally translates it with the \"ngx-translate\" service */\r\nexport const translateBooleanFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const gridOptions = (grid && typeof grid.getOptions === 'function') ? grid.getOptions() : {};\r\n  const translate = gridOptions.i18n || (columnDef && columnDef.params && columnDef.params.i18n);\r\n\r\n  if (!translate || typeof translate.instant !== 'function') {\r\n    throw new Error(`The translate formatter requires the \"ngx-translate\" Service to be provided as a Grid Options or Column Definition \"i18n\".\r\n    For example: this.gridOptions = { enableTranslate: true, i18n: this.translate }`);\r\n  }\r\n\r\n  // make sure the value is a string (for example a boolean value would throw an error)\r\n  if (value !== undefined && value !== null && typeof value !== 'string') {\r\n    value = value + '';\r\n  }\r\n  return value ? translate.instant(value.toUpperCase() as string) : '';\r\n};\r\n","import { Column, Formatter, GridOption } from './../models/index';\r\nimport { getDescendantProperty, htmlEncode } from '../services/utilities';\r\n\r\nexport const treeFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any, grid: any) => {\r\n  const dataView = grid && grid.getData();\r\n  const gridOptions = grid && grid.getOptions() as GridOption;\r\n  const treeDataOptions = gridOptions && gridOptions.treeDataOptions;\r\n  const treeLevelPropName = treeDataOptions && treeDataOptions.levelPropName || '__treeLevel';\r\n  const indentMarginLeft = treeDataOptions && treeDataOptions.indentMarginLeft || 15;\r\n  let outputValue = value;\r\n\r\n  if (typeof columnDef.queryFieldNameGetterFn === 'function') {\r\n    const fieldName = columnDef.queryFieldNameGetterFn(dataContext);\r\n    if (fieldName && fieldName.indexOf('.') >= 0) {\r\n      outputValue = getDescendantProperty(dataContext, fieldName);\r\n    } else {\r\n      outputValue = dataContext.hasOwnProperty(fieldName) ? dataContext[fieldName] : value;\r\n    }\r\n  }\r\n  if (outputValue === null || outputValue === undefined || dataContext === undefined) {\r\n    return '';\r\n  }\r\n\r\n  if (!dataContext.hasOwnProperty(treeLevelPropName)) {\r\n    throw new Error('You must provide valid \"treeDataOptions\" in your Grid Options and it seems that there are no tree level found in this row');\r\n  }\r\n\r\n  if (dataView && dataView.getIdxById && dataView.getItemByIdx) {\r\n    if (typeof outputValue === 'string') {\r\n      outputValue = htmlEncode(outputValue);\r\n    }\r\n    const identifierPropName = dataView.getIdPropertyName() || 'id';\r\n    const spacer = `<span style=\"display:inline-block; width:${indentMarginLeft * dataContext[treeLevelPropName]}px;\"></span>`;\r\n    const idx = dataView.getIdxById(dataContext[identifierPropName]);\r\n    const nextItemRow = dataView.getItemByIdx(idx + 1);\r\n\r\n    if (nextItemRow && nextItemRow[treeLevelPropName] > dataContext[treeLevelPropName]) {\r\n      if (dataContext.__collapsed) {\r\n        return `${spacer}<span class=\"slick-group-toggle collapsed\"></span>&nbsp;${outputValue}`;\r\n      } else {\r\n        return `${spacer}<span class=\"slick-group-toggle expanded\"></span>&nbsp;${outputValue}`;\r\n      }\r\n    }\r\n    return `${spacer}<span class=\"slick-group-toggle\"></span>&nbsp;${outputValue}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const uppercaseFormatter: Formatter = (row: number, cell: number, value: string | any, columnDef: Column, dataContext: any): string => {\r\n  // make sure the value is a string\r\n  if (value !== undefined && typeof value !== 'string') {\r\n    value = value + '';\r\n  }\r\n  return value ? value.toUpperCase() : '';\r\n};\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const yesNoFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any): string =>\r\n  value ? 'Yes' : 'No';\r\n","import { Column } from './../models/column.interface';\r\nimport { Formatter } from './../models/formatter.interface';\r\n\r\nexport const bsDropdownFormatter: Formatter = (row: number, cell: number, value: any, columnDef: Column, dataContext: any) => {\r\n  const columnParams = columnDef && columnDef.params || {};\r\n  const label = columnParams.label || columnParams.formatterLabel;\r\n\r\n  if (!label) {\r\n    throw new Error(`You must provide the \"label\" or \"formatterLabel\" via the generic \"params\" options (e.g.: { formatter: Formatters.bsDropdown, params: { formatterLabel: 'Label' }}`);\r\n  }\r\n\r\n  return `<div id=\"myDrop-r${row}-c${cell}\" class=\"dropdown pointer\">\r\n    <a class=\"dropdown-toggle\">\r\n      ${label}\r\n      <span class=\"caret\"></span>\r\n    </a>\r\n  </div>`;\r\n};\r\n","import { FieldType } from '../models/index';\r\nimport { getAssociatedDateFormatter } from './formatterUtilities';\r\nimport { alignRightFormatter } from './alignRightFormatter';\r\nimport { arrayObjectToCsvFormatter } from './arrayObjectToCsvFormatter';\r\nimport { arrayToCsvFormatter } from './arrayToCsvFormatter';\r\nimport { boldFormatter } from './boldFormatter';\r\nimport { centerFormatter } from './centerFormatter';\r\nimport { checkboxFormatter } from './checkboxFormatter';\r\nimport { checkmarkFormatter } from './checkmarkFormatter';\r\nimport { collectionFormatter } from './collectionFormatter';\r\nimport { collectionEditorFormatter } from './collectionEditorFormatter';\r\nimport { complexObjectFormatter } from './complexObjectFormatter';\r\nimport { decimalFormatter } from './decimalFormatter';\r\nimport { deleteIconFormatter } from './deleteIconFormatter';\r\nimport { dollarColoredBoldFormatter } from './dollarColoredBoldFormatter';\r\nimport { dollarColoredFormatter } from './dollarColoredFormatter';\r\nimport { dollarFormatter } from './dollarFormatter';\r\nimport { editIconFormatter } from './editIconFormatter';\r\nimport { fakeHyperlinkFormatter } from './fakeHyperlinkFormatter';\r\nimport { hyperlinkFormatter } from './hyperlinkFormatter';\r\nimport { iconFormatter } from './iconFormatter';\r\nimport { infoIconFormatter } from './infoIconFormatter';\r\nimport { italicFormatter } from './italicFormatter';\r\nimport { lowercaseFormatter } from './lowercaseFormatter';\r\nimport { maskFormatter } from './maskFormatter';\r\nimport { multipleFormatter } from './multipleFormatter';\r\nimport { percentFormatter } from './percentFormatter';\r\nimport { percentCompleteBarFormatter } from './percentCompleteBarFormatter';\r\nimport { percentCompleteFormatter } from './percentCompleteFormatter';\r\nimport { percentSymbolFormatter } from './percentSymbolFormatter';\r\nimport { progressBarFormatter } from './progressBarFormatter';\r\nimport { translateFormatter } from './translateFormatter';\r\nimport { translateBooleanFormatter } from './translateBooleanFormatter';\r\nimport { treeFormatter } from './treeFormatter';\r\nimport { uppercaseFormatter } from './uppercaseFormatter';\r\nimport { yesNoFormatter } from './yesNoFormatter';\r\nimport { bsDropdownFormatter } from './bsDropdownFormatter';\r\n\r\n/** Provides a list of different Formatters that will change the cell value displayed in the UI */\r\nexport const Formatters = {\r\n  /** Align cell value to the center (alias to Formatters.center)  */\r\n  alignCenter: centerFormatter,\r\n\r\n  /** Align cell value to the right */\r\n  alignRight: alignRightFormatter,\r\n\r\n  /**\r\n   * Takes an array of complex objects converts it to a comma delimited string.\r\n   * Requires to pass an array of \"propertyNames\" in the column definition the generic \"params\" property\r\n   * For example, if we have an array of user objects that have the property of firstName & lastName then we need to pass in your column definition::\r\n   * params: { propertyNames: ['firtName', 'lastName'] } => 'John Doe, Jane Doe'\r\n   */\r\n  arrayObjectToCsv: arrayObjectToCsvFormatter,\r\n\r\n  /** Takes an array of string and converts it to a comma delimited string */\r\n  arrayToCsv: arrayToCsvFormatter,\r\n\r\n  /** show value in bold font weight */\r\n  bold: boldFormatter,\r\n\r\n  /** boostrap dropdown formatter */\r\n  bsDropdown: bsDropdownFormatter,\r\n\r\n  /** Center a text value horizontally */\r\n  center: centerFormatter,\r\n\r\n  /** When value is filled (true), it will display a checkbox Unicode icon */\r\n  checkbox: checkboxFormatter,\r\n\r\n  /**\r\n   * When value is filled, or if the value is a number and is bigger than 0, it will display a Font-Awesome icon (fa-check).\r\n   * The icon will NOT be displayed when the value is any of the following (\"false\", false, \"0\", 0, -0.5, null, undefined)\r\n   * Anything else than the condition specified will display the icon, so a text with \"00123\" will display the icon but \"0\" will not.\r\n   * Also note that a string (\"null\", \"undefined\") will display the icon but (null, undefined) will not, so the typeof is also important\r\n   */\r\n  checkmark: checkmarkFormatter,\r\n\r\n  /**\r\n   * Takes a complex data object and return the data under that property (for example: \"user.firstName\" will return the first name \"John\")\r\n   * You can pass the complex structure in the \"field\" or the \"params: { complexField: string }\" properties.\r\n   * For example::\r\n   * this.columnDefs = [{ id: 'username', field: 'user.firstName', ... }]\r\n   * OR this.columnDefs = [{ id: 'username', field: 'user', params: { complexField: 'user.firstName' }, ... }]\r\n   */\r\n  complex: complexObjectFormatter,\r\n  complexObject: complexObjectFormatter,\r\n\r\n  /**\r\n   * Looks up values from the columnDefinition.params.collection property and displays the label in CSV or string format\r\n   * @example\r\n   * // the grid will display 'foo' and 'bar' and not 1 and 2 from your dataset\r\n   * { params: { collection: [{ value: 1, label: 'foo'}, {value: 2, label: 'bar' }] }}\r\n   * const dataset = [1, 2];\r\n   */\r\n  collection: collectionFormatter,\r\n\r\n  /**\r\n   * Roughly the same as the \"collectionFormatter\" except that it\r\n   * looks up values from the columnDefinition.editor.collection (instead of params) property and displays the label in CSV or string format\r\n   * @example\r\n   * // the grid will display 'foo' and 'bar' and not 1 and 2 from your dataset\r\n   * { editor: { collection: [{ value: 1, label: 'foo'}, {value: 2, label: 'bar' }] }}\r\n   * const dataset = [1, 2];\r\n   */\r\n  collectionEditor: collectionEditorFormatter,\r\n\r\n  /** Takes a Date object and displays it as an ISO Date format (YYYY-MM-DD) */\r\n  dateIso: getAssociatedDateFormatter(FieldType.dateIso, '-'),\r\n\r\n  /** Takes a Date object and displays it as an ISO Date+Time format (YYYY-MM-DD HH:mm:ss) */\r\n  dateTimeIso: getAssociatedDateFormatter(FieldType.dateTimeIso, '-'),\r\n\r\n  /** Takes a Date object and displays it as an ISO Date+Time (without seconds) format (YYYY-MM-DD HH:mm) */\r\n  dateTimeShortIso: getAssociatedDateFormatter(FieldType.dateTimeShortIso, '-'),\r\n\r\n  /** Takes a Date object and displays it as an ISO Date+Time+(am/pm) format (YYYY-MM-DD h:mm:ss a) */\r\n  dateTimeIsoAmPm: getAssociatedDateFormatter(FieldType.dateTimeIsoAmPm, '-'),\r\n\r\n  /** Takes a Date object and displays it as an Euro Date format (DD/MM/YYYY) */\r\n  dateEuro: getAssociatedDateFormatter(FieldType.dateEuro, '/'),\r\n\r\n  /** Takes a Date object and displays it as an Euro Date+Time format (DD/MM/YYYY HH:mm:ss) */\r\n  dateTimeEuro: getAssociatedDateFormatter(FieldType.dateTimeEuro, '/'),\r\n\r\n  /** Takes a Date object and displays it as an Euro Date+Time (without seconds) format (DD/MM/YYYY HH:mm) */\r\n  dateTimeShortEuro: getAssociatedDateFormatter(FieldType.dateTimeShortEuro, '/'),\r\n\r\n  /** Takes a Date object and displays it as an Euro Date+Time+(am/pm) format (DD/MM/YYYY hh:mm:ss a) */\r\n  dateTimeEuroAmPm: getAssociatedDateFormatter(FieldType.dateTimeEuroAmPm, '/'),\r\n\r\n  /** Takes a Date object and displays it as an US Date format (MM/DD/YYYY) */\r\n  dateUs: getAssociatedDateFormatter(FieldType.dateUs, '/'),\r\n\r\n  /** Takes a Date object and displays it as an US Date+Time format (MM/DD/YYYY HH:mm:ss) */\r\n  dateTimeUs: getAssociatedDateFormatter(FieldType.dateTimeUs, '/'),\r\n\r\n  /** Takes a Date object and displays it as an US Date+Time (without seconds) format (MM/DD/YYYY HH:mm:ss) */\r\n  dateTimeShortUs: getAssociatedDateFormatter(FieldType.dateTimeShortUs, '/'),\r\n\r\n  /** Takes a Date object and displays it as an US Date+Time+(am/pm) format (MM/DD/YYYY hh:mm:ss a) */\r\n  dateTimeUsAmPm: getAssociatedDateFormatter(FieldType.dateTimeUsAmPm, '/'),\r\n\r\n  /** Displays a Font-Awesome delete icon (fa-trash) */\r\n  deleteIcon: deleteIconFormatter,\r\n\r\n  /**\r\n   * Display the value as x decimals formatted, defaults to 2 decimals.\r\n   * You can pass \"decimalPlaces\" or \"minDecimalPlaces\" and/or \"maxDecimalPlaces\" to the \"params\" property.\r\n   * For example:: `{ formatter: Formatters.decimal, params: { decimalPlaces: 3 }}`\r\n   * The property \"decimalPlaces\" is an alias of \"minDecimalPlaces\"\r\n   */\r\n  decimal: decimalFormatter,\r\n\r\n  /** Display the value as 2 decimals formatted with dollar sign '$' at the end of of the value */\r\n  dollar: dollarFormatter,\r\n\r\n  /** Display the value as 2 decimals formatted with dollar sign '$' at the end of of the value, change color of text to red/green on negative/positive value */\r\n  dollarColored: dollarColoredFormatter,\r\n\r\n  /** Display the value as 2 decimals formatted with dollar sign '$' at the end of of the value, change color of text to red/green on negative/positive value, show it in bold font weight as well */\r\n  dollarColoredBold: dollarColoredBoldFormatter,\r\n\r\n  /** Displays a Font-Awesome edit icon (fa-pencil) */\r\n  editIcon: editIconFormatter,\r\n\r\n  /** Takes any text value and display it as a fake a hyperlink (only styled as an hyperlink), this can be used in combo with \"onCellClick\" event */\r\n  fakeHyperlink: fakeHyperlinkFormatter,\r\n\r\n  /**\r\n   * Takes an hyperlink cell value and transforms it into a real hyperlink, given that the value starts with 1 of these (http|ftp|https).\r\n   * The structure will be \"<a href=\"hyperlink\">hyperlink</a>\"\r\n   *\r\n   * You can optionally change the hyperlink text displayed by using the generic params \"hyperlinkText\" in the column definition\r\n   * For example: { id: 'link', field: 'link', params: { hyperlinkText: 'Company Website' } } will display \"<a href=\"link\">Company Website</a>\"\r\n   *\r\n   * You can also optionally provide the hyperlink URL by using the generic params \"hyperlinkUrl\" in the column definition\r\n   * For example: { id: 'link', field: 'link', params: {  hyperlinkText: 'Company Website', hyperlinkUrl: 'http://www.somewhere.com' } } will display \"<a href=\"http://www.somewhere.com\">Company Website</a>\"\r\n   */\r\n  hyperlink: hyperlinkFormatter,\r\n\r\n  /** Display whichever icon you want (library agnostic, it could be Font-Awesome or any other) */\r\n  icon: iconFormatter,\r\n\r\n  /** Displays a Font-Awesome edit icon (fa-info-circle) */\r\n  infoIcon: infoIconFormatter,\r\n\r\n  /** show input text value as italic text */\r\n  italic: italicFormatter,\r\n\r\n  /** Takes a value and displays it all lowercase */\r\n  lowercase: lowercaseFormatter,\r\n\r\n  /**\r\n   * Takes a value display it according to a mask provided\r\n   * e.: 1234567890 with mask \"(000) 000-0000\" will display \"(123) 456-7890\"\r\n   */\r\n  mask: maskFormatter,\r\n\r\n  /**\r\n   * You can pipe multiple formatters (executed in sequence), use params to pass the list of formatters.\r\n   * Requires to pass an array of \"formatters\" in the column definition the generic \"params\" property\r\n   * For example::\r\n   * { field: 'title', formatter: Formatters.multiple, params: { formatters: [ Formatters.lowercase, Formatters.uppercase ] }\r\n   */\r\n  multiple: multipleFormatter,\r\n\r\n  /** Takes a cell value number (between 0.0-1.0) and displays a red (<50) or green (>=50) bar */\r\n  percent: percentFormatter,\r\n\r\n  /** Takes a cell value number (between 0.0-100) and displays a red (<50) or green (>=50) bar */\r\n  percentComplete: percentCompleteFormatter,\r\n\r\n  /** Takes a cell value number (between 0-100) and displays Bootstrap \"percent-complete-bar\" a red (<30), silver (>30 & <70) or green (>=70) bar */\r\n  percentCompleteBar: percentCompleteBarFormatter,\r\n\r\n  /** Takes a cell value number (between 0-100) and add the \"%\" after the number */\r\n  percentSymbol: percentSymbolFormatter,\r\n\r\n  /** Takes a cell value number (between 0-100) and displays Bootstrap \"progress-bar\" a red (<30), silver (>30 & <70) or green (>=70) bar */\r\n  progressBar: progressBarFormatter,\r\n\r\n  /** Takes a cell value and translates it (i18n). Requires an instance of the Translate Service:: `i18n: this.translate */\r\n  translate: translateFormatter,\r\n\r\n  /** Takes a boolean value, cast it to upperCase string and finally translates it (i18n). */\r\n  translateBoolean: translateBooleanFormatter,\r\n\r\n  /** Formatter that must be use with a Tree Data column */\r\n  tree: treeFormatter,\r\n\r\n  /** Takes a value and displays it all uppercase */\r\n  uppercase: uppercaseFormatter,\r\n\r\n  /** Takes a boolean value and display a string 'Yes' or 'No' */\r\n  yesNo: yesNoFormatter\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { decimalFormatted, thousandSeparatorFormatted } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const avgTotalsPercentageFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  let val = totals.avg && totals.avg[field];\r\n  const params = columnDef && columnDef.params;\r\n  let prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    if (val < 0) {\r\n      val = Math.abs(val);\r\n      if (!displayNegativeNumberWithParentheses) {\r\n        prefix += '-';\r\n      } else {\r\n        if (isNaN(minDecimal) && isNaN(maxDecimal)) {\r\n          const outputVal = thousandSeparatorFormatted(Math.round(val), thousandSeparator);\r\n          return `${prefix}(${outputVal}%)${suffix}`;\r\n        }\r\n        return `${prefix}(${decimalFormatted(val, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}%)${suffix}`;\r\n      }\r\n    }\r\n\r\n    if (isNaN(minDecimal) && isNaN(maxDecimal)) {\r\n      const outputVal = thousandSeparatorFormatted(Math.round(val), thousandSeparator);\r\n      return `${prefix}${outputVal}%${suffix}`;\r\n    }\r\n    return `${prefix}${decimalFormatted(val, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}%${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const avgTotalsDollarFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.avg && totals.avg[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `${prefix}${formattedNumber}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { decimalFormatted, thousandSeparatorFormatted } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const avgTotalsFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  let val = totals.avg && totals.avg[field];\r\n  const params = columnDef && columnDef.params;\r\n  let prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    if (val < 0) {\r\n      val = Math.abs(val);\r\n      if (!displayNegativeNumberWithParentheses) {\r\n        prefix += '-';\r\n      } else {\r\n        if (isNaN(minDecimal) && isNaN(maxDecimal)) {\r\n          const outputVal = thousandSeparatorFormatted(Math.round(val), thousandSeparator);\r\n          return `${prefix}(${outputVal})${suffix}`;\r\n        }\r\n        return `${prefix}(${decimalFormatted(val, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)})${suffix}`;\r\n      }\r\n    }\r\n\r\n    if (isNaN(minDecimal) && isNaN(maxDecimal)) {\r\n      const outputVal = thousandSeparatorFormatted(Math.round(val), thousandSeparator);\r\n      return `${prefix}${outputVal}${suffix}`;\r\n    }\r\n    return `${prefix}${decimalFormatted(val, minDecimal, maxDecimal, decimalSeparator, thousandSeparator)}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const minTotalsFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.min && totals.min[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n    return `${prefix}${formattedNumber}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const maxTotalsFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.max && totals.max[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n    return `${prefix}${formattedNumber}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsColoredFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const colorStyle = (val >= 0) ? 'green' : 'red';\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n    return `<span style=\"color:${colorStyle}\">${prefix}${formattedNumber}${suffix}</span>`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsDollarColoredBoldFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const colorStyle = (val >= 0) ? 'green' : 'red';\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `<span style=\"color:${colorStyle}; font-weight: bold;\">${prefix}${formattedNumber}${suffix}</span>`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsDollarColoredFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const colorStyle = (val >= 0) ? 'green' : 'red';\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `<span style=\"color:${colorStyle}\">${prefix}${formattedNumber}${suffix}</span>`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsDollarBoldFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `<b>${prefix}${formattedNumber}${suffix}</b>`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from './../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsDollarFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid, 2);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid, 4);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '$', '', decimalSeparator, thousandSeparator);\r\n    return `${prefix}${formattedNumber}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n    return `${prefix}${formattedNumber}${suffix}`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column, GroupTotalsFormatter } from './../models/index';\r\nimport { formatNumber } from '../services/utilities';\r\nimport { getValueFromParamsOrFormatterOptions } from '../formatters/formatterUtilities';\r\n\r\nexport const sumTotalsBoldFormatter: GroupTotalsFormatter = (totals: any, columnDef: Column, grid?: any) => {\r\n  const field = columnDef.field || '';\r\n  const val = totals.sum && totals.sum[field];\r\n  const params = columnDef && columnDef.params;\r\n  const prefix = params && params.groupFormatterPrefix || '';\r\n  const suffix = params && params.groupFormatterSuffix || '';\r\n  const minDecimal = getValueFromParamsOrFormatterOptions('minDecimal', columnDef, grid);\r\n  const maxDecimal = getValueFromParamsOrFormatterOptions('maxDecimal', columnDef, grid);\r\n  const decimalSeparator = getValueFromParamsOrFormatterOptions('decimalSeparator', columnDef, grid, '.');\r\n  const thousandSeparator = getValueFromParamsOrFormatterOptions('thousandSeparator', columnDef, grid, '');\r\n  const displayNegativeNumberWithParentheses = getValueFromParamsOrFormatterOptions('displayNegativeNumberWithParentheses', columnDef, grid, false);\r\n\r\n  if (val !== null && val !== undefined && !isNaN(+val)) {\r\n    const formattedNumber = formatNumber(val, minDecimal, maxDecimal, displayNegativeNumberWithParentheses, '', '', decimalSeparator, thousandSeparator);\r\n    return `<b>${prefix}${formattedNumber}${suffix}</b>`;\r\n  }\r\n  return '';\r\n};\r\n","import { Column } from './../models/index';\r\nimport { avgTotalsPercentageFormatter } from './avgTotalsPercentageFormatter';\r\nimport { avgTotalsDollarFormatter } from './avgTotalsDollarFormatter';\r\nimport { avgTotalsFormatter } from './avgTotalsFormatter';\r\nimport { minTotalsFormatter } from './minTotalsFormatter';\r\nimport { maxTotalsFormatter } from './maxTotalsFormatter';\r\nimport { sumTotalsColoredFormatter } from './sumTotalsColoredFormatter';\r\nimport { sumTotalsDollarColoredBoldFormatter } from './sumTotalsDollarColoredBoldFormatter';\r\nimport { sumTotalsDollarColoredFormatter } from './sumTotalsDollarColoredFormatter';\r\nimport { sumTotalsDollarBoldFormatter } from './sumTotalsDollarBoldFormatter';\r\nimport { sumTotalsDollarFormatter } from './sumTotalsDollarFormatter';\r\nimport { sumTotalsFormatter } from './sumTotalsFormatter';\r\nimport { sumTotalsBoldFormatter } from './sumTotalsBoldFormatter';\r\n\r\n/** Provides a list of different Formatters that will change the cell value displayed in the UI */\r\nexport const GroupTotalFormatters = {\r\n  /**\r\n   * Average all the column totals\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  avgTotals: avgTotalsFormatter,\r\n\r\n  /**\r\n   * Average all the column totals and display '$' at the end of the value\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  avgTotalsDollar: avgTotalsDollarFormatter,\r\n\r\n  /**\r\n   * Average all the column totals and display '%' at the end of the value\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  avgTotalsPercentage: avgTotalsPercentageFormatter,\r\n\r\n  /**\r\n   * Show max value of all the column totals\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  maxTotals: maxTotalsFormatter,\r\n\r\n  /**\r\n   * Show min value of all the column totals\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  minTotals: minTotalsFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g.: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotals: sumTotalsFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals and display it in bold font weight\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsBold: sumTotalsBoldFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals, change color of text to red/green on negative/positive value\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsColored: sumTotalsColoredFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals and display dollar sign\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsDollar: sumTotalsDollarFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals and display dollar sign and show it in bold font weight\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsDollarBold: sumTotalsDollarBoldFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals, change color of text to red/green on negative/positive value\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsDollarColored: sumTotalsDollarColoredFormatter,\r\n\r\n  /**\r\n   * Sums up all the column totals, change color of text to red/green on negative/positive value, show it in bold font weight as well\r\n   * Extra options available in \"params\":: \"groupFormatterPrefix\" and \"groupFormatterSuffix\", e.g: params: { groupFormatterPrefix: '<i>Total</i>: ', groupFormatterSuffix: '$' }\r\n   */\r\n  sumTotalsDollarColoredBold: sumTotalsDollarColoredBoldFormatter,\r\n};\r\n","import { Component, Input, OnDestroy, OnInit, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Constants } from '../constants';\nimport { GridOption, Locale } from './../models/index';\nimport { PaginationService } from '../services/pagination.service';\nimport { getTranslationPrefix, unsubscribeAllObservables } from '../services/utilities';\n\n@Component({\n  selector: 'slick-pagination',\n  templateUrl: './slick-pagination.component.html'\n})\nexport class SlickPaginationComponent implements OnDestroy, OnInit {\n  @Input() gridOptions: GridOption;\n\n  private subscriptions: Subscription[] = [];\n  private _enableTranslate = false;\n  private _gridOptions: GridOption;\n  private _locales: Locale;\n\n  // text translations (handled by ngx-translate or by custom locale)\n  textItemsPerPage = 'items per page';\n  textItems = 'items';\n  textOf = 'of';\n  textPage = 'Page';\n\n  /** Constructor */\n  constructor(private paginationService: PaginationService, @Optional() private translate: TranslateService) { }\n\n  get availablePageSizes(): number[] {\n    return this.paginationService.availablePageSizes;\n  }\n\n  get dataFrom(): number {\n    return this.paginationService.dataFrom;\n  }\n\n  get dataTo(): number {\n    return this.paginationService.dataTo;\n  }\n\n  /** is the left side pagination disabled? */\n  get isLeftPaginationDisabled(): boolean {\n    return this.pageNumber === 1 || this.totalItems === 0;\n  }\n\n  /** is the right side pagination disabled? */\n  get isRightPaginationDisabled(): boolean {\n    return this.pageNumber === this.pageCount || this.totalItems === 0;\n  }\n\n  get itemsPerPage(): number {\n    return this.paginationService.itemsPerPage;\n  }\n\n  get pageCount(): number {\n    return this.paginationService.pageCount;\n  }\n\n  get pageNumber(): number {\n    return this.paginationService.pageNumber;\n  }\n  set pageNumber(page: number) {\n    // the setter has to be declared but we won't use it, instead we will use the \"changeToCurrentPage()\" to only update the value after ENTER keydown event\n  }\n\n  get totalItems() {\n    return this.paginationService.totalItems;\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n  }\n\n  ngOnInit() {\n    this._gridOptions = this.gridOptions || {};\n    this._enableTranslate = this._gridOptions && this._gridOptions.enableTranslate || false;\n    this._locales = this._gridOptions && this._gridOptions.locales || Constants.locales;\n\n    if (this._enableTranslate && !this.translate) {\n      throw new Error('[Angular-Slickgrid] requires \"ngx-translate\" to be installed and configured when the grid option \"enableTranslate\" is enabled.');\n    }\n\n    this.translateAllUiTexts(this._locales);\n\n    // translate all the text using ngx-translate or custom locales\n    if (this._enableTranslate && this.translate && this.translate.onLangChange) {\n      this.subscriptions.push(this.translate.onLangChange.subscribe(() => this.translateAllUiTexts(this._locales)));\n    }\n  }\n\n  changeToFirstPage(event: MouseEvent) {\n    if (!this.isLeftPaginationDisabled) {\n      this.paginationService.goToFirstPage(event);\n    }\n  }\n\n  changeToLastPage(event: MouseEvent) {\n    if (!this.isRightPaginationDisabled) {\n      this.paginationService.goToLastPage(event);\n    }\n  }\n\n  changeToNextPage(event: MouseEvent) {\n    if (!this.isRightPaginationDisabled) {\n      this.paginationService.goToNextPage(event);\n    }\n  }\n\n  changeToPreviousPage(event: MouseEvent) {\n    if (!this.isLeftPaginationDisabled) {\n      this.paginationService.goToPreviousPage(event);\n    }\n  }\n\n  changeToCurrentPage(event: any) {\n    let pageNumber = 1;\n    if (event && event.currentTarget && event.currentTarget.value) {\n      pageNumber = +(event.currentTarget.value);\n    }\n    this.paginationService.goToPageNumber(pageNumber, event);\n  }\n\n  changeItemPerPage(event: any) {\n    let itemsPerPage = 1;\n    if (event && event.currentTarget && event.currentTarget.value) {\n      itemsPerPage = +(event.currentTarget.value);\n    }\n    this.paginationService.changeItemPerPage(itemsPerPage, event);\n  }\n\n  dispose() {\n    this.paginationService.dispose();\n\n    // also unsubscribe all Angular Subscriptions\n    this.subscriptions = unsubscribeAllObservables(this.subscriptions);\n  }\n\n  // --\n  // private functions\n  // --------------------\n\n  /** Translate all the texts shown in the UI, use ngx-translate service when available or custom locales when service is null */\n  private translateAllUiTexts(locales: Locale) {\n    if (this._enableTranslate && this.translate && this.translate.instant && this.translate.currentLang) {\n      const translationPrefix = getTranslationPrefix(this._gridOptions);\n      this.textItemsPerPage = this.translate.instant(`${translationPrefix}ITEMS_PER_PAGE`);\n      this.textItems = this.translate.instant(`${translationPrefix}ITEMS`);\n      this.textOf = this.translate.instant(`${translationPrefix}OF`);\n      this.textPage = this.translate.instant(`${translationPrefix}PAGE`);\n    } else if (locales) {\n      this.textItemsPerPage = locales.TEXT_ITEMS_PER_PAGE || 'TEXT_ITEMS_PER_PAGE';\n      this.textItems = locales.TEXT_ITEMS || 'TEXT_ITEMS';\n      this.textOf = locales.TEXT_OF || 'TEXT_OF';\n      this.textPage = locales.TEXT_PAGE || 'TEXT_PAGE';\n    }\n  }\n}\n","\r\nimport { Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport * as DOMPurify from 'dompurify';\r\n\r\nimport { EmptyWarning, GridOption } from '../models/index';\r\n\r\nexport class SlickEmptyWarningComponent {\r\n  private _grid: any;\r\n  private _warningLeftElement: HTMLDivElement | null;\r\n  private _warningRightElement: HTMLDivElement | null;\r\n\r\n  /** Getter for the Grid Options pulled through the Grid Object */\r\n  get gridOptions(): GridOption {\r\n    return (this._grid && this._grid.getOptions) ? this._grid.getOptions() : {};\r\n  }\r\n\r\n  set grid(slickGrid: any) {\r\n    this._grid = slickGrid;\r\n  }\r\n\r\n  constructor(@Optional() private translate?: TranslateService) { }\r\n\r\n  dispose() {\r\n    if (this._warningLeftElement && this._warningLeftElement.remove) {\r\n      this._warningLeftElement.remove();\r\n    }\r\n    if (this._warningRightElement && this._warningRightElement.remove) {\r\n      this._warningRightElement.remove();\r\n    }\r\n    this._warningLeftElement = null;\r\n    this._warningRightElement = null;\r\n  }\r\n\r\n  /**\r\n   * Display a warning of empty data when the filtered dataset is empty\r\n   * NOTE: to make this code reusable, you could (should) move this code into a utility service\r\n   * @param isShowing - are we showing the message?\r\n   * @param options - any styling options you'd like to pass like the text color\r\n   */\r\n  showEmptyDataMessage(isShowing = true, options?: EmptyWarning): boolean {\r\n    if (!this._grid || !this.gridOptions) {\r\n      return false;\r\n    }\r\n    const gridUid = this._grid && this._grid.getUID();\r\n    const defaultMessage = 'No data to display.';\r\n    const mergedOptions: EmptyWarning = { message: defaultMessage, ...this.gridOptions.emptyDataWarning, ...options };\r\n    const emptyDataClassName = mergedOptions && mergedOptions.className || 'slick-empty-data-warning';\r\n    this._warningLeftElement = document.querySelector<HTMLDivElement>(`.${gridUid} .${emptyDataClassName}`);\r\n    const gridCanvasLeftElm = document.querySelector<HTMLDivElement>(`.${gridUid} .grid-canvas.grid-canvas-left`);\r\n    const gridCanvasRightElm = document.querySelector<HTMLDivElement>(`.${gridUid} .grid-canvas.grid-canvas-right`);\r\n    const leftElementMarginLeft = mergedOptions.leftViewportMarginLeft || 0;\r\n    const rightElementMarginLeft = mergedOptions.rightViewportMarginLeft || 0;\r\n    const leftElementFrozenMarginLeft = mergedOptions.frozenLeftViewportMarginLeft || 0;\r\n    const rightElementFrozenMarginLeft = mergedOptions.frozenRightViewportMarginLeft || 0;\r\n    const isFrozenGrid = (this.gridOptions.frozenColumn !== undefined && this.gridOptions.frozenColumn >= 0);\r\n    const leftViewportMarginLeft = typeof leftElementMarginLeft === 'string' ? leftElementMarginLeft : `${leftElementMarginLeft}px`;\r\n    const rightViewportMarginLeft = typeof rightElementMarginLeft === 'string' ? rightElementMarginLeft : `${rightElementMarginLeft}px`;\r\n\r\n    if (!this._warningLeftElement && !isShowing) {\r\n      return false;\r\n    }\r\n\r\n    // warning message could come from a translation key or by the warning options\r\n    let warningMessage = mergedOptions.message;\r\n    if (this.gridOptions.enableTranslate && this.translate && this.translate.instant && mergedOptions && mergedOptions.messageKey) {\r\n      warningMessage = this.translate.instant(mergedOptions.messageKey);\r\n    }\r\n\r\n    if (!this._warningLeftElement && gridCanvasLeftElm && gridCanvasRightElm) {\r\n      const sanitizedOptions = this.gridOptions && this.gridOptions.sanitizeHtmlOptions || {};\r\n\r\n      // sanitize any unauthorized html tags like script and others\r\n      // for the remaining allowed tags we'll permit all attributes\r\n      const sanitizedText = (DOMPurify.sanitize(warningMessage, sanitizedOptions) || '').toString();\r\n\r\n      this._warningLeftElement = document.createElement('div');\r\n      this._warningLeftElement.classList.add(emptyDataClassName);\r\n      this._warningLeftElement.classList.add('left');\r\n      this._warningLeftElement.innerHTML = sanitizedText;\r\n\r\n      // clone the warning element and add the \"right\" class to it so we can distinguish\r\n      this._warningRightElement = this._warningLeftElement.cloneNode(true) as HTMLDivElement;\r\n      this._warningRightElement.classList.add('right');\r\n\r\n      // append both warning elements to both left/right canvas\r\n      gridCanvasRightElm.appendChild(this._warningRightElement);\r\n      gridCanvasLeftElm.appendChild(this._warningLeftElement);\r\n    }\r\n\r\n    // if we did find the Slick-Empty-Warning element then we'll display/hide at the grid position with some margin offsets (we need to position under the headerRow and filterRow)\r\n    // when using a frozen/pinned grid, we also have extra options to hide left/right message\r\n    if (this._warningLeftElement) {\r\n      // display/hide right/left messages\r\n      let leftDisplay = isShowing ? 'block' : 'none';\r\n      if (isFrozenGrid && isShowing) {\r\n        leftDisplay = (mergedOptions.hideFrozenLeftWarning) ? 'none' : 'block';\r\n      }\r\n      this._warningLeftElement.style.display = leftDisplay;\r\n\r\n      // use correct left margin (defaults to 40% on regular grid or 10px on frozen grid)\r\n      const leftFrozenMarginLeft = typeof leftElementFrozenMarginLeft === 'string' ? leftElementFrozenMarginLeft : `${leftElementFrozenMarginLeft}px`;\r\n      this._warningLeftElement.style.marginLeft = isFrozenGrid ? leftFrozenMarginLeft : leftViewportMarginLeft;\r\n    }\r\n\r\n    if (this._warningRightElement) {\r\n      // use correct left margin (defaults to 40% on regular grid or 10px on frozen grid)\r\n      let rightDisplay = isShowing ? 'block' : 'none';\r\n      if (isFrozenGrid && isShowing) {\r\n        rightDisplay = (mergedOptions.hideFrozenRightWarning) ? 'none' : 'block';\r\n      }\r\n      this._warningRightElement.style.display = rightDisplay;\r\n\r\n      // use correct left margin (defaults to 40% on regular grid or 10px on frozen grid)\r\n      const rightFrozenMarginLeft = typeof rightElementFrozenMarginLeft === 'string' ? rightElementFrozenMarginLeft : `${rightElementFrozenMarginLeft}px`;\r\n      this._warningRightElement.style.marginLeft = isFrozenGrid ? rightFrozenMarginLeft : rightViewportMarginLeft;\r\n    }\r\n\r\n    return isShowing;\r\n  }\r\n}\r\n","// import 3rd party vendor libs\r\n// only import the necessary core lib, each will be imported on demand when enabled (via require)\r\nimport 'jquery-ui-dist/jquery-ui';\r\nimport 'slickgrid/lib/jquery.event.drag-2.3.0';\r\nimport 'slickgrid/lib/jquery.mousewheel';\r\nimport 'slickgrid/slick.core';\r\nimport 'slickgrid/slick.grid';\r\nimport 'slickgrid/slick.dataview';\r\n\r\n// ...then everything else...\r\nimport { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, Inject, Input, Output, OnDestroy, OnInit, Optional } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { isObservable, Observable, Subscription } from 'rxjs';\r\n\r\nimport { Constants } from '../constants';\r\nimport { GlobalGridOptions } from './../global-grid-options';\r\nimport { convertParentChildArrayToHierarchicalView, titleCase, unsubscribeAllObservables } from './../services/utilities';\r\nimport { executeBackendProcessesCallback, onBackendError, refreshBackendDataset } from '../services/backend-utilities';\r\nimport {\r\n  AngularGridInstance,\r\n  BackendServiceApi,\r\n  BackendServiceOption,\r\n  Column,\r\n  ColumnEditor,\r\n  CustomFooterOption,\r\n  DataViewOption,\r\n  ExtensionName,\r\n  GraphqlPaginatedResult,\r\n  GraphqlResult,\r\n  GridOption,\r\n  GridStateChange,\r\n  GridStateType,\r\n  Locale,\r\n  Metrics,\r\n  Pagination,\r\n  ServicePagination,\r\n  SlickEventHandler,\r\n  TreeDataOption,\r\n} from './../models/index';\r\nimport { FilterFactory } from '../filters/filterFactory';\r\nimport { SlickgridConfig } from '../slickgrid-config';\r\nimport { SlickEmptyWarningComponent } from './slick-empty-warning.component';\r\n\r\n// Services\r\nimport { AngularUtilService } from '../services/angularUtil.service';\r\nimport { ExcelExportService } from '../services/excelExport.service';\r\nimport { ExportService } from './../services/export.service';\r\nimport { ExtensionService } from '../services/extension.service';\r\nimport { ExtensionUtility } from '../extensions/extensionUtility';\r\nimport { FilterService } from './../services/filter.service';\r\nimport { GraphqlService } from './../services/graphql.service';\r\nimport { GridEventService } from './../services/gridEvent.service';\r\nimport { GridService } from './../services/grid.service';\r\nimport { GridStateService } from './../services/gridState.service';\r\nimport { GroupingAndColspanService } from './../services/groupingAndColspan.service';\r\nimport { PaginationService } from '../services/pagination.service';\r\nimport { ResizerService } from './../services/resizer.service';\r\nimport { SharedService } from '../services/shared.service';\r\nimport { SortService } from './../services/sort.service';\r\nimport { TreeDataService } from './../services/treeData.service';\r\n\r\n// Extensions (SlickGrid Controls & Plugins)\r\nimport { AutoTooltipExtension } from '../extensions/autoTooltipExtension';\r\nimport { CellExternalCopyManagerExtension } from '../extensions/cellExternalCopyManagerExtension';\r\nimport { CellMenuExtension } from '../extensions/cellMenuExtension';\r\nimport { CheckboxSelectorExtension } from '../extensions/checkboxSelectorExtension';\r\nimport { ColumnPickerExtension } from '../extensions/columnPickerExtension';\r\nimport { ContextMenuExtension } from '../extensions/contextMenuExtension';\r\nimport { DraggableGroupingExtension } from '../extensions/draggableGroupingExtension';\r\nimport { GridMenuExtension } from '../extensions/gridMenuExtension';\r\nimport { GroupItemMetaProviderExtension } from '../extensions/groupItemMetaProviderExtension';\r\nimport { HeaderButtonExtension } from '../extensions/headerButtonExtension';\r\nimport { HeaderMenuExtension } from '../extensions/headerMenuExtension';\r\nimport { RowDetailViewExtension } from '../extensions/rowDetailViewExtension';\r\nimport { RowMoveManagerExtension } from '../extensions/rowMoveManagerExtension';\r\nimport { RowSelectionExtension } from '../extensions/rowSelectionExtension';\r\n\r\n// using external non-typed js libraries\r\ndeclare const Slick: any;\r\ndeclare const $: any;\r\ndeclare function require(name: string);\r\n\r\nconst slickgridEventPrefix = 'sg';\r\n\r\n@Component({\r\n  selector: 'angular-slickgrid',\r\n  templateUrl: './angular-slickgrid.component.html',\r\n  providers: [\r\n    // make everything transient (non-singleton)\r\n    AngularUtilService,\r\n    AutoTooltipExtension,\r\n    CellExternalCopyManagerExtension,\r\n    CellMenuExtension,\r\n    CheckboxSelectorExtension,\r\n    ColumnPickerExtension,\r\n    ContextMenuExtension,\r\n    DraggableGroupingExtension,\r\n    ExcelExportService,\r\n    ExtensionService,\r\n    ExportService,\r\n    ExtensionUtility,\r\n    FilterFactory,\r\n    FilterService,\r\n    GraphqlService,\r\n    GridEventService,\r\n    GridMenuExtension,\r\n    GridService,\r\n    GridStateService,\r\n    GroupingAndColspanService,\r\n    GroupItemMetaProviderExtension,\r\n    HeaderButtonExtension,\r\n    HeaderMenuExtension,\r\n    PaginationService,\r\n    ResizerService,\r\n    RowDetailViewExtension,\r\n    RowMoveManagerExtension,\r\n    RowSelectionExtension,\r\n    SharedService,\r\n    SortService,\r\n    SlickgridConfig,\r\n    TreeDataService,\r\n  ]\r\n})\r\nexport class AngularSlickgridComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  private _dataset: any[] | null;\r\n  private _columnDefinitions: Column[];\r\n  private _eventHandler: SlickEventHandler = new Slick.EventHandler();\r\n  private _angularGridInstances: AngularGridInstance | undefined;\r\n  private _fixedHeight: number | null;\r\n  private _fixedWidth: number | null;\r\n  private _hideHeaderRowAfterPageLoad = false;\r\n  private _isGridInitialized = false;\r\n  private _isDatasetInitialized = false;\r\n  private _isPaginationInitialized = false;\r\n  private _isLocalGrid = true;\r\n  private _paginationOptions: Pagination | undefined;\r\n  private slickEmptyWarning: SlickEmptyWarningComponent;\r\n  dataView: any | null;\r\n  grid: any | null;\r\n  gridHeightString: string;\r\n  gridWidthString: string;\r\n  groupingDefinition: any = {};\r\n  groupItemMetadataProvider: any;\r\n  backendServiceApi: BackendServiceApi;\r\n  customFooterOptions: CustomFooterOption;\r\n  locales: Locale;\r\n  metrics: Metrics;\r\n  showCustomFooter = false;\r\n  showPagination = false;\r\n  totalItems = 0;\r\n  paginationData: {\r\n    gridOptions: GridOption;\r\n  };\r\n  subscriptions: Subscription[] = [];\r\n\r\n  @Output() onAngularGridCreated = new EventEmitter<AngularGridInstance>();\r\n  @Output() onDataviewCreated = new EventEmitter<any>();\r\n  @Output() onGridCreated = new EventEmitter<any>();\r\n  @Output() onGridInitialized = new EventEmitter<any>();\r\n  @Output() onBeforeGridCreate = new EventEmitter<boolean>();\r\n  @Output() onBeforeGridDestroy = new EventEmitter<any>();\r\n  @Output() onAfterGridDestroyed = new EventEmitter<boolean>();\r\n  @Output() onGridStateChanged = new EventEmitter<GridStateChange>();\r\n  @Output() onGridBeforeExportToFile = this.exportService.onGridBeforeExportToFile;\r\n  @Output() onGridAfterExportToFile = this.exportService.onGridAfterExportToFile;\r\n  @Output() onGridBeforeExportToExcel = this.excelExportService.onGridBeforeExportToExcel;\r\n  @Output() onGridAfterExportToExcel = this.excelExportService.onGridAfterExportToExcel;\r\n  @Input() customDataView: any;\r\n  @Input() gridId: string;\r\n  @Input() gridOptions: GridOption;\r\n\r\n  @Input()\r\n  get paginationOptions(): Pagination | undefined {\r\n    return this._paginationOptions;\r\n  }\r\n  set paginationOptions(options: Pagination | undefined) {\r\n    if (options && this._paginationOptions) {\r\n      this._paginationOptions = { ...this._paginationOptions, ...options };\r\n    } else {\r\n      this._paginationOptions = options;\r\n    }\r\n    this.gridOptions.pagination = this._paginationOptions;\r\n    this.paginationService.updateTotalItems(options && options.totalItems || 0, true);\r\n  }\r\n\r\n  @Input()\r\n  set gridHeight(height: number) {\r\n    this._fixedHeight = height;\r\n  }\r\n  @Input()\r\n  set gridWidth(width: number) {\r\n    this._fixedWidth = width;\r\n  }\r\n\r\n  @Input()\r\n  set columnDefinitions(columnDefinitions: Column[]) {\r\n    this._columnDefinitions = columnDefinitions;\r\n    if (this._isGridInitialized) {\r\n      this.updateColumnDefinitionsList(columnDefinitions);\r\n    }\r\n  }\r\n  get columnDefinitions(): Column[] {\r\n    return this._columnDefinitions;\r\n  }\r\n\r\n  @Input()\r\n  get dataset(): any[] {\r\n    return this.dataView.getItems();\r\n  }\r\n  set dataset(dataset: any[]) {\r\n    this._dataset = dataset;\r\n    this.refreshGridData(dataset);\r\n  }\r\n\r\n  @Input()\r\n  get datasetHierarchical(): any[] | null {\r\n    return this.sharedService.hierarchicalDataset;\r\n  }\r\n  set datasetHierarchical(newHierarchicalDataset: any[] | null) {\r\n    this.sharedService.hierarchicalDataset = newHierarchicalDataset;\r\n\r\n    if (newHierarchicalDataset && this.columnDefinitions && this.filterService && this.filterService.clearFilters) {\r\n      this.filterService.clearFilters();\r\n    }\r\n\r\n    // when a hierarchical dataset is set afterward, we can reset the flat dataset and call a tree data sort that will overwrite the flat dataset\r\n    setTimeout(() => {\r\n      if (newHierarchicalDataset && this.dataView && this.sortService && this.sortService.processTreeDataInitialSort && this.gridOptions && this.gridOptions.enableTreeData) {\r\n        this.dataView.setItems([], this.gridOptions.datasetIdPropertyName);\r\n        this.sortService.processTreeDataInitialSort();\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  get elementRef(): ElementRef {\r\n    return this.elm;\r\n  }\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    private elm: ElementRef,\r\n    private excelExportService: ExcelExportService,\r\n    private exportService: ExportService,\r\n    private extensionService: ExtensionService,\r\n    private extensionUtility: ExtensionUtility,\r\n    private filterService: FilterService,\r\n    private gridEventService: GridEventService,\r\n    private gridService: GridService,\r\n    private gridStateService: GridStateService,\r\n    private groupingAndColspanService: GroupingAndColspanService,\r\n    private paginationService: PaginationService,\r\n    private resizer: ResizerService,\r\n    private sharedService: SharedService,\r\n    private sortService: SortService,\r\n    private treeDataService: TreeDataService,\r\n    @Optional() private translate: TranslateService,\r\n    @Inject('config') private forRootConfig: GridOption\r\n  ) {\r\n    this.slickEmptyWarning = new SlickEmptyWarningComponent(this.translate);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initialization();\r\n    this._isGridInitialized = true;\r\n\r\n    // user must provide a \"gridHeight\" or use \"autoResize: true\" in the grid options\r\n    if (!this._fixedHeight && !this.gridOptions.enableAutoResize) {\r\n      throw new Error(\r\n        `[Angular-Slickgrid] requires a \"grid-height\" or the \"enableAutoResize\" grid option to be enabled.\r\n        Without that the grid will seem empty while in fact it just does not have any height define.`\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.onBeforeGridCreate.emit(true);\r\n    if (this.gridOptions && !this.gridOptions.enableAutoResize && (this._fixedHeight || this._fixedWidth)) {\r\n      this.gridHeightString = `${this._fixedHeight}px`;\r\n      this.gridWidthString = `${this._fixedWidth}px`;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onBeforeGridDestroy.emit(this.grid);\r\n    this.destroy();\r\n    this.onAfterGridDestroyed.emit(true);\r\n  }\r\n\r\n  destroy(shouldEmptyDomElementContainer = false) {\r\n    this.extensionService.dispose();\r\n    this.filterService.dispose();\r\n    this.gridEventService.dispose();\r\n    this.gridStateService.dispose();\r\n    this.gridService.dispose();\r\n    this.groupingAndColspanService.dispose();\r\n    this.paginationService.dispose();\r\n    this.resizer.dispose();\r\n    this.sortService.dispose();\r\n    this.treeDataService.dispose();\r\n\r\n    // dispose the Components\r\n    this.slickEmptyWarning.dispose();\r\n\r\n    if (this._eventHandler && this._eventHandler.unsubscribeAll) {\r\n      this._eventHandler.unsubscribeAll();\r\n    }\r\n    if (this.dataView) {\r\n      if (this.dataView && this.dataView.setItems) {\r\n        this.dataView.setItems([]);\r\n      }\r\n      if (this.dataView.destroy) {\r\n        this.dataView.destroy();\r\n      }\r\n    }\r\n    if (this.grid && this.grid.destroy) {\r\n      this.grid.destroy(shouldEmptyDomElementContainer);\r\n    }\r\n\r\n    if (this.backendServiceApi) {\r\n      for (const prop of Object.keys(this.backendServiceApi)) {\r\n        this.backendServiceApi[prop] = null;\r\n      }\r\n      this.backendServiceApi = null;\r\n    }\r\n    for (const prop of Object.keys(this.columnDefinitions)) {\r\n      this.columnDefinitions[prop] = null;\r\n    }\r\n    for (const prop of Object.keys(this.sharedService)) {\r\n      this.sharedService[prop] = null;\r\n    }\r\n\r\n    // we could optionally also empty the content of the grid container DOM element\r\n    if (shouldEmptyDomElementContainer) {\r\n      this.emptyGridContainerElm();\r\n    }\r\n\r\n    // also unsubscribe all RxJS subscriptions\r\n    this.subscriptions = unsubscribeAllObservables(this.subscriptions);\r\n\r\n    this._dataset = null;\r\n    this.datasetHierarchical = null;\r\n    this._columnDefinitions = [];\r\n    this._angularGridInstances = null;\r\n    this.grid = null;\r\n    this.gridOptions = null;\r\n    this.dataView = null;\r\n  }\r\n\r\n  emptyGridContainerElm() {\r\n    const gridContainerId = this.gridOptions && this.gridOptions.gridContainerId || 'grid1';\r\n    $(gridContainerId).empty();\r\n  }\r\n\r\n  /** Dispatch of Custom Event, which by default will bubble & is cancelable */\r\n  dispatchCustomEvent(eventName: string, data?: any, isBubbling: boolean = true, isCancelable: boolean = true) {\r\n    const eventInit: CustomEventInit = { bubbles: isBubbling, cancelable: isCancelable };\r\n    if (data) {\r\n      eventInit.detail = data;\r\n    }\r\n    return this.elm.nativeElement.dispatchEvent(new CustomEvent(eventName, eventInit));\r\n  }\r\n\r\n  /**\r\n   * Define our internal Post Process callback, it will execute internally after we get back result from the Process backend call\r\n   * For now, this is GraphQL Service ONLY feature and it will basically refresh the Dataset & Pagination without having the user to create his own PostProcess every time\r\n   */\r\n  createBackendApiInternalPostProcessCallback(gridOptions: GridOption) {\r\n    const backendApi = gridOptions && gridOptions.backendServiceApi;\r\n    if (backendApi && backendApi.service) {\r\n      // internalPostProcess only works (for now) with a GraphQL Service, so make sure it is of that type\r\n      if (backendApi.service instanceof GraphqlService || typeof backendApi.service.getDatasetName === 'function') {\r\n        backendApi.internalPostProcess = (processResult: GraphqlResult | GraphqlPaginatedResult) => {\r\n          const datasetName = (backendApi && backendApi.service && typeof backendApi.service.getDatasetName === 'function') ? backendApi.service.getDatasetName() : '';\r\n          if (processResult && processResult.data && processResult.data[datasetName]) {\r\n            const data = processResult.data[datasetName].hasOwnProperty('nodes') ? (processResult as GraphqlPaginatedResult).data[datasetName].nodes : (processResult as GraphqlResult).data[datasetName];\r\n            const totalCount = processResult.data[datasetName].hasOwnProperty('totalCount') ? (processResult as GraphqlPaginatedResult).data[datasetName].totalCount : (processResult as GraphqlResult).data[datasetName].length;\r\n            this.refreshGridData(data, totalCount || 0);\r\n          }\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On a Pagination changed, we will trigger a Grid State changed with the new pagination info\r\n   * Also if we use Row Selection or the Checkbox Selector, we need to reset any selection\r\n   */\r\n  paginationChanged(pagination: ServicePagination) {\r\n    const isSyncGridSelectionEnabled = this.gridStateService && this.gridStateService.needToPreserveRowSelection() || false;\r\n    if (!isSyncGridSelectionEnabled && (this.gridOptions.enableRowSelection || this.gridOptions.enableCheckboxSelector)) {\r\n      this.gridService.setSelectedRows([]);\r\n    }\r\n\r\n    const { pageNumber, pageSize } = pagination;\r\n    if (this.sharedService) {\r\n      if (pageSize) {\r\n        this.sharedService.currentPagination = { pageNumber, pageSize };\r\n      }\r\n    }\r\n    this.gridStateService.onGridStateChanged.next({\r\n      change: { newValues: { pageNumber, pageSize }, type: GridStateType.pagination },\r\n      gridState: this.gridStateService.getCurrentGridState()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When dataset changes, we need to refresh the entire grid UI & possibly resize it as well\r\n   * @param dataset\r\n   */\r\n  refreshGridData(dataset: any[], totalCount?: number) {\r\n    if (this.gridOptions && this.gridOptions.enableEmptyDataWarningMessage && Array.isArray(dataset)) {\r\n      const finalTotalCount = totalCount || dataset.length;\r\n      this.displayEmptyDataWarning(finalTotalCount < 1);\r\n    }\r\n\r\n    if (Array.isArray(dataset) && this.grid && this.dataView && typeof this.dataView.setItems === 'function') {\r\n      this.dataView.setItems(dataset, this.gridOptions.datasetIdPropertyName);\r\n      if (!this.gridOptions.backendServiceApi) {\r\n        this.dataView.reSort();\r\n      }\r\n\r\n      if (dataset.length > 0) {\r\n        if (!this._isDatasetInitialized) {\r\n          this.loadPresetsWhenDatasetInitialized();\r\n\r\n          if (this.gridOptions.enableCheckboxSelector) {\r\n            this.loadRowSelectionPresetWhenExists();\r\n          }\r\n        }\r\n        this._isDatasetInitialized = true;\r\n\r\n        // also update the hierarchical dataset\r\n        if (dataset.length > 0 && this.gridOptions.treeDataOptions) {\r\n          this.sharedService.hierarchicalDataset = this.treeDataSortComparer(dataset);\r\n        }\r\n      }\r\n\r\n      if (dataset) {\r\n        this.grid.invalidate();\r\n      }\r\n\r\n      // display the Pagination component only after calling this refresh data first, we call it here so that if we preset pagination page number it will be shown correctly\r\n      this.showPagination = (this.gridOptions && (this.gridOptions.enablePagination || (this.gridOptions.backendServiceApi && this.gridOptions.enablePagination === undefined))) ? true : false;\r\n\r\n      if (this.gridOptions && this.gridOptions.backendServiceApi && this.gridOptions.pagination) {\r\n        const paginationOptions = this.setPaginationOptionsWhenPresetDefined(this.gridOptions, this._paginationOptions);\r\n        // when we have a totalCount use it, else we'll take it from the pagination object\r\n        // only update the total items if it's different to avoid refreshing the UI\r\n        const totalRecords = totalCount !== undefined ? totalCount : (this.gridOptions && this.gridOptions.pagination && this.gridOptions.pagination.totalItems);\r\n        if (totalRecords !== this.totalItems) {\r\n          this.totalItems = totalRecords;\r\n        }\r\n\r\n        // initialize the Pagination Service with new pagination options (which might have presets)\r\n        if (!this._isPaginationInitialized) {\r\n          this.initializePaginationService(paginationOptions);\r\n        } else {\r\n          // update the pagination service with the new total\r\n          this.paginationService.totalItems = this.totalItems;\r\n        }\r\n      }\r\n\r\n      // resize the grid inside a slight timeout, in case other DOM element changed prior to the resize (like a filter/pagination changed)\r\n      if (this.grid && this.gridOptions.enableAutoResize) {\r\n        const delay = this.gridOptions.autoResize && this.gridOptions.autoResize.delay;\r\n        this.resizer.resizeGrid(delay || 10);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if there's any Pagination Presets defined in the Grid Options,\r\n   * if there are then load them in the paginationOptions object\r\n   */\r\n  setPaginationOptionsWhenPresetDefined(gridOptions: GridOption, paginationOptions: Pagination): Pagination {\r\n    if (gridOptions.presets && gridOptions.presets.pagination && gridOptions.pagination) {\r\n      paginationOptions.pageSize = gridOptions.presets.pagination.pageSize;\r\n      paginationOptions.pageNumber = gridOptions.presets.pagination.pageNumber;\r\n    }\r\n    return paginationOptions;\r\n  }\r\n\r\n  /**\r\n   * Dynamically change or update the column definitions list.\r\n   * We will re-render the grid so that the new header and data shows up correctly.\r\n   * If using i18n, we also need to trigger a re-translate of the column headers\r\n   */\r\n  updateColumnDefinitionsList(newColumnDefinitions) {\r\n    // map/swap the internal library Editor to the SlickGrid Editor factory\r\n    newColumnDefinitions = this.swapInternalEditorToSlickGridFactoryEditor(newColumnDefinitions);\r\n\r\n    if (this.gridOptions.enableTranslate) {\r\n      this.extensionService.translateColumnHeaders(false, newColumnDefinitions);\r\n    } else {\r\n      this.extensionService.renderColumnHeaders(newColumnDefinitions, true);\r\n    }\r\n\r\n    if (this.gridOptions && this.gridOptions.enableAutoSizeColumns) {\r\n      this.grid.autosizeColumns();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the filter row displayed on first row, we can optionally pass false to hide it.\r\n   * @param showing\r\n   */\r\n  showHeaderRow(showing = true) {\r\n    this.grid.setHeaderRowVisibility(showing, false);\r\n    if (showing === true && this._isGridInitialized) {\r\n      this.grid.setColumns(this.columnDefinitions);\r\n    }\r\n    return showing;\r\n  }\r\n\r\n  //\r\n  // private functions\r\n  // ------------------\r\n\r\n  private displayEmptyDataWarning(showWarning = true) {\r\n    this.slickEmptyWarning.grid = this.grid;\r\n    this.slickEmptyWarning && this.slickEmptyWarning.showEmptyDataMessage(showWarning);\r\n  }\r\n\r\n  private bindDifferentHooks(grid: any, gridOptions: GridOption, dataView: any) {\r\n    // on locale change, we have to manually translate the Headers, GridMenu\r\n    if (this.translate && this.translate.onLangChange) {\r\n      // translate some of them on first load, then on each language change\r\n      if (gridOptions.enableTranslate) {\r\n        this.translateColumnHeaderTitleKeys();\r\n        this.translateColumnGroupKeys();\r\n        this.translateCustomFooterTexts();\r\n      }\r\n\r\n      this.subscriptions.push(\r\n        this.translate.onLangChange.subscribe(() => {\r\n          if (gridOptions.enableTranslate) {\r\n            this.extensionService.translateCellMenu();\r\n            this.extensionService.translateColumnHeaders();\r\n            this.extensionService.translateColumnPicker();\r\n            this.extensionService.translateContextMenu();\r\n            this.extensionService.translateGridMenu();\r\n            this.extensionService.translateHeaderMenu();\r\n            this.translateCustomFooterTexts();\r\n            this.translateColumnHeaderTitleKeys();\r\n            this.translateColumnGroupKeys();\r\n            if (gridOptions.createPreHeaderPanel && !gridOptions.enableDraggableGrouping) {\r\n              this.groupingAndColspanService.translateGroupingAndColSpan();\r\n            }\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    if (!this.customDataView) {\r\n      // bind external sorting (backend) when available or default onSort (dataView)\r\n      if (gridOptions.enableSorting) {\r\n        // bind external sorting (backend) unless specified to use the local one\r\n        if (gridOptions.backendServiceApi && !gridOptions.backendServiceApi.useLocalSorting) {\r\n          this.sortService.bindBackendOnSort(grid);\r\n        } else {\r\n          this.sortService.bindLocalOnSort(grid);\r\n        }\r\n      }\r\n\r\n      // bind external filter (backend) when available or default onFilter (dataView)\r\n      if (gridOptions.enableFiltering) {\r\n        this.filterService.init(grid);\r\n\r\n        // bind external filter (backend) unless specified to use the local one\r\n        if (gridOptions.backendServiceApi && !gridOptions.backendServiceApi.useLocalFiltering) {\r\n          this.filterService.bindBackendOnFilter(grid);\r\n        } else {\r\n          this.filterService.bindLocalOnFilter(grid);\r\n        }\r\n      }\r\n\r\n      // load any presets if any (after dataset is initialized)\r\n      this.loadPresetsWhenDatasetInitialized();\r\n    }\r\n\r\n\r\n    // if user set an onInit Backend, we'll run it right away (and if so, we also need to run preProcess, internalPostProcess & postProcess)\r\n    if (gridOptions.backendServiceApi) {\r\n      const backendApi = gridOptions.backendServiceApi;\r\n\r\n      if (backendApi && backendApi.service && backendApi.service.init) {\r\n        backendApi.service.init(backendApi.options, gridOptions.pagination, this.grid);\r\n      }\r\n    }\r\n\r\n    // expose all Slick Grid Events through dispatch\r\n    for (const prop in grid) {\r\n      if (grid.hasOwnProperty(prop) && prop.startsWith('on')) {\r\n        this._eventHandler.subscribe(grid[prop], (event: Event, args: any) => {\r\n          return this.dispatchCustomEvent(`${slickgridEventPrefix}${titleCase(prop)}`, { eventData: event, args });\r\n        });\r\n      }\r\n    }\r\n\r\n    // expose all Slick DataView Events through dispatch\r\n    for (const prop in dataView) {\r\n      if (dataView.hasOwnProperty(prop) && prop.startsWith('on')) {\r\n        this._eventHandler.subscribe(dataView[prop], (event: Event, args: any) => {\r\n          return this.dispatchCustomEvent(`${slickgridEventPrefix}${titleCase(prop)}`, { eventData: event, args });\r\n        });\r\n      }\r\n    }\r\n\r\n    // expose GridState Service changes event through dispatch\r\n    this.subscriptions.push(\r\n      this.gridStateService.onGridStateChanged.subscribe((gridStateChange: GridStateChange) => {\r\n        this.onGridStateChanged.emit(gridStateChange);\r\n      })\r\n    );\r\n\r\n\r\n    // on cell click, mainly used with the columnDef.action callback\r\n    this.gridEventService.bindOnCellChange(grid, dataView);\r\n    this.gridEventService.bindOnClick(grid, dataView);\r\n\r\n    if (dataView && grid) {\r\n      this._eventHandler.subscribe(dataView.onRowCountChanged, (e: Event, args: any) => {\r\n        grid.invalidate();\r\n\r\n        this.metrics = {\r\n          startTime: new Date(),\r\n          endTime: new Date(),\r\n          itemCount: args && args.current || 0,\r\n          totalItemCount: Array.isArray(this.dataset) ? this.dataset.length : 0\r\n        };\r\n\r\n        // when using local (in-memory) dataset, we'll display a warning message when filtered data is empty\r\n        if (this._isLocalGrid && this.gridOptions && this.gridOptions.enableEmptyDataWarningMessage) {\r\n          this.displayEmptyDataWarning(args.current === 0);\r\n        }\r\n      });\r\n\r\n      // when dealing with Tree Data View, make sure we have necessary tree data options\r\n      if (this.gridOptions && this.gridOptions.enableTreeData && (!this.gridOptions.treeDataOptions || !this.gridOptions.treeDataOptions.columnId)) {\r\n        throw new Error('[Angular-Slickgrid] When enabling tree data, you must also provide the \"treeDataOption\" property in your Grid Options with \"childrenPropName\" or \"parentPropName\" (depending if your array is hierarchical or flat) for the Tree Data to work properly');\r\n      }\r\n\r\n      this._eventHandler.subscribe(dataView.onRowsChanged, (e: any, args: any) => {\r\n        // when dealing with Tree Data, anytime the flat dataset changes, we need to update our hierarchical dataset\r\n        // this could be triggered by a DataView setItems or updateItem\r\n        if (this.gridOptions && this.gridOptions.enableTreeData) {\r\n          const items = this.dataView.getItems();\r\n          if (Array.isArray(items) && items.length > 0 && !this._isDatasetInitialized) {\r\n            this.sharedService.hierarchicalDataset = this.treeDataSortComparer(items);\r\n          }\r\n        }\r\n\r\n        // filtering data with local dataset will not always show correctly unless we call this updateRow/render\r\n        // also don't use \"invalidateRows\" since it destroys the entire row and as bad user experience when updating a row\r\n        // see commit: https://github.com/ghiscoding/Angular-Slickgrid/commit/bb62c0aa2314a5d61188ff005ccb564577f08805\r\n        if (gridOptions && gridOptions.enableFiltering && !gridOptions.enableRowDetailView) {\r\n          if (args && args.rows && Array.isArray(args.rows)) {\r\n            args.rows.forEach((row: any) => grid.updateRow(row));\r\n            grid.render();\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // does the user have a colspan callback?\r\n    if (gridOptions && gridOptions.colspanCallback && dataView && dataView.getItem && dataView.getItemMetadata) {\r\n      dataView.getItemMetadata = (rowNumber: number) => {\r\n        let callbackResult = null;\r\n        if (gridOptions.colspanCallback && gridOptions.colspanCallback) {\r\n          callbackResult = gridOptions.colspanCallback(dataView.getItem(rowNumber));\r\n        }\r\n        return callbackResult;\r\n      };\r\n    }\r\n  }\r\n\r\n  private bindBackendCallbackFunctions(gridOptions: GridOption) {\r\n    const backendApi = gridOptions.backendServiceApi;\r\n    const backendApiService = backendApi && backendApi.service;\r\n    const serviceOptions: BackendServiceOption = backendApiService && backendApiService.options || {};\r\n    const isExecuteCommandOnInit = (!serviceOptions) ? false : ((serviceOptions && serviceOptions.hasOwnProperty('executeProcessCommandOnInit')) ? serviceOptions['executeProcessCommandOnInit'] : true);\r\n\r\n    if (backendApiService) {\r\n      // update backend filters (if need be) BEFORE the query runs (via the onInit command a few lines below)\r\n      // if user entered some any \"presets\", we need to reflect them all in the grid\r\n      if (gridOptions && gridOptions.presets) {\r\n        // Filters \"presets\"\r\n        if (backendApiService.updateFilters && Array.isArray(gridOptions.presets.filters) && gridOptions.presets.filters.length > 0) {\r\n          backendApiService.updateFilters(gridOptions.presets.filters, true);\r\n        }\r\n        // Sorters \"presets\"\r\n        if (backendApiService.updateSorters && Array.isArray(gridOptions.presets.sorters) && gridOptions.presets.sorters.length > 0) {\r\n          backendApiService.updateSorters(undefined, gridOptions.presets.sorters);\r\n        }\r\n        // Pagination \"presets\"\r\n        if (backendApiService.updatePagination && gridOptions.presets.pagination) {\r\n          const { pageNumber, pageSize } = gridOptions.presets.pagination;\r\n          backendApiService.updatePagination(pageNumber, pageSize);\r\n        }\r\n      } else {\r\n        const columnFilters = this.filterService.getColumnFilters();\r\n        if (columnFilters && backendApiService.updateFilters) {\r\n          backendApiService.updateFilters(columnFilters, false);\r\n        }\r\n      }\r\n\r\n      // execute onInit command when necessary\r\n      if (backendApi && backendApiService && (backendApi.onInit || isExecuteCommandOnInit)) {\r\n        const query = (typeof backendApiService.buildQuery === 'function') ? backendApiService.buildQuery() : '';\r\n        const process = (isExecuteCommandOnInit) ? (backendApi.process && backendApi.process(query) || null) : (backendApi.onInit && backendApi.onInit(query) || null);\r\n\r\n        // wrap this inside a setTimeout to avoid timing issue since the gridOptions needs to be ready before running this onInit\r\n        setTimeout(() => {\r\n          // keep start time & end timestamps then return these metrics after the process execution\r\n          const startTime = new Date();\r\n\r\n          // run any pre-process, if defined, for example a spinner\r\n          if (backendApi.preProcess) {\r\n            backendApi.preProcess();\r\n          }\r\n\r\n          // the processes can be Promises or Observables (like Angular HttpClient)\r\n          const totalItems = this.gridOptions && this.gridOptions.pagination && this.gridOptions.pagination.totalItems;\r\n          if (process instanceof Promise && process.then) {\r\n            process.then((processResult: GraphqlResult | GraphqlPaginatedResult | any) => executeBackendProcessesCallback(startTime, processResult, backendApi, totalItems))\r\n              .catch((error: any) => onBackendError(error, backendApi));\r\n          } else if (isObservable(process)) {\r\n            this.subscriptions.push(\r\n              process.subscribe(\r\n                (processResult: GraphqlResult | GraphqlPaginatedResult | any) => executeBackendProcessesCallback(startTime, processResult, backendApi, totalItems),\r\n                (error: any) => onBackendError(error, backendApi)\r\n              )\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private bindResizeHook(grid: any, options: GridOption) {\r\n    // expand/autofit columns on first page load\r\n    if (grid && options.autoFitColumnsOnFirstLoad && options.enableAutoSizeColumns) {\r\n      grid.autosizeColumns();\r\n    }\r\n\r\n    // auto-resize grid on browser resize\r\n    if (this._fixedHeight || this._fixedWidth) {\r\n      this.resizer.init(grid, { height: this._fixedHeight, width: this._fixedWidth });\r\n    } else {\r\n      this.resizer.init(grid);\r\n    }\r\n    if (options.enableAutoResize) {\r\n      this.resizer.bindAutoResizeDataGrid();\r\n      if (grid && options.autoFitColumnsOnFirstLoad && options.enableAutoSizeColumns) {\r\n        grid.autosizeColumns();\r\n      }\r\n    }\r\n  }\r\n\r\n  private executeAfterDataviewCreated(grid: any, gridOptions: GridOption, dataView: any) {\r\n    // if user entered some Sort \"presets\", we need to reflect them all in the DOM\r\n    if (gridOptions.enableSorting) {\r\n      if (gridOptions.presets && Array.isArray(gridOptions.presets.sorters) && gridOptions.presets.sorters.length > 0) {\r\n        this.sortService.loadGridSorters(gridOptions.presets.sorters);\r\n      }\r\n    }\r\n  }\r\n\r\n  private initializePaginationService(paginationOptions: Pagination) {\r\n    if (this.gridOptions) {\r\n      this.paginationData = {\r\n        gridOptions: this.gridOptions,\r\n      };\r\n      this.paginationService.totalItems = this.totalItems;\r\n      this.paginationService.init(this.grid, this.dataView, paginationOptions, this.backendServiceApi);\r\n      this.subscriptions.push(\r\n        this.paginationService.onPaginationChanged.subscribe((changes: ServicePagination) => this.paginationChanged(changes)),\r\n        this.paginationService.onPaginationVisibilityChanged.subscribe((visibility: { visible: boolean }) => {\r\n          this.showPagination = visibility && visibility.visible || false;\r\n          if (this.gridOptions && this.gridOptions.backendServiceApi) {\r\n            refreshBackendDataset();\r\n          }\r\n        })\r\n      );\r\n      this._isPaginationInitialized = true;\r\n    }\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  private initialization() {\r\n    // when detecting a frozen grid, we'll automatically enable the mousewheel scroll handler so that we can scroll from both left/right frozen containers\r\n    if (this.gridOptions && ((this.gridOptions.frozenRow !== undefined && this.gridOptions.frozenRow >= 0) || this.gridOptions.frozenColumn !== undefined && this.gridOptions.frozenColumn >= 0) && this.gridOptions.enableMouseWheelScrollHandler === undefined) {\r\n      this.gridOptions.enableMouseWheelScrollHandler = true;\r\n    }\r\n\r\n    // make sure the dataset is initialized (if not it will throw an error that it cannot getLength of null)\r\n    this._dataset = this._dataset || [];\r\n    this.gridOptions = this.mergeGridOptions(this.gridOptions);\r\n    this._paginationOptions = this.gridOptions.pagination;\r\n    this.locales = this.gridOptions && this.gridOptions.locales || Constants.locales;\r\n    this.backendServiceApi = this.gridOptions && this.gridOptions.backendServiceApi;\r\n    this.createBackendApiInternalPostProcessCallback(this.gridOptions);\r\n    this._isLocalGrid = !this.backendServiceApi; // considered a local grid if it doesn't have a backend service set\r\n\r\n    if (!this.customDataView) {\r\n      const dataviewInlineFilters = this.gridOptions.dataView && this.gridOptions.dataView.inlineFilters || false;\r\n      let dataViewOptions: DataViewOption = { inlineFilters: dataviewInlineFilters };\r\n\r\n      if (this.gridOptions.draggableGrouping || this.gridOptions.enableGrouping) {\r\n        this.extensionUtility.loadExtensionDynamically(ExtensionName.groupItemMetaProvider);\r\n        this.groupItemMetadataProvider = new Slick.Data.GroupItemMetadataProvider();\r\n        this.sharedService.groupItemMetadataProvider = this.groupItemMetadataProvider;\r\n        dataViewOptions = { ...dataViewOptions, groupItemMetadataProvider: this.groupItemMetadataProvider };\r\n      }\r\n      this.dataView = new Slick.Data.DataView(dataViewOptions);\r\n    }\r\n\r\n    // for convenience to the user, we provide the property \"editor\" as an Angular-Slickgrid editor complex object\r\n    // however \"editor\" is used internally by SlickGrid for it's own Editor Factory\r\n    // so in our lib we will swap \"editor\" and copy it into a new property called \"internalColumnEditor\"\r\n    // then take back \"editor.model\" and make it the new \"editor\" so that SlickGrid Editor Factory still works\r\n    this._columnDefinitions = this.swapInternalEditorToSlickGridFactoryEditor(this._columnDefinitions);\r\n\r\n    // save reference for all columns before they optionally become hidden/visible\r\n    this.sharedService.allColumns = this._columnDefinitions;\r\n    this.sharedService.visibleColumns = this._columnDefinitions;\r\n    this.extensionService.createExtensionsBeforeGridCreation(this._columnDefinitions, this.gridOptions);\r\n\r\n    // build SlickGrid Grid, also user might optionally pass a custom dataview (e.g. remote model)\r\n    this.grid = new Slick.Grid(`#${this.gridId}`, this.customDataView || this.dataView, this._columnDefinitions, this.gridOptions);\r\n\r\n    this.sharedService.dataView = this.dataView;\r\n    this.sharedService.grid = this.grid;\r\n\r\n    this.extensionService.bindDifferentExtensions();\r\n    this.bindDifferentHooks(this.grid, this.gridOptions, this.dataView);\r\n\r\n    // emit the Grid & DataView object to make them available in parent component\r\n    this.onGridCreated.emit(this.grid);\r\n\r\n    // when it's a frozen grid, we need to keep the frozen column id for reference if we ever show/hide column from ColumnPicker/GridMenu afterward\r\n    const frozenColumnIndex = this.gridOptions.frozenColumn !== undefined ? this.gridOptions.frozenColumn : -1;\r\n    if (frozenColumnIndex >= 0 && frozenColumnIndex <= this._columnDefinitions.length) {\r\n      this.sharedService.frozenVisibleColumnId = this._columnDefinitions[frozenColumnIndex].id || '';\r\n    }\r\n\r\n    // initialize the SlickGrid grid\r\n    this.grid.init();\r\n\r\n    if (!this.customDataView && (this.dataView && this.dataView.beginUpdate && this.dataView.setItems && this.dataView.endUpdate)) {\r\n      this.onDataviewCreated.emit(this.dataView);\r\n      this.dataView.beginUpdate();\r\n      this.dataView.setItems(this._dataset || [], this.gridOptions.datasetIdPropertyName);\r\n      this.dataView.endUpdate();\r\n\r\n      // if you don't want the items that are not visible (due to being filtered out or being on a different page)\r\n      // to stay selected, pass 'false' to the second arg\r\n      const selectionModel = this.grid && this.grid.getSelectionModel();\r\n      if (selectionModel && this.gridOptions && this.gridOptions.dataView && this.gridOptions.dataView.hasOwnProperty('syncGridSelection')) {\r\n        // if we are using a Backend Service, we will do an extra flag check, the reason is because it might have some unintended behaviors\r\n        // with the BackendServiceApi because technically the data in the page changes the DataView on every page change.\r\n        let preservedRowSelectionWithBackend = false;\r\n        if (this.gridOptions.backendServiceApi && this.gridOptions.dataView.hasOwnProperty('syncGridSelectionWithBackendService')) {\r\n          preservedRowSelectionWithBackend = this.gridOptions.dataView.syncGridSelectionWithBackendService;\r\n        }\r\n\r\n        const syncGridSelection = this.gridOptions.dataView.syncGridSelection;\r\n        if (typeof syncGridSelection === 'boolean') {\r\n          let preservedRowSelection = syncGridSelection;\r\n          if (!this._isLocalGrid) {\r\n            // when using BackendServiceApi, we'll be using the \"syncGridSelectionWithBackendService\" flag BUT \"syncGridSelection\" must also be set to True\r\n            preservedRowSelection = syncGridSelection && preservedRowSelectionWithBackend;\r\n          }\r\n          this.dataView.syncGridSelection(this.grid, preservedRowSelection);\r\n        } else if (typeof syncGridSelection === 'object') {\r\n          this.dataView.syncGridSelection(this.grid, syncGridSelection.preserveHidden, syncGridSelection.preserveHiddenOnSelectionChange);\r\n        }\r\n      }\r\n\r\n      const datasetLn = this.dataView.getLength() || this._dataset && this._dataset.length || 0;\r\n      if (datasetLn > 0) {\r\n        if (!this._isDatasetInitialized && (this.gridOptions.enableCheckboxSelector || this.gridOptions.enableRowSelection)) {\r\n          this.loadRowSelectionPresetWhenExists();\r\n        }\r\n        this.loadPresetsWhenDatasetInitialized();\r\n        this._isDatasetInitialized = true;\r\n      }\r\n    }\r\n\r\n    // user might want to hide the header row on page load but still have `enableFiltering: true`\r\n    // if that is the case, we need to hide the headerRow ONLY AFTER all filters got created & dataView exist\r\n    if (this._hideHeaderRowAfterPageLoad) {\r\n      this.showHeaderRow(false);\r\n      this.sharedService.hideHeaderRowAfterPageLoad = this._hideHeaderRowAfterPageLoad;\r\n    }\r\n\r\n    // after the DataView is created & updated execute some processes\r\n    this.executeAfterDataviewCreated(this.grid, this.gridOptions, this.dataView);\r\n\r\n    // bind resize ONLY after the dataView is ready\r\n    this.bindResizeHook(this.grid, this.gridOptions);\r\n\r\n    // bind & initialize grouping and header grouping colspan service\r\n    if (this.gridOptions.createPreHeaderPanel && !this.gridOptions.enableDraggableGrouping) {\r\n      this.groupingAndColspanService.init(this.grid, this.dataView);\r\n    }\r\n\r\n    // bind & initialize the grid service\r\n    this.gridService.init(this.grid, this.dataView);\r\n\r\n    // when user enables translation, we need to translate Headers on first pass & subsequently in the bindDifferentHooks\r\n    if (this.gridOptions.enableTranslate) {\r\n      this.extensionService.translateColumnHeaders();\r\n    }\r\n\r\n    // if Export is enabled, initialize the service with the necessary grid and other objects\r\n    if (this.gridOptions.enableExport) {\r\n      this.exportService.init(this.grid, this.dataView);\r\n    }\r\n\r\n    // if Excel Export is enabled, initialize the service with the necessary grid and other objects\r\n    if (this.gridOptions.enableExcelExport && this.sharedService) {\r\n      this.excelExportService.init(this.grid, this.dataView);\r\n    }\r\n\r\n    // when using Tree Data View\r\n    if (this.gridOptions.enableTreeData) {\r\n      this.treeDataService.init(this.grid);\r\n    }\r\n\r\n    // once all hooks are in placed and the grid is initialized, we can emit an event\r\n    this.onGridInitialized.emit(this.grid);\r\n\r\n    // bind the Backend Service API callback functions only after the grid is initialized\r\n    // because the preProcess() and onInit() might get triggered\r\n    if (this.gridOptions && this.gridOptions.backendServiceApi) {\r\n      this.bindBackendCallbackFunctions(this.gridOptions);\r\n    }\r\n\r\n    this.gridStateService.init(this.grid, this.dataView);\r\n\r\n    // local grid, check if we need to show the Pagination\r\n    // if so then also check if there's any presets and finally initialize the PaginationService\r\n    // a local grid with Pagination presets will potentially have a different total of items, we'll need to get it from the DataView and update our total\r\n    if (this.gridOptions && this.gridOptions.enablePagination && this._isLocalGrid) {\r\n      this.showPagination = true;\r\n      this.loadLocalGridPagination();\r\n    }\r\n\r\n    this._angularGridInstances = {\r\n      // Slick Grid & DataView objects\r\n      dataView: this.dataView,\r\n      slickGrid: this.grid,\r\n      extensions: this.extensionService && this.extensionService.extensionList,\r\n\r\n      // public methods\r\n      destroy: this.destroy.bind(this),\r\n\r\n      // return all available Services (non-singleton)\r\n      backendService: this.gridOptions && this.gridOptions.backendServiceApi && this.gridOptions.backendServiceApi.service,\r\n      excelExportService: this.excelExportService,\r\n      exportService: this.exportService,\r\n      extensionService: this.extensionService,\r\n      filterService: this.filterService,\r\n      gridEventService: this.gridEventService,\r\n      gridStateService: this.gridStateService,\r\n      gridService: this.gridService,\r\n      groupingService: this.groupingAndColspanService,\r\n      paginationService: this.paginationService,\r\n      resizerService: this.resizer,\r\n      sortService: this.sortService,\r\n      treeDataService: this.treeDataService,\r\n\r\n      /** @deprecated please use \"extensionService\" instead */\r\n      pluginService: this.extensionService,\r\n    }\r\n\r\n    // all instances (SlickGrid, DataView & all Services)\r\n    this.onAngularGridCreated.emit(this._angularGridInstances);\r\n\r\n    // user could show a custom footer with the data metrics (dataset length and last updated timestamp)\r\n    this.optionallyShowCustomFooterWithMetrics();\r\n  }\r\n\r\n  /** Load the Editor Collection asynchronously and replace the \"collection\" property when Observable resolves */\r\n  private loadEditorCollectionAsync(column: Column) {\r\n    const collectionAsync = column && column.editor && (column.editor as ColumnEditor).collectionAsync;\r\n    if (collectionAsync instanceof Observable) {\r\n      this.subscriptions.push(\r\n        collectionAsync.subscribe((resolvedCollection) => this.updateEditorCollection(column, resolvedCollection))\r\n      );\r\n    }\r\n  }\r\n\r\n  private loadPresetsWhenDatasetInitialized() {\r\n    if (this.gridOptions && !this.customDataView) {\r\n      // if user entered some Filter \"presets\", we need to reflect them all in the DOM\r\n      if (this.gridOptions.presets && Array.isArray(this.gridOptions.presets.filters) && this.gridOptions.presets.filters.length > 0) {\r\n        this.filterService.populateColumnFilterSearchTermPresets(this.gridOptions.presets.filters);\r\n      }\r\n\r\n      // if user entered some Columns \"presets\", we need to reflect them all in the grid\r\n      if (this.gridOptions.presets && Array.isArray(this.gridOptions.presets.columns) && this.gridOptions.presets.columns.length > 0) {\r\n        const gridColumns: Column[] = this.gridStateService.getAssociatedGridColumns(this.grid, this.gridOptions.presets.columns);\r\n        if (gridColumns && Array.isArray(gridColumns) && gridColumns.length > 0) {\r\n          // make sure that the checkbox selector is also visible if it is enabled\r\n          if (this.gridOptions.enableCheckboxSelector) {\r\n            const checkboxColumn = (Array.isArray(this._columnDefinitions) && this._columnDefinitions.length > 0) ? this._columnDefinitions[0] : null;\r\n            if (checkboxColumn && checkboxColumn.id === '_checkbox_selector' && gridColumns[0].id !== '_checkbox_selector') {\r\n              gridColumns.unshift(checkboxColumn);\r\n            }\r\n          }\r\n\r\n          // finally set the new presets columns (including checkbox selector if need be)\r\n          this.grid.setColumns(gridColumns);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * local grid, check if we need to show the Pagination\r\n   * if so then also check if there's any presets and finally initialize the PaginationService\r\n   * a local grid with Pagination presets will potentially have a different total of items, we'll need to get it from the DataView and update our total\r\n   */\r\n  private loadLocalGridPagination() {\r\n    if (this.gridOptions) {\r\n      this.totalItems = Array.isArray(this.dataset) ? this.dataset.length : 0;\r\n      if (this._paginationOptions && this.dataView && this.dataView.getPagingInfo) {\r\n        const slickPagingInfo = this.dataView.getPagingInfo() || {};\r\n        if (slickPagingInfo.hasOwnProperty('totalRows') && this._paginationOptions.totalItems !== slickPagingInfo.totalRows) {\r\n          this.totalItems = slickPagingInfo.totalRows;\r\n        }\r\n      }\r\n      this._paginationOptions.totalItems = this.totalItems;\r\n      const paginationOptions = this.setPaginationOptionsWhenPresetDefined(this.gridOptions, this._paginationOptions);\r\n      this.initializePaginationService(paginationOptions);\r\n    }\r\n  }\r\n\r\n  /** Load any Row Selections into the DataView that were presets by the user */\r\n  private loadRowSelectionPresetWhenExists() {\r\n    // if user entered some Row Selections \"presets\"\r\n    const presets = this.gridOptions && this.gridOptions.presets;\r\n    const selectionModel = this.grid && this.grid.getSelectionModel();\r\n    const enableRowSelection = this.gridOptions && (this.gridOptions.enableCheckboxSelector || this.gridOptions.enableRowSelection);\r\n    if (enableRowSelection && selectionModel && presets && presets.rowSelection && (Array.isArray(presets.rowSelection.gridRowIndexes) || Array.isArray(presets.rowSelection.dataContextIds))) {\r\n      let dataContextIds = presets.rowSelection.dataContextIds;\r\n      let gridRowIndexes = presets.rowSelection.gridRowIndexes;\r\n\r\n      // maps the IDs to the Grid Rows and vice versa, the \"dataContextIds\" has precedence over the other\r\n      if (Array.isArray(dataContextIds) && dataContextIds.length > 0) {\r\n        gridRowIndexes = this.dataView.mapIdsToRows(dataContextIds) || [];\r\n      } else if (Array.isArray(gridRowIndexes) && gridRowIndexes.length > 0) {\r\n        dataContextIds = this.dataView.mapRowsToIds(gridRowIndexes) || [];\r\n      }\r\n      this.gridStateService.selectedRowDataContextIds = dataContextIds;\r\n\r\n      // change the selected rows except UNLESS it's a Local Grid with Pagination\r\n      // local Pagination uses the DataView and that also trigger a change/refresh\r\n      // and we don't want to trigger 2 Grid State changes just 1\r\n      if ((this._isLocalGrid && !this.gridOptions.enablePagination) || !this._isLocalGrid) {\r\n        setTimeout(() => this.grid.setSelectedRows(gridRowIndexes));\r\n      }\r\n    }\r\n  }\r\n\r\n  private mergeGridOptions(gridOptions): GridOption {\r\n    gridOptions.gridId = this.gridId;\r\n    gridOptions.gridContainerId = `slickGridContainer-${this.gridId}`;\r\n\r\n    // if we have a backendServiceApi and the enablePagination is undefined, we'll assume that we do want to see it, else get that defined value\r\n    // @deprecated TODO remove this check in the future, user should explicitely enable the Pagination since this feature is now optional (you can now call OData/GraphQL without Pagination which is a new feature)\r\n    gridOptions.enablePagination = ((gridOptions.backendServiceApi && gridOptions.enablePagination === undefined) ? true : gridOptions.enablePagination) || false;\r\n\r\n    // use jquery extend to deep merge & copy to avoid immutable properties being changed in GlobalGridOptions after a route change\r\n    const options = $.extend(true, {}, GlobalGridOptions, this.forRootConfig, gridOptions) as GridOption;\r\n\r\n    // using jQuery extend to do a deep clone has an unwanted side on objects and pageSizes but ES6 spread has other worst side effects\r\n    // so we will just overwrite the pageSizes when needed, this is the only one causing issues so far.\r\n    // jQuery wrote this on their docs:: On a deep extend, Object and Array are extended, but object wrappers on primitive types such as String, Boolean, and Number are not.\r\n    if (options && options.pagination && (gridOptions.enablePagination || gridOptions.backendServiceApi) && gridOptions.pagination && Array.isArray(gridOptions.pagination.pageSizes)) {\r\n      options.pagination.pageSizes = gridOptions.pagination.pageSizes;\r\n    }\r\n\r\n    // also make sure to show the header row if user have enabled filtering\r\n    this._hideHeaderRowAfterPageLoad = (options.showHeaderRow === false);\r\n    if (options.enableFiltering && !options.showHeaderRow) {\r\n      options.showHeaderRow = options.enableFiltering;\r\n    }\r\n\r\n    // when we use Pagination on Local Grid, it doesn't seem to work without enableFiltering\r\n    // so we'll enable the filtering but we'll keep the header row hidden\r\n    if (!options.enableFiltering && options.enablePagination && this._isLocalGrid) {\r\n      options.enableFiltering = true;\r\n      options.showHeaderRow = false;\r\n      this._hideHeaderRowAfterPageLoad = true;\r\n      this.sharedService.hideHeaderRowAfterPageLoad = true;\r\n    }\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * We could optionally display a custom footer below the grid to show some metrics (last update, item count with/without filters)\r\n   * It's an opt-in, user has to enable \"showCustomFooter\" and it cannot be used when there's already a Pagination since they display the same kind of info\r\n   */\r\n  private optionallyShowCustomFooterWithMetrics() {\r\n    if (this.gridOptions) {\r\n      if (this.gridOptions.enableTranslate) {\r\n        this.translateCustomFooterTexts();\r\n      } else if (this.gridOptions.customFooterOptions) {\r\n        const customFooterOptions = this.gridOptions.customFooterOptions;\r\n        customFooterOptions.metricTexts = customFooterOptions.metricTexts || {};\r\n        customFooterOptions.metricTexts.lastUpdate = customFooterOptions.metricTexts.lastUpdate || this.locales && this.locales.TEXT_LAST_UPDATE || 'TEXT_LAST_UPDATE';\r\n        customFooterOptions.metricTexts.items = customFooterOptions.metricTexts.items || this.locales && this.locales.TEXT_ITEMS || 'TEXT_ITEMS';\r\n        customFooterOptions.metricTexts.of = customFooterOptions.metricTexts.of || this.locales && this.locales.TEXT_OF || 'TEXT_OF';\r\n      }\r\n\r\n      // we will display the custom footer only when there's no Pagination\r\n      if (!this.gridOptions.enablePagination && !this._isPaginationInitialized) {\r\n        this.showCustomFooter = this.gridOptions.hasOwnProperty('showCustomFooter') ? this.gridOptions.showCustomFooter : false;\r\n        this.customFooterOptions = this.gridOptions.customFooterOptions || {};\r\n      }\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n\r\n  private treeDataSortComparer(flatDataset: any[]): any[] {\r\n    const dataViewIdIdentifier = this.gridOptions && this.gridOptions.datasetIdPropertyName || 'id';\r\n    const treeDataOpt: TreeDataOption = this.gridOptions && this.gridOptions.treeDataOptions || { columnId: '' };\r\n    const treeDataOptions = { ...treeDataOpt, identifierPropName: treeDataOpt.identifierPropName || dataViewIdIdentifier };\r\n    return convertParentChildArrayToHierarchicalView(flatDataset, treeDataOptions);\r\n  }\r\n\r\n  /**\r\n   * For convenience to the user, we provide the property \"editor\" as an Angular-Slickgrid editor complex object\r\n   * however \"editor\" is used internally by SlickGrid for it's own Editor Factory\r\n   * so in our lib we will swap \"editor\" and copy it into a new property called \"internalColumnEditor\"\r\n   * then take back \"editor.model\" and make it the new \"editor\" so that SlickGrid Editor Factory still works\r\n   */\r\n  private swapInternalEditorToSlickGridFactoryEditor(columnDefinitions: Column[]) {\r\n    return columnDefinitions.map((column: Column | any) => {\r\n      // on every Editor that have a \"collectionAsync\", resolve the data and assign it to the \"collection\" property\r\n      if (column && column.editor && column.editor.collectionAsync) {\r\n        this.loadEditorCollectionAsync(column);\r\n      }\r\n      return { ...column, editor: column.editor && column.editor.model, internalColumnEditor: { ...column.editor } };\r\n    });\r\n  }\r\n\r\n  /** Translate all Custom Footer Texts (footer with metrics) */\r\n  private translateCustomFooterTexts() {\r\n    if (this.translate && this.translate.instant && this.translate.currentLang) {\r\n      const customFooterOptions = this.gridOptions && this.gridOptions.customFooterOptions || {};\r\n      customFooterOptions.metricTexts = customFooterOptions.metricTexts || {};\r\n      for (const propName of Object.keys(customFooterOptions.metricTexts)) {\r\n        if (propName.lastIndexOf('Key') > 0) {\r\n          const propNameWithoutKey = propName.substring(0, propName.lastIndexOf('Key'));\r\n          customFooterOptions.metricTexts[propNameWithoutKey] = this.translate.instant(customFooterOptions.metricTexts[propName] || ' ');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private translateColumnHeaderTitleKeys() {\r\n    // translate all columns (including hidden columns)\r\n    // eventually deprecate the \"headerKey\" and use only the \"nameKey\"\r\n    this.extensionUtility.translateItems(this.sharedService.allColumns, 'headerKey', 'name');\r\n    this.extensionUtility.translateItems(this.sharedService.allColumns, 'nameKey', 'name');\r\n  }\r\n\r\n  private translateColumnGroupKeys() {\r\n    // translate all column groups (including hidden columns)\r\n    this.extensionUtility.translateItems(this.sharedService.allColumns, 'columnGroupKey', 'columnGroup');\r\n  }\r\n\r\n  /**\r\n   * Update the Editor \"collection\" property from an async call resolved\r\n   * Since this is called after the async call resolves, the pointer will not be the same as the \"column\" argument passed.\r\n   * Once we found the new pointer, we will reassign the \"editor\" and \"collection\" to the \"internalColumnEditor\" so it has newest collection\r\n   */\r\n  private updateEditorCollection<T = any>(column: Column<T>, newCollection: T[]) {\r\n    (column.editor as ColumnEditor).collection = newCollection;\r\n\r\n    // find the new column reference pointer\r\n    const columns = this.grid.getColumns();\r\n    if (Array.isArray(columns)) {\r\n      const columnRef: Column = columns.find((col: Column) => col.id === column.id);\r\n      columnRef.internalColumnEditor = column.editor as ColumnEditor;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AngularUtilService } from '../services/angularUtil.service';\nimport { AngularSlickgridComponent } from './../components/angular-slickgrid.component';\nimport { CollectionService } from './../services/collection.service';\nimport { FilterFactory } from '../filters/filterFactory';\nimport { GraphqlService } from './../services/graphql.service';\nimport { GridOdataService } from './../services/grid-odata.service';\nimport { GridOption } from './../models/gridOption.interface';\nimport { SlickPaginationComponent } from './../components/slick-pagination.component';\nimport { BsDropDownService } from '../services/bsDropdown.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule\n  ],\n  declarations: [\n    AngularSlickgridComponent,\n    SlickPaginationComponent\n  ],\n  exports: [\n    AngularSlickgridComponent,\n    SlickPaginationComponent\n  ],\n  entryComponents: [AngularSlickgridComponent]\n})\nexport class AngularSlickgridModule {\n  static forRoot(config: GridOption = {}) {\n    return {\n      ngModule: AngularSlickgridModule,\n      providers: [\n        { provide: 'config', useValue: config },\n        AngularUtilService,\n        BsDropDownService,\n        CollectionService,\n        FilterFactory,\n        GraphqlService,\n        GridOdataService,\n      ]\n    };\n  }\n}\n"]}