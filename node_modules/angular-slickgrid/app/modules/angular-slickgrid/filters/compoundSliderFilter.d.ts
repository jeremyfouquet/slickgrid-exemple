import { TranslateService } from '@ngx-translate/core';
import { Column, ColumnFilter, Filter, FilterArguments, FilterCallback, Locale, OperatorString, OperatorType, SearchTerm } from './../models/index';
export declare class CompoundSliderFilter implements Filter {
    protected translate: TranslateService;
    private _clearFilterTriggered;
    private _currentValue;
    private _shouldTriggerQuery;
    private _elementRangeInputId;
    private _elementRangeOutputId;
    private _operator;
    private $containerInputGroupElm;
    private $filterElm;
    private $filterInputElm;
    private $selectOperatorElm;
    grid: any;
    searchTerms: SearchTerm[];
    columnDef: Column;
    callback: FilterCallback;
    constructor(translate: TranslateService);
    /** Getter for the Filter Operator */
    readonly columnFilter: ColumnFilter;
    /** Getter to know what would be the default operator when none is specified */
    readonly defaultOperator: OperatorType | OperatorString;
    /** Getter for the Filter Generic Params */
    private readonly filterParams;
    /** Getter for the `filter` properties */
    private readonly filterProperties;
    /** Getter for the Grid Options pulled through the Grid Object */
    private readonly gridOptions;
    /** Getter for the single Locale texts provided by the user in main file or else use default English locales via the Constants */
    readonly locales: Locale;
    /** Getter for the Filter Operator */
    /** Setter for the Filter Operator */
    operator: OperatorType | OperatorString;
    /**
     * Initialize the Filter
     */
    init(args: FilterArguments): void;
    /**
     * Clear the filter value
     */
    clear(shouldTriggerQuery?: boolean): void;
    /**
     * destroy the filter
     */
    destroy(): void;
    /**
     * Get selected value retrieved from the slider element
     * @params selected items
     */
    getValues(): number;
    /** Set value(s) on the DOM element */
    setValues(values: SearchTerm | SearchTerm[], operator?: OperatorType | OperatorString): void;
    /** Build HTML Template for the input range (slider) */
    private buildTemplateHtmlString;
    /** Build HTML Template for the text (number) that is shown appended to the slider */
    private buildTemplateSliderTextHtmlString;
    /** Get the available operator option values */
    private getOptionValues;
    /** Get Locale, Translated or a Default Text if first two aren't detected */
    private getOutputText;
    /**
     * Create the DOM element
     */
    private createDomElement;
    private onTriggerEvent;
}
