import { Column, Extension, GridOption, SlickEventHandler } from '../models/index';
import { ExtensionUtility } from './extensionUtility';
import { SharedService } from '../services/shared.service';
import * as ɵngcc0 from '@angular/core';
export declare class RowMoveManagerExtension implements Extension {
    private extensionUtility;
    private sharedService;
    private _addon;
    private _eventHandler;
    private _rowSelectionPlugin;
    constructor(extensionUtility: ExtensionUtility, sharedService: SharedService);
    readonly eventHandler: SlickEventHandler;
    dispose(): void;
    /**
     * Create the plugin before the Grid creation to avoid having odd behaviors.
     * Mostly because the column definitions might change after the grid creation, so we want to make sure to add it before then
     */
    create(columnDefinitions: Column[], gridOptions: GridOption): any;
    loadAddonWhenNotExists(columnDefinitions: Column[], gridOptions: GridOption): any;
    /** Get the instance of the SlickGrid addon (control or plugin). */
    getAddonInstance(): any;
    register(rowSelectionPlugin?: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<RowMoveManagerExtension, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<RowMoveManagerExtension>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93TW92ZU1hbmFnZXJFeHRlbnNpb24uZC50cyIsInNvdXJjZXMiOlsicm93TW92ZU1hbmFnZXJFeHRlbnNpb24uZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbHVtbiwgRXh0ZW5zaW9uLCBHcmlkT3B0aW9uLCBTbGlja0V2ZW50SGFuZGxlciB9IGZyb20gJy4uL21vZGVscy9pbmRleCc7XHJcbmltcG9ydCB7IEV4dGVuc2lvblV0aWxpdHkgfSBmcm9tICcuL2V4dGVuc2lvblV0aWxpdHknO1xyXG5pbXBvcnQgeyBTaGFyZWRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvc2hhcmVkLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBSb3dNb3ZlTWFuYWdlckV4dGVuc2lvbiBpbXBsZW1lbnRzIEV4dGVuc2lvbiB7XHJcbiAgICBwcml2YXRlIGV4dGVuc2lvblV0aWxpdHk7XHJcbiAgICBwcml2YXRlIHNoYXJlZFNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9hZGRvbjtcclxuICAgIHByaXZhdGUgX2V2ZW50SGFuZGxlcjtcclxuICAgIHByaXZhdGUgX3Jvd1NlbGVjdGlvblBsdWdpbjtcclxuICAgIGNvbnN0cnVjdG9yKGV4dGVuc2lvblV0aWxpdHk6IEV4dGVuc2lvblV0aWxpdHksIHNoYXJlZFNlcnZpY2U6IFNoYXJlZFNlcnZpY2UpO1xyXG4gICAgcmVhZG9ubHkgZXZlbnRIYW5kbGVyOiBTbGlja0V2ZW50SGFuZGxlcjtcclxuICAgIGRpc3Bvc2UoKTogdm9pZDtcclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlIHRoZSBwbHVnaW4gYmVmb3JlIHRoZSBHcmlkIGNyZWF0aW9uIHRvIGF2b2lkIGhhdmluZyBvZGQgYmVoYXZpb3JzLlxyXG4gICAgICogTW9zdGx5IGJlY2F1c2UgdGhlIGNvbHVtbiBkZWZpbml0aW9ucyBtaWdodCBjaGFuZ2UgYWZ0ZXIgdGhlIGdyaWQgY3JlYXRpb24sIHNvIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRvIGFkZCBpdCBiZWZvcmUgdGhlblxyXG4gICAgICovXHJcbiAgICBjcmVhdGUoY29sdW1uRGVmaW5pdGlvbnM6IENvbHVtbltdLCBncmlkT3B0aW9uczogR3JpZE9wdGlvbik6IGFueTtcclxuICAgIGxvYWRBZGRvbldoZW5Ob3RFeGlzdHMoY29sdW1uRGVmaW5pdGlvbnM6IENvbHVtbltdLCBncmlkT3B0aW9uczogR3JpZE9wdGlvbik6IGFueTtcclxuICAgIC8qKiBHZXQgdGhlIGluc3RhbmNlIG9mIHRoZSBTbGlja0dyaWQgYWRkb24gKGNvbnRyb2wgb3IgcGx1Z2luKS4gKi9cclxuICAgIGdldEFkZG9uSW5zdGFuY2UoKTogYW55O1xyXG4gICAgcmVnaXN0ZXIocm93U2VsZWN0aW9uUGx1Z2luPzogYW55KTogYW55O1xyXG59XHJcbiJdfQ==