import { Column, Extension, GridOption } from '../models/index';
import { ExtensionUtility } from './extensionUtility';
import { SharedService } from '../services/shared.service';
import * as ɵngcc0 from '@angular/core';
export declare class CheckboxSelectorExtension implements Extension {
    private extensionUtility;
    private sharedService;
    private _addon;
    private _rowSelectionPlugin;
    constructor(extensionUtility: ExtensionUtility, sharedService: SharedService);
    dispose(): void;
    /**
     * Create the plugin before the Grid creation, else it will behave oddly.
     * Mostly because the column definitions might change after the grid creation
     */
    create(columnDefinitions: Column[], gridOptions: GridOption): any;
    /** Get the instance of the SlickGrid addon (control or plugin). */
    getAddonInstance(): any;
    register(rowSelectionPlugin?: any): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CheckboxSelectorExtension, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<CheckboxSelectorExtension>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3hTZWxlY3RvckV4dGVuc2lvbi5kLnRzIiwic291cmNlcyI6WyJjaGVja2JveFNlbGVjdG9yRXh0ZW5zaW9uLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2x1bW4sIEV4dGVuc2lvbiwgR3JpZE9wdGlvbiB9IGZyb20gJy4uL21vZGVscy9pbmRleCc7XHJcbmltcG9ydCB7IEV4dGVuc2lvblV0aWxpdHkgfSBmcm9tICcuL2V4dGVuc2lvblV0aWxpdHknO1xyXG5pbXBvcnQgeyBTaGFyZWRTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvc2hhcmVkLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGVja2JveFNlbGVjdG9yRXh0ZW5zaW9uIGltcGxlbWVudHMgRXh0ZW5zaW9uIHtcclxuICAgIHByaXZhdGUgZXh0ZW5zaW9uVXRpbGl0eTtcclxuICAgIHByaXZhdGUgc2hhcmVkU2VydmljZTtcclxuICAgIHByaXZhdGUgX2FkZG9uO1xyXG4gICAgcHJpdmF0ZSBfcm93U2VsZWN0aW9uUGx1Z2luO1xyXG4gICAgY29uc3RydWN0b3IoZXh0ZW5zaW9uVXRpbGl0eTogRXh0ZW5zaW9uVXRpbGl0eSwgc2hhcmVkU2VydmljZTogU2hhcmVkU2VydmljZSk7XHJcbiAgICBkaXNwb3NlKCk6IHZvaWQ7XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZSB0aGUgcGx1Z2luIGJlZm9yZSB0aGUgR3JpZCBjcmVhdGlvbiwgZWxzZSBpdCB3aWxsIGJlaGF2ZSBvZGRseS5cclxuICAgICAqIE1vc3RseSBiZWNhdXNlIHRoZSBjb2x1bW4gZGVmaW5pdGlvbnMgbWlnaHQgY2hhbmdlIGFmdGVyIHRoZSBncmlkIGNyZWF0aW9uXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZShjb2x1bW5EZWZpbml0aW9uczogQ29sdW1uW10sIGdyaWRPcHRpb25zOiBHcmlkT3B0aW9uKTogYW55O1xyXG4gICAgLyoqIEdldCB0aGUgaW5zdGFuY2Ugb2YgdGhlIFNsaWNrR3JpZCBhZGRvbiAoY29udHJvbCBvciBwbHVnaW4pLiAqL1xyXG4gICAgZ2V0QWRkb25JbnN0YW5jZSgpOiBhbnk7XHJcbiAgICByZWdpc3Rlcihyb3dTZWxlY3Rpb25QbHVnaW4/OiBhbnkpOiBhbnk7XHJcbn1cclxuIl19