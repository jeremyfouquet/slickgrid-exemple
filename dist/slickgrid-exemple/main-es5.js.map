{"version":3,"sources":["webpack:///node_modules/flatpickr/dist/l10n sync ^\\.\\/.*\\.js$","webpack:///node_modules/moment-mini/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts.AppComponent.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/models/PdctHldSubst.ts","webpack:///src/app/models/break.ts","webpack:///src/app/models/chartImagesModel.ts","webpack:///src/app/models/couvertureStockModel.ts","webpack:///src/app/models/data.ts","webpack:///src/app/models/dataBreak.ts","webpack:///src/app/models/dataEntry.ts","webpack:///src/app/models/dataEntryTrackingModel.ts","webpack:///src/app/models/dataHldDashboardAModel.ts","webpack:///src/app/models/dataPartOfMarketModel.ts","webpack:///src/app/models/datesBySessionModel.ts","webpack:///src/app/models/dropGroup.ts","webpack:///src/app/models/etatDuMarcheModel.ts","webpack:///src/app/models/firstStep.ts","webpack:///src/app/models/granularite.ts","webpack:///src/app/models/gridCellData.class.ts","webpack:///src/app/models/gridCellToCreate.class.ts","webpack:///src/app/models/gridCellToSave.class.ts","webpack:///src/app/models/gridCellToValidate.class.ts","webpack:///src/app/models/gridDataRow.class.ts","webpack:///src/app/models/gridDataType.enum.ts","webpack:///src/app/models/gridIconsRef.class.ts","webpack:///src/app/models/group.ts","webpack:///src/app/models/indc.ts","webpack:///src/app/models/indcTypes.enum.ts","webpack:///src/app/models/index.ts","webpack:///src/app/models/indicatif.ts","webpack:///src/app/models/labo.ts","webpack:///src/app/models/lstIndc.ts","webpack:///src/app/models/lstSubst.ts","webpack:///src/app/models/mail.ts","webpack:///src/app/models/previsionnelGersModel.ts","webpack:///src/app/models/previsionnelMedicamModel.ts","webpack:///src/app/models/secondStep.ts","webpack:///src/app/models/simulateurGersModel.ts","webpack:///src/app/models/simulateurMedicamModel.ts","webpack:///src/app/models/subst.ts","webpack:///src/app/models/thirdStep.ts","webpack:///src/app/models/user.ts","webpack:///src/app/services/dataEntry/dataEntry.service.ts","webpack:///src/app/services/dataEntry/index.ts","webpack:///src/app/services/gridData/gridData.service.ts","webpack:///src/app/services/gridData/index.ts","webpack:///src/app/services/home/home.service.ts","webpack:///src/app/services/home/index.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/language/index.ts","webpack:///src/app/services/language/language.service.ts","webpack:///src/app/services/loader.service.ts","webpack:///src/app/shared/dropdown/dropdown.component.html","webpack:///src/app/shared/dropdown/dropdown.component.ts","webpack:///src/app/shared/highlightTitle/highlightTitle.component.html","webpack:///src/app/shared/highlightTitle/highlightTitle.component.ts","webpack:///src/app/shared/iconText/iconText.component.html","webpack:///src/app/shared/iconText/iconText.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/utils/order.service.ts","webpack:///src/app/view/dataEntry/dataEntry.component.html","webpack:///src/app/view/dataEntry/dataEntry.component.ts","webpack:///src/app/view/dataEntry/dataEntryForm/dataEntryForm.component.html","webpack:///src/app/view/dataEntry/dataEntryForm/dataEntryForm.component.ts","webpack:///src/app/view/dataEntry/dataEntryForm/dataEntryFormInput/dataEntryFormInput.component.ts","webpack:///src/app/view/dataEntry/dataEntryForm/dataEntryGrid/dataEntryGrid.component.html","webpack:///src/app/view/dataEntry/dataEntryForm/dataEntryGrid/dataEntryGrid.component.ts","webpack:///src/app/view/home/home.component.html","webpack:///src/app/view/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/i18n sync ^\\.\\/.*\\.json$","webpack:///src/main.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","AppComponent","languageService","init","_copyright","copyright","Date","getUTCFullYear","appearance","AppModule","PdctHldSubst","Break","ChartImagesModel","CouvertureStockModel","DataCouvertureStock","Data","DataBreak","DataEntry","DataEntryTrackingModel","Info","DataHldDashboardAModel","DataHld","Sales","DataPartOfMarketModel","DatesBySessionModel","DropGroup","EtatDuMarcheModel","DataEtatDuMarche","DataByDate","Params","FirstStep","Granularite","GridCellData","_","dataRow","cd_cip13","cd_stat_entry","dt_grnlr","id_break","id_hld","id_indc","ts_lst_upd","ts_crt","val_indc","cd_indc","cd_indc_typ","NUMBER","val","parseInt","isNaN","GridCellToCreate","id_usr_crt","idUser","id_usr_vld","ts_vld","GridCellToSave","GridCellToValidate","GridDataRow","dataType","nm_medic","ll_prest","_rowOrigin","_dataType","data","forEach","d","currVal","origVal","typeVal","TEXT","toString","canValidate","fl_indc_mdty","_hasValueChanged","reduce","count","filter","bind","GridDataType","GridIconsRef","_baseIconPath","RECURRENT","STARTING","Group","Groupes","Indc","IndcTypes","Indicatif","Labo","LstIndc","LstSubst","Mail","PrevisionnelGersModel","PrevisionnelGersStock","PrevisionnelMedicamModel","PrevisionnelMedicamStock","SecondStep","SimulateurGersModel","SimulateurGersStock","SimulateurMedicamModel","SimulateurMedicamStock","Subst","ThirdStep","User","DataEntryService","_isAdmin","params","set","Set","newId","Array","from","values","prdct","element","replaceAll","_results","_nextDtGrnlr","dt","_dateEnd","de","_dateStart","ds","_dataBreak","change","GridDataService","_dataEntry","saveSuccess","error","validated","saved","_data","type","newData","x","length","_dataOrigin","row","archives","errorStock","dataToValidate","_getDataToValidate","prevData","archivedDataByDate","find","nextDtGrnlr","originData","date","valuesPrevStock","valuesStockOrigin","valuesSupplyOrigin","valuesSendedOrigin","recurrentData","valuesStock","concat","valuesSupply","valuesSended","dataPrevStock","valuePrevStock","Number","datavaluesSupply","valueSupply","dataStock","valueStock","stockTotal","stockMin","Math","abs","stockMax","errorSended","dataToSave","_getDataToSave","obs","updateDataEntry","pipe","subscribe","_updateValues","emit","_saveSuccess","_onError","dataToCreate","_getDataToCreate","_setNextDate","toCreate","_createDataEntry","created","controlDataEntry","resp","acc","setTimeout","rowOrig","indc","entry","nextDate","newDataEntries","push","createDataEntry","err","hasEmptyValues","c","nbEmptyValue","_canValidate","HomeService","sessionSucces","LanguageService","translate","_languages","addLangs","i","setTranslation","setDefaultLang","use","language","indexOf","console","LoaderService","showSpinner","DropdownComponent","loader","presentData","dataDeleted","keyUpEvent","checkEvent","searchIsEmpty","typeOfData","field","s","search","searchElement","nativeElement","focus","isSubmitted","dropdownToggleLabel","text","stopPropagation","item","checked","target","value","dropdownToggleLabels","nm_subst","cip","HighlightTitleComponent","highlight","title","replace","IconTextComponent","baseDir","srcActive","srcInactive","NavbarComponent","_router","_dataEntryService","active","currentUserValue","changeIsAdmin","isAdmin","log","navigate","OrderUtils","reverse","getOrder","setOrder","_orderName","name","DataEntryComponent","_datePipe","currentUser","idHld","labo","getDataEntry","callbacks","archived","_getArchivedData","toValidated","_getToValidatedData","archivedData","_getAllDates","_checkedVueForAdmin","lastToValidatedData","newDataBreak","y","allGrnlr","datesGrnlr","grnlr","sort","a","b","getTime","transform","archiveByBreakId","dataBreak","startDate","start_periode","endDate","end_periode","next_dt_grnlr","cd_indc_faml","includes","startingData","_calculeMinOrMaxGrnlr","dataEntry","newDatesBySession","dates","grnlrByIdBreak","dateToValidate","allDatesGrnlrBySession","DisplayStyle","DataEntryFormComponent","gridData","dataEntryService","_formBuilder","emitIsValidateOrSave","isLabo","isValidator","errorData","gridDataType","displayStyle","displayFlag","GRID","nullValueToSave","archiveIdx","warningStockBiggest","warningStockError","_subsriptions","_subscriptionsSave","nbChecked","dataEntryForm","group","session","required","dataToUpdate","array","sub","_afterValidate","subSave","_afterSave","add","_initSelectSessionAfterReloadData","unsubscribe","checkPendingModif","FORM","hasPendingModif","readOnly","presentationData","dialogDisplayViewChange","toggleDisplayFlag","presentation","nbDataExpected","nbDataResponseFind","formControls","presentationHasError","selectSession","updated","updt","toUpperCase","listDataFound","nm_break","canSave","saveFuncs","onClickSubmitSave","save","closeDisplayDialog","_resetData","_fetchProducts","_initd","_setDateStart","_registerNullValueToUpdate","_handleErrorDataToActiveOrErrorClass","form","dataCreate","dataForm","dataUpdate","get","controls","removeAt","_checkedIfInputFieldUsePresentationOrUpdateData","prevDataForIndcToVerifiesExiste","valuesExistAndDataNotValidated","afterChecked","undefined","el","valueSended","dataToUpdateWithNullValue","_saveDataEntries","nbCheked","_updateDataEntry","_applyData","label","dateStart","dateEnd","setValue","_getUniqueCdCip13List","_sortData","elem","nb_ord","cipA","cipB","nA","toLowerCase","nB","lA","lB","results","dataToRegister","dataAlreadyRegister","splice","response","validateSuccess","controlError","dataSaved","archive","valOrigin","getModifData","modif","valid","submitSaveIsActive","nbModif","_findModifs","DataEntryFormInputComponent","valueChanged","_validateNumberPattern","_init","emitFuncs","_emitNumber","_emitText","dataEntryType","formGroupOptions","displayValue","_separateThousands","pattern","thousandSeparatorPattern","split","formattedValue","isValid","invalid","toLocaleLowerCase","lowerType","GridError","DataEntryGridComponent","_transalte","containerId","gridIcons","gridErrors","_rowHeight","_collapsable","_nbFrozenCol","_initGridData","_initColumnDefinitions","_initGridOptions","dataContext","DataToDtGrnlr","prevNumber","angularGrid","grid","dataView","fastSort","window","onresize","resizerService","resizeGrid","slickGrid","onActiveCellChanged","args","getActiveCell","getSelectedRows","getSelectionModel","getSelectedRanges","getEditorLock","commitCurrentEdit","column","editor","model","onCellClick","cell","cellActive","setActiveCell","number","onCellChange","_trimValue","validator","_validateCellValue","columnDefinitions","_buildColDef","_fixWidth","_makeCollapsable","_protectFrozenColCells","_addColDef","col","width","minWidth","maxWidth","resizable","_makeNonEditable","setData","gridOptions","rowHeight","frozenColumn","alwaysShowVerticalScroll","enableAutoResize","autoResize","enableSorting","enableGridMenu","enableColumnReorder","enableColumnPicker","enableHeaderMenu","enableHeaderButton","enableCellNavigation","_editableGridOptions","enableExcelCopyBuffer","excelCopyBufferOptions","newRowCreator","editable","autoCommitEdit","newCol","sl_indc","formatter","_formatter","instant","_setColumnType","_makeEditable","_addHelp","colDef","sortable","slickTypes","string","_addButtonToColumnHeader","cssClass","command","tooltip","ll_indc","columnId","itemVisibilityOverride","action","_expandCollapseColumn","_rollbackCellChange","cannotTriggerInsert","test","_setError","INVALID_NUMBER_VALUE","button","header","buttons","collapse","_collapseColumn","expand","_expandColumn","_refreshColumnDefinitions","headerCssClass","dataRowOrig","getData","columnDef","gridService","renderGrid","newValue","notExpected","_controlIndcExpected","valueToReturn","_controlSendedMoreThanStock","_controlErreurStock","existe","bodyHeight","headerPadding","scrollbarSize","headerHeight","HomeComponent","home","router","menuLinks","url","lbl","_currentUser","_checkRoles","link","dropdown","newMenuLinks","environment","production","toTimeString"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"./ar.js\": \"./node_modules/flatpickr/dist/l10n/ar.js\",\n\t\"./at.js\": \"./node_modules/flatpickr/dist/l10n/at.js\",\n\t\"./az.js\": \"./node_modules/flatpickr/dist/l10n/az.js\",\n\t\"./be.js\": \"./node_modules/flatpickr/dist/l10n/be.js\",\n\t\"./bg.js\": \"./node_modules/flatpickr/dist/l10n/bg.js\",\n\t\"./bn.js\": \"./node_modules/flatpickr/dist/l10n/bn.js\",\n\t\"./bs.js\": \"./node_modules/flatpickr/dist/l10n/bs.js\",\n\t\"./cat.js\": \"./node_modules/flatpickr/dist/l10n/cat.js\",\n\t\"./cs.js\": \"./node_modules/flatpickr/dist/l10n/cs.js\",\n\t\"./cy.js\": \"./node_modules/flatpickr/dist/l10n/cy.js\",\n\t\"./da.js\": \"./node_modules/flatpickr/dist/l10n/da.js\",\n\t\"./de.js\": \"./node_modules/flatpickr/dist/l10n/de.js\",\n\t\"./default.js\": \"./node_modules/flatpickr/dist/l10n/default.js\",\n\t\"./eo.js\": \"./node_modules/flatpickr/dist/l10n/eo.js\",\n\t\"./es.js\": \"./node_modules/flatpickr/dist/l10n/es.js\",\n\t\"./et.js\": \"./node_modules/flatpickr/dist/l10n/et.js\",\n\t\"./fa.js\": \"./node_modules/flatpickr/dist/l10n/fa.js\",\n\t\"./fi.js\": \"./node_modules/flatpickr/dist/l10n/fi.js\",\n\t\"./fo.js\": \"./node_modules/flatpickr/dist/l10n/fo.js\",\n\t\"./fr.js\": \"./node_modules/flatpickr/dist/l10n/fr.js\",\n\t\"./ga.js\": \"./node_modules/flatpickr/dist/l10n/ga.js\",\n\t\"./gr.js\": \"./node_modules/flatpickr/dist/l10n/gr.js\",\n\t\"./he.js\": \"./node_modules/flatpickr/dist/l10n/he.js\",\n\t\"./hi.js\": \"./node_modules/flatpickr/dist/l10n/hi.js\",\n\t\"./hr.js\": \"./node_modules/flatpickr/dist/l10n/hr.js\",\n\t\"./hu.js\": \"./node_modules/flatpickr/dist/l10n/hu.js\",\n\t\"./id.js\": \"./node_modules/flatpickr/dist/l10n/id.js\",\n\t\"./index.js\": \"./node_modules/flatpickr/dist/l10n/index.js\",\n\t\"./is.js\": \"./node_modules/flatpickr/dist/l10n/is.js\",\n\t\"./it.js\": \"./node_modules/flatpickr/dist/l10n/it.js\",\n\t\"./ja.js\": \"./node_modules/flatpickr/dist/l10n/ja.js\",\n\t\"./ka.js\": \"./node_modules/flatpickr/dist/l10n/ka.js\",\n\t\"./km.js\": \"./node_modules/flatpickr/dist/l10n/km.js\",\n\t\"./ko.js\": \"./node_modules/flatpickr/dist/l10n/ko.js\",\n\t\"./kz.js\": \"./node_modules/flatpickr/dist/l10n/kz.js\",\n\t\"./lt.js\": \"./node_modules/flatpickr/dist/l10n/lt.js\",\n\t\"./lv.js\": \"./node_modules/flatpickr/dist/l10n/lv.js\",\n\t\"./mk.js\": \"./node_modules/flatpickr/dist/l10n/mk.js\",\n\t\"./mn.js\": \"./node_modules/flatpickr/dist/l10n/mn.js\",\n\t\"./ms.js\": \"./node_modules/flatpickr/dist/l10n/ms.js\",\n\t\"./my.js\": \"./node_modules/flatpickr/dist/l10n/my.js\",\n\t\"./nl.js\": \"./node_modules/flatpickr/dist/l10n/nl.js\",\n\t\"./no.js\": \"./node_modules/flatpickr/dist/l10n/no.js\",\n\t\"./pa.js\": \"./node_modules/flatpickr/dist/l10n/pa.js\",\n\t\"./pl.js\": \"./node_modules/flatpickr/dist/l10n/pl.js\",\n\t\"./pt.js\": \"./node_modules/flatpickr/dist/l10n/pt.js\",\n\t\"./ro.js\": \"./node_modules/flatpickr/dist/l10n/ro.js\",\n\t\"./ru.js\": \"./node_modules/flatpickr/dist/l10n/ru.js\",\n\t\"./si.js\": \"./node_modules/flatpickr/dist/l10n/si.js\",\n\t\"./sk.js\": \"./node_modules/flatpickr/dist/l10n/sk.js\",\n\t\"./sl.js\": \"./node_modules/flatpickr/dist/l10n/sl.js\",\n\t\"./sq.js\": \"./node_modules/flatpickr/dist/l10n/sq.js\",\n\t\"./sr-cyr.js\": \"./node_modules/flatpickr/dist/l10n/sr-cyr.js\",\n\t\"./sr.js\": \"./node_modules/flatpickr/dist/l10n/sr.js\",\n\t\"./sv.js\": \"./node_modules/flatpickr/dist/l10n/sv.js\",\n\t\"./th.js\": \"./node_modules/flatpickr/dist/l10n/th.js\",\n\t\"./tr.js\": \"./node_modules/flatpickr/dist/l10n/tr.js\",\n\t\"./uk.js\": \"./node_modules/flatpickr/dist/l10n/uk.js\",\n\t\"./uz.js\": \"./node_modules/flatpickr/dist/l10n/uz.js\",\n\t\"./uz_latn.js\": \"./node_modules/flatpickr/dist/l10n/uz_latn.js\",\n\t\"./vn.js\": \"./node_modules/flatpickr/dist/l10n/vn.js\",\n\t\"./zh-tw.js\": \"./node_modules/flatpickr/dist/l10n/zh-tw.js\",\n\t\"./zh.js\": \"./node_modules/flatpickr/dist/l10n/zh.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/flatpickr/dist/l10n sync recursive ^\\\\.\\\\/.*\\\\.js$\";","var map = {\n\t\"./locale\": \"./node_modules/moment-mini/locale/locale.js\",\n\t\"./locale.js\": \"./node_modules/moment-mini/locale/locale.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment-mini/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\n    <router-outlet></router-outlet>\n    <div class=\"copyright\">{{copyright}}</div>\n    ","import { Component } from '@angular/core';\n\nimport { LanguageService } from './services/language/language.service';\nimport { version } from '../../package.json';\n\n@Component({\n    selector: 'app-leem',\n    template: `\n    <router-outlet></router-outlet>\n    <div class=\"copyright\">{{copyright}}</div>\n    `\n})\n\nexport class AppComponent {\n    public copyright;\n    constructor(\n        private languageService: LanguageService\n    ) {\n        this.languageService.init();\n        this._copyright();\n    }\n\n    private _copyright() {\n        this.copyright = `${new Date().getUTCFullYear()} | version ${version} | Tous droits réservés`;\n\n    }\n}\n","import { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { OrderModule } from 'ngx-order-pipe';\nimport { DatePipe } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { AngularSlickgridModule } from 'angular-slickgrid';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nregisterLocaleData(localeFr);\nimport {\n    OrderUtils\n} from './utils';\nimport {\n    LanguageService,\n    DataEntryService,\n    LoaderService,\n    GridDataService,\n    HomeService\n} from './services';\nimport {\n    ViewComponent,\n    HomeComponent,\n    DataEntryComponent,\n    DataEntryFormComponent,\n    DataEntryFormInputComponent,\n    DataEntryGridComponent\n} from './view';\nimport {\n    HighlightTitleComponent,\n    IconTextComponent,\n    DropdownComponent,\n    NavbarComponent\n} from './shared';\n\n@NgModule({\n    imports: [\n        AngularSlickgridModule.forRoot(),\n        BrowserModule,\n        RoutingModule,\n        HttpClientModule,\n        TranslateModule.forRoot(),\n        ReactiveFormsModule,\n        FormsModule,\n        BrowserAnimationsModule,\n        DragDropModule,\n        MatProgressSpinnerModule,\n        OrderModule,\n        MatDialogModule,\n        MatInputModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        NgSelectModule\n    ],\n    declarations: [\n        /**\n         * VIEWS\n         */\n        AppComponent,\n        ViewComponent,\n        HomeComponent,\n        DataEntryComponent,\n        DataEntryFormComponent,\n        DataEntryFormInputComponent,\n        DataEntryGridComponent,\n        /**\n         * SHARED\n         */\n        HighlightTitleComponent,\n        IconTextComponent,\n        DropdownComponent,\n        NavbarComponent,\n    ],\n    providers: [\n        /**\n         * SHARED\n         */\n        LanguageService,\n        DataEntryService,\n        LoaderService,\n        DatePipe,\n        GridDataService,\n        HomeService,\n        /**\n         * UTILS\n         */\n        OrderUtils,\n        {\n            provide: MAT_DATE_LOCALE,\n            useValue: 'fr-FR'\n        },\n        {\n            provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n            useValue: {\n                appearance: 'fill'\n            }\n        },\n        {\n            provide: LOCALE_ID,\n            useValue: 'fr-FR'\n        }\n    ],\n    bootstrap: [\n        AppComponent\n    ]\n})\n\nexport class AppModule { }\n","import { Data } from '.';\n\nexport class PdctHldSubst {\n    cd_cis?: number;\n    cd_cip7?: number;\n    cd_cip13: number;\n    nm_medic?: string;\n    id_hld?: number;\n    nm_hld?: string;\n    cd_subst?: number;\n    cd_hld_typ?: string;\n    nm_subst?: string;\n    ll_prest?: string;\n    data?: Data;\n    error?: boolean;\n    class?: string;\n    form?: string;\n    dose?: string;\n    unit?: string;\n    coef?: number;\n    commercialise?: boolean;\n    listGrp?: Array<any>;\n}\n","export class Break {\n    id_break?: number;\n    nb_vers?: number;\n    cd_grnlr: string;\n    jlst_indc: any;\n    jlst_subst: any;\n    fl_break_actvt: number;\n    ds_break?: string;\n    de_break?: Date;\n    ts_crt?: string;\n    nm_break?: string;\n    visibility?: boolean;\n}\n","export class ChartImagesModel {\n    name: string;\n    url: string;\n}\n","export class CouvertureStockModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: DataCouvertureStock;\n    consoDataMissing: boolean;\n    lastDt: string;\n}\n\nexport class DataCouvertureStock {\n    date_stock: Array<string>;\n    valeur: Array<number>;\n    conso_moyenne_hebdo_medicam: Array<number>;\n    conso_moyenne_hebdo_gers: Array<number>;\n    ecart_stock_besoins_medicam: Array<number>;\n}\n\n\n","import { DataEntry } from '.';\n\nexport class Data {\n    date?: string;\n    startDate?: string;\n    endDate?: string;\n    nextDtGrnlr?: string;\n    recurrentData: Array<DataEntry>;\n    startingData: Array<DataEntry>;\n}\n","import { Data, Break } from '.';\n\nexport class DataBreak {\n    break: Break;\n    data?: Data;\n    archivedDataByDate?: Array<Data>;\n    idHld?: Array<number>;\n}\n","import { Indc, Break } from '.';\n\nexport class DataEntry {\n    id_break?: Break;\n    id_session?: number;\n    id_hld: number;\n    cd_cip13: number;\n    id_indc?: Indc;\n    id_indic?: number;\n    cd_stat_entry?: string;\n    id_usr_crt?: number;\n    id_usr_vld?: number;\n    ts_crt?: Date;\n    ts_lst_upd?: Date;\n    val_indc?: number;\n    ts_vld?: string;\n    dt_grnlr?: string;\n    fl_indc_mdty?: number;\n    start_periode?: string;\n    end_periode?: string;\n    next_dt_grnlr?: string;\n}\n","export class DataEntryTrackingModel {\n    idsession: number;\n    idlabo: number;\n    namelabo: string;\n    navindex: number;\n    info: Array<Info>;\n    selectedCurrentDate?: Date;\n    selectedLastDate?: Date;\n}\n\nclass Info {\n    dtgrnlr: string;\n    periodecourante: Date;\n    lastupdate: Date;\n    totalindc: number;\n    savedindc: number;\n    validatedindc: number;\n    archivedindc: number;\n    rejectedindc: number;\n    failedindc: number;\n}\n\n\n","export class DataHldDashboardAModel {\n    dates: string[];\n    dataHld: DataHld[];\n}\n\nexport class DataHld {\n    name: string;\n    cip7: number;\n    cip13: number;\n    cis: number;\n    subst: string;\n    lib: string;\n    presentation: string;\n    form: string;\n    dose: string;\n    unit: string;\n    valgers: number;\n    valmedicam: number;\n    sales: Sales[];\n    salesAverage: Sales[];\n    namecolumn: string;\n    stock: string;\n    dtstockstart: string;\n    dtstockend: string;\n}\n\nexport class Sales {\n    name: string;\n    sale: number;\n}\n","export class DataPartOfMarketModel {\n    id_session: number;\n    id_labo: number;\n    lb_grp: string;\n    id_mth: number;\n    dt_mth: Date;\n    value_hld: number;\n    value_total: number;\n    part_of_market: number;\n}\n\n\n","export class DatesBySessionModel {\n    id_break: number;\n    dates: Array<string>;\n}\n","import { PdctHldSubst } from '.';\n\nexport class DropGroup {\n    name: string;\n    presentation: Array<PdctHldSubst>;\n}\n","export class EtatDuMarcheModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: Array<DataEtatDuMarche>;\n    consoDataMissing: boolean;\n}\n\nexport class DataEtatDuMarche {\n    name: string;\n    courbe: string;\n    color: string;\n    dataByDate: Array<DataByDate>;\n}\n\nexport class DataByDate {\n    iddate: string;\n    date: string;\n    etat_marche: number;\n}\n\nexport class Params {\n    id_break: number;\n    id_hld: Array<number>;\n    cd_cip13: Array<number>;\n    lb_grp: string;\n    dt_grnlr: string;\n    cd_grnlr: string;\n    total: boolean;\n    allHld: Array<number>;\n    indc: Array<number>;\n}\n\n\n","import { Subst, PdctHldSubst } from '.';\n\nexport class FirstStep {\n    name?: string;\n    subst?: Array<Subst>;\n    SelectPdct?: Array<PdctHldSubst>;\n}\n","\nexport class Granularite {\n    value?: string;\n    text?: string;\n}\n","import { GridDataRow } from './gridDataRow.class';\nimport { DataEntry } from './dataEntry';\nimport { IndcTypes } from './indcTypes.enum';\n\nexport class GridCellData {\n    public cd_cip13: number;\n    public cd_stat_entry: string;\n    public dt_grnlr: string;\n    public id_break: number;\n    public id_hld: number;\n    public id_indc: number;\n    public id_usr_crt: number;\n    public id_usr_vld: number;\n    public ts_crt: Date;\n    public ts_lst_upd: Date;\n    public ts_vld: Date | string;\n    public val_indc: number | string;\n    public cd_indc_typ: string;\n\n    constructor(_: DataEntry, dataRow: GridDataRow) {\n        this.cd_cip13 = _.cd_cip13;\n        this.cd_stat_entry = _.cd_stat_entry;\n        this.dt_grnlr = _.dt_grnlr;\n        this.id_break = _.id_break.id_break;\n        this.id_hld = _.id_hld;\n        this.id_indc = _.id_indc.id_indc;\n        this.ts_lst_upd = new Date();\n        this.ts_crt = new Date(_.ts_crt);\n        this.val_indc = dataRow[_.id_indc.cd_indc];\n        this.cd_indc_typ = _.id_indc.cd_indc_typ;\n        if (_.id_indc.cd_indc_typ === IndcTypes.NUMBER) {\n            const val: number = parseInt(dataRow[_.id_indc.cd_indc], 10);\n            this.val_indc = isNaN(val) ? null : val;\n        }\n    }\n}\n","import { GridCellData } from './gridCellData.class';\nimport { DataEntry } from './dataEntry';\nimport { GridDataRow } from './gridDataRow.class';\n\nexport class GridCellToCreate extends GridCellData {\n\n    constructor(_: DataEntry, dataRow: GridDataRow) {\n        super(_, dataRow);\n        this.cd_stat_entry = 'toValidated';\n        this.id_usr_crt = dataRow.idUser;\n        this.id_usr_crt = -1;\n        this.id_usr_vld = -1;\n        this.ts_crt = new Date();\n        this.ts_lst_upd = new Date();\n        this.ts_vld = 'null';\n        this.val_indc = -1;\n    }\n}\n","import { GridCellData } from './gridCellData.class';\nimport { DataEntry } from './dataEntry';\nimport { GridDataRow } from './gridDataRow.class';\n\nexport class GridCellToSave extends GridCellData {\n\n    constructor(_: DataEntry, dataRow: GridDataRow) {\n        super(_, dataRow);\n        this.id_usr_crt = dataRow.idUser;\n        this.id_usr_vld = -1;\n    }\n}\n","import { GridCellData } from './gridCellData.class';\nimport { DataEntry } from './dataEntry';\nimport { GridDataRow } from './gridDataRow.class';\n\nexport class GridCellToValidate extends GridCellData {\n\n    constructor(_: DataEntry, dataRow: GridDataRow) {\n        super(_, dataRow);\n        this.id_usr_crt = (_.id_usr_crt === null ? dataRow.idUser : _.id_usr_crt);\n        this.id_usr_vld = dataRow.idUser;\n        this.cd_stat_entry = 'validated';\n        this.ts_vld = new Date();\n    }\n}\n","import { PdctHldSubst } from './PdctHldSubst';\nimport { GridDataType } from './gridDataType.enum';\nimport { DataEntry } from './dataEntry';\nimport { GridCellToSave } from './gridCellToSave.class';\nimport { GridCellToValidate } from './gridCellToValidate.class';\nimport { GridCellToCreate } from './gridCellToCreate.class';\nimport { IndcTypes } from './indcTypes.enum';\n\nexport class GridDataRow {\n    public id: number;\n    public cd_cip13: number;\n    public nm_medic: string;\n    public ll_prest: string;\n    public idUser: number;\n\n    private _dataType: GridDataType;\n    private _rowOrigin: PdctHldSubst;\n\n    constructor(_: PdctHldSubst, dataType: GridDataType, idUser: number) {\n        this.id = _.cd_cip13;\n        this.cd_cip13 = _.cd_cip13;\n        this.nm_medic = _.nm_medic;\n        this.ll_prest = _.ll_prest;\n        this._rowOrigin = _;\n        this._dataType = dataType;\n        this.idUser = idUser;\n        _.data[dataType].forEach(d => this[d.id_indc.cd_indc] = d.val_indc);\n    }\n\n    get canValidate(): boolean {\n        let canValidate = true;\n        this._rowOrigin.data[this._dataType].forEach(d => {\n            if (d.id_indc.fl_indc_mdty === 1\n            && (this._hasValueChanged(d) || d.cd_stat_entry !== 'toValidated')) {\n                canValidate = false;\n            }\n        });\n        return canValidate;\n    }\n\n    get nbEmptyValue(): number {\n        return this._rowOrigin.data[this._dataType].reduce((count, d) => {\n            const val: string | number = this[d.id_indc.cd_indc];\n            if (d.id_indc.fl_indc_mdty === 1 && (val === null || val === '')) {\n                count++;\n            }\n            return count;\n        }, 0);\n    }\n\n    get dataToSave(): Array<GridCellToSave> {\n        return this._rowOrigin.data[this._dataType]\n            .filter(this._hasValueChanged.bind(this))\n            .map(d => new GridCellToSave(d, this));\n    }\n\n    get dataToValidate(): Array<GridCellToValidate> {\n        return this._rowOrigin.data[this._dataType]\n            .map(d => new GridCellToValidate(d, this));\n    }\n\n    get dataToCreate(): Array<GridCellToCreate> {\n        return this._rowOrigin.data[this._dataType]\n            .map(d => new GridCellToCreate(d, this));\n    }\n\n    private _hasValueChanged(d: DataEntry): boolean {\n        const currVal: string|number = this[d.id_indc.cd_indc];\n        const origVal: string|number = d.val_indc;\n        const typeVal: string = d.id_indc.cd_indc_typ;\n        if (currVal === origVal) {\n            return false;\n        } else if (currVal === null || currVal === '') {\n            return origVal !== null;\n        } else if (origVal === null) {\n            return currVal !== null && currVal !== '';\n        } else if (typeVal === IndcTypes.TEXT) {\n            return currVal !== origVal;\n        } else if (typeVal === IndcTypes.NUMBER) {\n            return parseInt(currVal as string, 10) !== parseInt(origVal.toString(), 10)\n            && currVal !== origVal;\n        }\n    }\n}\n","export enum GridDataType {\n    RECURRENT = 'recurrentData',\n    STARTING = 'startingData'\n}\n","import { GridDataType } from './gridDataType.enum';\n\nexport class GridIconsRef {\n    public [GridDataType.RECURRENT]: string;\n    public [GridDataType.STARTING]: string;\n\n    private _baseIconPath: string = 'ansm_icons/';\n\n    constructor() {\n        this[GridDataType.RECURRENT] = `${this._baseIconPath}recurrent.svg`;\n        this[GridDataType.STARTING] = `${this._baseIconPath}starting.svg`;\n    }\n}\n","export class Group {\n    id?: number;\n    number?: string;\n    name: string;\n    subst?: number;\n    presentation?: Array<any>;\n}\n\nexport class Groupes {\n    grp_name: string;\n    code_prdt?: Array<number>;\n    code_pdct?: Array<number>;\n}\n","export class Indc {\n    id_indc: number;\n    cd_indc: string;\n    ll_indc?: string;\n    sl_indc?: string;\n    cd_indc_faml?: string;\n    cd_indc_typ?: string;\n    cd_indc_fonc?: string;\n    nb_ord?: number;\n    fl_indc_mdty?: number;\n    dt_start_indc?: Date;\n    dt_end_indc?: Date;\n    lb_date?: string;\n}\n","export enum IndcTypes {\n    NUMBER = 'NUM',\n    TEXT = 'TEXT'\n}\n","export * from './user';\nexport * from './group';\nexport * from './data';\nexport * from './lstSubst';\nexport * from './subst';\nexport * from './lstIndc';\nexport * from './indc';\nexport * from './labo';\nexport * from './break';\nexport * from './firstStep';\nexport * from './secondStep';\nexport * from './thirdStep';\nexport * from './PdctHldSubst';\nexport * from './dropGroup';\nexport * from './granularite';\nexport * from './dataEntry';\nexport * from './dataBreak';\nexport * from './indicatif';\nexport * from './mail';\nexport * from './chartImagesModel';\nexport * from './gridCallbackArgs.interface';\nexport * from './gridDataRow.class';\nexport * from './gridDataType.enum';\nexport * from './gridIconsRef.class';\nexport * from './gridCellData.class';\nexport * from './gridCellToSave.class';\nexport * from './gridCellToValidate.class';\nexport * from './datesBySessionModel';\nexport * from './indcTypes.enum';\nexport * from './etatDuMarcheModel';\nexport * from './couvertureStockModel';\nexport * from './simulateurMedicamModel';\nexport * from './simulateurGersModel';\nexport * from './previsionnelGersModel';\nexport * from './previsionnelMedicamModel';\nexport * from './dataEntryTrackingModel';\nexport * from './dataPartOfMarketModel';\nexport * from './dataHldDashboardAModel';\nexport * from './pdctUnitModel';\nexport * from './laboratoireModel';\nexport * from './pdctForMail';\n","export class Indicatif {\n    pays: string;\n    indc: string;\n}\n\n","export class Labo {\n    id_hld: number;\n    nm_hld: string;\n    dt_feed?: string;\n    dt_oper?: Date;\n    type?: string;\n}\n","import { Indc } from '.';\n\nexport class LstIndc {\n    startingData: Array<Indc>;\n    recurrentData: Array<Indc>;\n}\n","import {Groupes} from '.';\n\nexport class LstSubst {\n     code_subst: number;\n     groupes: Array<Groupes>;\n}\n","export class Mail {\n    email_address: string;\n    template_id: number;\n    name: string;\n    var_session: string;\n    var_username?: string;\n    var_labo: string;\n    var_produits?: Array<any>;\n    var_indicateurs?: Array<any>;\n    var_nom?: string;\n    var_prenom?: string;\n}\n\n","export class PrevisionnelGersModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: PrevisionnelGersStock;\n    consoDataMissing: boolean;\n    lastDt: string;\n}\n\nexport class PrevisionnelGersStock {\n    date_stock: Array<string>;\n    stk_gers_affich: Array<number>;\n    stk_affich: Array<number>;\n    ventes_gers: Array<number>;\n    stk_gers_color: string;\n}\n\n\n","export class PrevisionnelMedicamModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: PrevisionnelMedicamStock;\n    consoDataMissing: boolean;\n    lastDt: string;\n}\n\nexport class PrevisionnelMedicamStock {\n    date_stock: Array<string>;\n    stk_medicam_affich: Array<number>;\n    stk_affich: Array<number>;\n    ventes_medicam: Array<number>;\n    stk_medicam_color: string;\n}\n\n\n","import { PdctHldSubst, LstSubst } from '.';\n\nexport class SecondStep {\n    listPdct?: Array<PdctHldSubst>;\n    listGroupPdct?: Array<LstSubst>;\n}\n","export class SimulateurGersModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: SimulateurGersStock;\n    consoDataMissing: boolean;\n    lastDt: string;\n}\n\nexport class SimulateurGersStock {\n    date_stock: Array<string>;\n    stck_reel: Array<number>;\n    stk_gers_prev: Array<number>;\n    ventes_gers: Array<number>;\n    Stock_moins_ventes_gers: Array<number>;\n    approvisionnement: Array<number>;\n}\n\n\n","export class SimulateurMedicamModel {\n    labo: string;\n    idlabo: number;\n    nmgrp: number;\n    data: SimulateurMedicamStock;\n    consoDataMissing: boolean;\n    lastDt: string;\n}\n\nexport class SimulateurMedicamStock {\n    date_stock: Array<string>;\n    stck_reel: Array<number>;\n    stk_medicam_prev: Array<number>;\n    ventes_medicam: Array<number>;\n    Stock_moins_ventes_medicam: Array<number>;\n    approvisionnement: Array<number>;\n}\n\n\n","export class Subst {\n    cd_subst: number;\n    nm_subst: string;\n    dt_feed?: string;\n    dt_oper?: string;\n}\n","import { LstIndc } from '.';\n\nexport class ThirdStep {\n    listIndcSorted?: LstIndc;\n    lstIndc: Array<number>;\n    recurrence: string;\n}\n","\nexport class User {\n    id?: number;\n    username: string;\n    lastName?: string;\n    firstName?: string;\n    email?: string;\n    labo?: number;\n    laboName?: string;\n    tel?: string;\n    password?: string;\n    status?: boolean;\n    role?: string;\n    jwt?: string;\n    sms?: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { DataBreak, DataEntry } from 'src/app/models';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataEntryService {\n  private _results: Array<any>;\n  private _dateStart: Date;\n  private _dataBreak: DataBreak;\n  private _dateEnd: Date;\n  private _nextDtGrnlr: string;\n  private _isAdmin: boolean = false;\n\n  get nextDtGrnlr(): string { return this._nextDtGrnlr; }\n  set nextDtGrnlr(dt: string) { this._nextDtGrnlr = dt; }\n  get dateEnd(): Date { return this._dateEnd; }\n  set dateEnd(de: Date) { this._dateEnd = de; }\n  get dateStart(): Date { return this._dateStart; }\n  set dateStart(ds: Date) { this._dateStart = ds; }\n  get dataBreak(): DataBreak { return this._dataBreak; }\n  set dataBreak(data: DataBreak) { this._dataBreak = data; }\n\n  get isAdmin(): boolean {\n    return this._isAdmin;\n  }\n  set changeIsAdmin(change: boolean) {\n    this._isAdmin = change;\n  }\n  constructor(\n  ) { }\n\n\n\n  public controlDataEntry(data: DataEntry): Observable<any> {\n    const params = {\n      id_break: data.id_break,\n      id_hld: data.id_hld,\n      dt_grnlr: data.dt_grnlr\n    };\n    return of()\n  }\n  // Creation d'une session de rupture et renvoi l'id de la rupture créée\n  public createDataEntry(data: Array<any>): Observable<any> {\n    const params = {\n      'results': data\n    };\n    return of()\n  }\n\n  // get next work date\n  public getPdcts(id: Array<number>): Observable<any> {\n    const set: Set<number> = new Set(id);\n    const newId = Array.from(set.values());\n    const params = {\n      'cd_cip13': newId\n    };\n    const prdct = []\n    return of(prdct)\n  }\n  // update dataEntry\n  public updateDataEntry(data: Array<DataEntry>): Observable<any> {\n    data.forEach((element: any) => {\n      if (element.id_indc === 999 && element.val_indc) {\n        element.val_indc = element.val_indc.replaceAll('\\'', '\\\"');\n      }\n    }\n    );\n    const params = {\n      'id_break': data[0].id_break,\n      'id_hld': data[0].id_hld,\n      'dt_grnlr': data[0].dt_grnlr,\n      'results': data\n    };\n    return of()\n  }\n\n  public getResults() {\n    return this._results;\n  }\n}\n","export * from './dataEntry.service';\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { DataEntry, GridDataRow, GridDataType, PdctHldSubst, DataBreak } from 'src/app/models';\nimport { first, switchMap, map } from 'rxjs/operators';\nimport { DataEntryService } from '../dataEntry';\nimport { of, Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GridDataService {\n\n    public saveSuccess: boolean = false;\n    public error: boolean = false;\n    public validated: EventEmitter<number> = new EventEmitter();\n    public saved: EventEmitter<boolean> = new EventEmitter();\n\n    private _dataOrigin: Array<PdctHldSubst>;\n    private _data: {[key: string]: Array<GridDataRow>} = {\n        [GridDataType.RECURRENT]: [],\n        [GridDataType.STARTING]: []\n    };\n\n    constructor(\n        private _dataEntry: DataEntryService) {}\n\n    get canValidate(): boolean {\n        const hasEmptyValues: boolean = (\n            this._data[GridDataType.RECURRENT].reduce((c, d) => c += d.nbEmptyValue, 0) +\n            this._data[GridDataType.STARTING].reduce((c, d) => c += d.nbEmptyValue, 0)\n        ) > 0;\n        return this._canValidate(GridDataType.RECURRENT)\n            && this._canValidate(GridDataType.STARTING)\n            && !hasEmptyValues;\n    }\n\n    get hasPendingModif(): boolean {\n        return [\n            ...this._getDataToSave(GridDataType.RECURRENT),\n            ...this._getDataToSave(GridDataType.STARTING)\n        ].length > 0;\n    }\n\n    public setData(data: Array<PdctHldSubst>, type: GridDataType): void {\n        const idUser: number = require('src/app/mocks/userMocks.app.json').id;\n        let newData = data;\n        newData = data.filter(x => x.data[type].length > 0);\n        this._dataOrigin = newData;\n        this._data[type] = newData.map(row => new GridDataRow(row, type, idUser));\n    }\n\n    public getData(type: GridDataType): Array<GridDataRow> {\n        return this._data[type];\n    }\n\n    public controlStockError(archives: DataBreak): boolean {\n        let errorStock = false;\n        const dataToValidate: Array<any> = [\n        ...this._getDataToValidate(GridDataType.RECURRENT),\n        ...this._getDataToValidate(GridDataType.STARTING)\n        ];\n        const prevData = archives ? archives.archivedDataByDate.find(x => x.nextDtGrnlr === dataToValidate[0].dt_grnlr) : null;\n        const originData = archives ? archives.archivedDataByDate.find(x => x.date === dataToValidate[0].dt_grnlr) : null;\n        let valuesPrevStock: Array<DataEntry>;\n        let valuesStockOrigin: Array<DataEntry> = new Array;\n        let valuesSupplyOrigin: Array<DataEntry> = new Array;\n        let valuesSendedOrigin: Array<DataEntry> = new Array;\n        if (prevData) {\n            valuesPrevStock = prevData.recurrentData.filter((x: DataEntry) =>\n            x.id_indc.cd_indc === 'IE-1');\n        }\n        if (originData) {\n            valuesStockOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 7);\n            valuesSupplyOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 8);\n            valuesSendedOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 22);\n        }\n        const valuesStock = dataToValidate.filter(x => x.id_indc === 7).concat(valuesStockOrigin);\n        const valuesSupply = dataToValidate.filter(x => x.id_indc === 8).concat(valuesSupplyOrigin);\n        const valuesSended = dataToValidate.filter(x => x.id_indc === 22).concat(valuesSendedOrigin);\n        if (\n            valuesPrevStock\n            &&\n            valuesStock.length > 0\n            &&\n            valuesSupply.length > 0\n            &&\n            valuesSended.length > 0\n        ) {\n            valuesSended.forEach(element => {\n                const dataPrevStock = valuesPrevStock.find((x: DataEntry) =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valuePrevStock = dataPrevStock ? Number(dataPrevStock.val_indc) : null;\n                const datavaluesSupply = valuesSupply.find(x =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valueSupply = datavaluesSupply ? Number(datavaluesSupply.val_indc) : null;\n                const dataStock = valuesStock.find((x: DataEntry) =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valueStock = dataStock ? Number(dataStock.val_indc) : null;\n                const stockTotal = valuePrevStock !== null && valueSupply !== null ?\n                    valuePrevStock - Number(element.val_indc) + valueSupply : null;\n                const stockMin = stockTotal !== null ?\n                    stockTotal - Math.abs(stockTotal * 0.05) : null;\n                const stockMax = stockTotal !== null ?\n                    stockTotal + Math.abs(stockTotal * 0.05) < 0 ? 0 : stockTotal + Math.abs(stockTotal * 0.05) : null;\n                errorStock = valueStock !== null && stockTotal !== null && (valueStock < stockMin || valueStock > stockMax) ?\n                    true : errorStock;\n            });\n        }\n        return errorStock;\n    }\n\n    public controlStockBiggest(archives: DataBreak): boolean {\n        let errorSended = false;\n        const dataToValidate: Array<any> = [\n        ...this._getDataToValidate(GridDataType.RECURRENT),\n        ...this._getDataToValidate(GridDataType.STARTING)\n        ];\n        const prevData = archives ? archives.archivedDataByDate.find(x => x.nextDtGrnlr === dataToValidate[0].dt_grnlr) : null;\n        const originData = archives ? archives.archivedDataByDate.find(x => x.date === dataToValidate[0].dt_grnlr) : null;\n        let valuesPrevStock: Array<DataEntry>;\n        let valuesStockOrigin: Array<DataEntry> = new Array;\n        let valuesSupplyOrigin: Array<DataEntry> = new Array;\n        let valuesSendedOrigin: Array<DataEntry> = new Array;\n        if (prevData) {\n            valuesPrevStock = prevData.recurrentData.filter((x: DataEntry) =>\n            x.id_indc.cd_indc === 'IE-1');\n        }\n        if (originData) {\n            valuesStockOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 7);\n            valuesSupplyOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 8);\n            valuesSendedOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 22);\n        }\n        const valuesStock = dataToValidate.filter(x => x.id_indc === 7).concat(valuesStockOrigin);\n        const valuesSupply = dataToValidate.filter(x => x.id_indc === 8).concat(valuesSupplyOrigin);\n        const valuesSended = dataToValidate.filter(x => x.id_indc === 22).concat(valuesSendedOrigin);\n        if (\n            valuesPrevStock\n            &&\n            valuesStock.length > 0\n            &&\n            valuesSupply.length > 0\n            &&\n            valuesSended.length > 0\n        ) {\n            valuesSended.forEach(element => {\n                const dataPrevStock = valuesPrevStock.find((x: DataEntry) =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valuePrevStock = dataPrevStock ? Number(dataPrevStock.val_indc) : null;\n                const datavaluesSupply = valuesSupply.find(x =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valueSupply = datavaluesSupply ? Number(datavaluesSupply.val_indc) : null;\n                errorSended = valuePrevStock !== null && valueSupply !== null && Number(element.val_indc) > (valuePrevStock + valueSupply) ?\n                    true : errorSended;\n            });\n        }\n        return errorSended;\n    }\n\n    public save(): Observable<void> {\n        const dataToSave: Array<DataEntry> = [\n            ...this._getDataToSave(GridDataType.RECURRENT),\n            ...this._getDataToSave(GridDataType.STARTING)\n        ];\n        if (dataToSave.length === 0) {\n            return of(null);\n        }\n        const obs: Observable<void> = this._dataEntry.updateDataEntry(dataToSave);\n        obs.pipe(\n            first())\n            .subscribe(\n                () => {\n                this._updateValues(GridDataType.STARTING);\n                this._updateValues(GridDataType.RECURRENT);\n                this.saved.emit(true);\n                this._saveSuccess();\n                },\n                this._onError.bind(this));\n        return obs;\n    }\n\n    public validate(): void {\n        const dataToCreate: Array<DataEntry> = this._getDataToCreate(GridDataType.RECURRENT);\n        const dataToValidate: Array<DataEntry> = [\n            ...this._getDataToValidate(GridDataType.RECURRENT),\n            ...this._getDataToValidate(GridDataType.STARTING)\n        ];\n        if (dataToValidate.length === 0) {\n            return;\n        }\n        this._dataEntry.updateDataEntry(dataToValidate)\n        .pipe(\n            first(),\n            switchMap(d => this._setNextDate(dataToCreate, this._dataEntry.nextDtGrnlr)),\n            switchMap(toCreate => this._createDataEntry(toCreate)),\n            switchMap(created => this._dataEntry.controlDataEntry(dataToValidate[0])),\n        )\n        .subscribe(\n            (resp) => {\n                this.validated.emit(resp);\n            },\n            this._onError.bind(this)\n        );\n    }\n\n    private _getDataToSave(type: GridDataType): Array<DataEntry> {\n        return this._data[type].reduce((acc, dataRow) =>\n            acc = [...acc, ...dataRow.dataToSave]\n        , []) as Array<DataEntry>;\n    }\n\n    private _getDataToValidate(type: GridDataType): Array<DataEntry> {\n        return this._data[type].reduce((acc, dataRow) =>\n            acc = [...acc, ...dataRow.dataToValidate]\n        , []) as Array<DataEntry>;\n    }\n\n    private _getDataToCreate(type: GridDataType): Array<DataEntry> {\n        return this._data[type].reduce((acc, dataRow) =>\n            acc = [...acc, ...dataRow.dataToCreate]\n        , []) as Array<DataEntry>;\n    }\n\n    private _canValidate(type: GridDataType): boolean {\n        let canValidate = true;\n        this._data[type].forEach(d => {\n            if (!d.canValidate) {\n                canValidate = false;\n            }\n        });\n        return canValidate;\n    }\n\n    private _saveSuccess(): void {\n        this.saveSuccess = true;\n        setTimeout(() => this.saveSuccess = false, 4000);\n    }\n\n    private _updateValues(type: GridDataType): void {\n        this._getDataToSave(type).forEach(d => {\n            const rowOrig: PdctHldSubst = this._dataOrigin.find(row => row.cd_cip13 === d.cd_cip13);\n            const indc: DataEntry = rowOrig.data[type].find(entry => entry.id_indc.id_indc === (d.id_indc as unknown));\n            indc.val_indc = d.val_indc;\n        });\n    }\n\n    private _onError(): void {\n        this.error = true;\n        setTimeout(() => this.error = false, 4000);\n    }\n\n    private _setNextDate(dataToCreate: Array<any>, nextDate: string): Observable<Array<DataEntry>> {\n        const newDataEntries = [];\n        dataToCreate.forEach(d => {\n                d.dt_grnlr = nextDate;\n                newDataEntries.push(d);\n        });\n        return of(newDataEntries);\n    }\n\n    private _createDataEntry(newDataEntries: Array<any>): Observable<any> {\n        if (newDataEntries.length < 1) {\n            return of(true);\n          } else {\n              return this._dataEntry.createDataEntry(newDataEntries)\n              .pipe(map(\n                (resp) => {\n                  return true;\n                },\n                (err) => {\n                  return err;\n              }));\n          }\n    }\n}\n","export * from './gridData.service';\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  public sessionSucces: boolean = false;\n  constructor(\n  ) { }\n\n  public sessionCreatedSuccess() {\n    this.sessionSucces = true;\n    setTimeout(() =>\n      this.sessionSucces = false, 4000\n    );\n  }\n}\n","export * from './home.service';\n","export * from './language';\nexport * from './dataEntry';\nexport * from './loader.service';\nexport * from './gridData';\nexport * from './home';\n\n","export * from './language.service';\n","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable()\nexport class LanguageService {\n    private _languages: Array<string> = ['en', 'fr'];\n\n    constructor(private translate: TranslateService) {\n    }\n\n    public init(): void {\n\n        this.translate.addLangs(this._languages);\n        for (let i = 0; i < this._languages.length; i++) {\n            // tslint:disable-next-line:no-require-imports\n            this.translate.setTranslation(this._languages[i], require('../../../i18n/' + this._languages[i] + '.json'), true);\n        }\n        this.translate.setDefaultLang('fr');\n        this.translate.use('fr');\n    }\n\n    public setLanguage(language: string): void {\n        if (this._languages.indexOf(language) > -1) {\n            this.translate.use(language);\n        } else {\n            console.error('ERROR -> LanguageService : ' + language + ' is not a known language');\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n    public showSpinner = false;\n\n    constructor(\n    ) {}\n\n    public startingDataLoading() {\n        this.showSpinner = true;\n    }\n    public endingDataLoading() {\n        this.showSpinner = false;\n    }\n}\n\n\n\n\n\n","<div *ngIf=\"title\" class=\"dropdown-title\" [ngClass]=\"{'title-white': !active}\">{{title}}</div>\n  <div class=\"dropdown\">\n    <div class=\"dropdown-toggle\" [ngClass]=\"{'dropdown-disable': !active, 'dropdown-enable': active, 'input-color-disabled-white': colorDisable === 'white', 'input-color-disabled-grey': colorDisable === 'grey', 'input-valid': (dropdownToggleLabel || (dropdownToggleLabels && dropdownToggleLabels.length > 0))}\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-expanded=\"false\" (click)=\"onClickToggle()\">\n      <div class=\"labelInput\" *ngIf=\"typeOfData === 'data-entry-admin' || typeOfData === 'data-entry' || typeOfData === 'user' || typeOfData === 'session-dashboard' || typeOfData === 'group'\">  \n          <p\n          [class.pendding]=\"pendding\"> {{dropdownToggleLabel}}</p>\n      </div>\n      <div class=\"labelInput\" *ngIf=\"typeOfData === 'gran'\">  \n        <p>{{dropdownToggleLabel | translate}}</p>\n      </div>\n      <div *ngIf=\"typeOfData === 'dci'\">  \n          <div class=\"labelInputBox\" *ngFor=\"let data of dropdownToggleLabels\">\n              {{data.nm_subst}}\n              <span (click)=\"onClickDelete($event, data)\"></span>\n          </div>\n      </div>\n    </div>\n    <div class=\"dropdown-menu bottom-shadow\" aria-labelledby=\"dropdownMenuButton\">\n      <div *ngIf=\"search && data\" class=\"picto-search\">\n        <input #searchSession type=\"text\" [ngClass]=\"{'border-input': data && data.length > 0}\" placeholder=\"{{'_SoldOut_form_field_dci_search_' | translate}}\" (keyup)=\"onSearch($event)\">\n        <span></span>\n      </div>\n      <div *ngIf=\"data\" class=\"dropdown-option\" [ngClass]=\"{'padding-top-and-bottom': data && data.length > 0}\">\n        <div \n        class=\"dropdown-list\"\n        *ngIf=\"data.length > 0\">\n\n          <div *ngFor=\"let item of data; let i=index\" [ngClass]=\"{'default-list': typeOfList === 'default', 'checkbox-list': typeOfList === 'checkbox'}\">\n            <div *ngIf=\"i < 50\">\n              <div *ngIf=\"typeOfData === 'user'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">{{item.firstName}} {{item.lastName}} | {{item.laboName}}</div>\n              <div *ngIf=\"typeOfData === 'session-dashboard'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">RUPT_{{item.id_break}}_{{item.nb_vers}} - {{item.nm_break}}</div>\n              <div *ngIf=\"typeOfData === 'data-entry'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">RUPT_{{item.break.id_break}} - {{item.break.nm_break}}</div>\n              <div *ngIf=\"typeOfData === 'data-entry-admin'\" class=\"dropdown-item\" \n              [class.closed]=\"item.fl_break_actvt === 0\"  \n              [class.pendding]=\"item.fl_break_actvt === 2\"\n              (click)=\"onClick($event, item)\">{{item.nm_break === 'Afficher tous les produits'? item.nm_break:'RUPT_'+item.id_break+'_'+item.nb_vers+' - '+item.nm_break}}</div>\n              <div *ngIf=\"typeOfData === 'gran'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">{{item.text | translate}}</div>\n              <div *ngIf=\"typeOfData === 'group'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">{{item.name}}</div>\n              <label *ngIf=\"typeOfData === 'dci' || typeOfData === 'unit'\" class=\"dropdown-item\" (click)=\"onClick($event, item)\">\n                  <input *ngIf=\"typeOfData === 'dci'\" type=\"checkbox\" [checked]=\"isChecked(item)\" [value]=\"item\" (change)=\"onChecked($event)\">\n                  <input *ngIf=\"typeOfData === 'unit'\" type=\"checkbox\" [checked]=\"unitIsChecked(item)\" [value]=\"item\" (change)=\"onCheckedUnit($event, item)\">\n                  <span class=\"checkmark\"></span>\n                  <div *ngIf=\"typeOfData === 'dci'\" class=\"text-item\">{{item}}</div>\n                  <div *ngIf=\"typeOfData === 'unit'\" class=\"text-item\">{{item.cip}} - {{item.nom}}</div>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"search && data.length < 1\">\n          <div [ngClass]=\"{'default-list': typeOfList === 'default', 'checkbox-list': typeOfList === 'checkbox'}\">\n            <div class=\"dropdown-empty too-much-filter\">{{dropdownNotMatche(typeOfData) | translate}}</div>\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"!data && search\" class=\"dropdown-option\">\n        <div class=\"loader-content mt-3 mb-3 position-relative\" *ngIf=\"loader.showSpinner === true\">\n          <mat-progress-spinner  mode=\"indeterminate\">\n          </mat-progress-spinner>\n        </div>\n        <div *ngIf=\"loader.showSpinner === false\">\n          <div [ngClass]=\"{'default-list': typeOfList === 'default', 'checkbox-list': typeOfList === 'checkbox'}\">\n            <div class=\"dropdown-empty\">{{dropdownEmpty(typeOfData) | translate}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\nimport { Subst } from 'src/app/models';\nimport { LoaderService } from 'src/app/services';\n\n@Component({\n  selector: 'app-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent implements OnInit, OnChanges {\n  @ViewChild('searchSession') searchElement: ElementRef;\n  @Input() active: boolean;\n  @Input() search: boolean;\n  @Input() title: string;\n  @Input() pendding: boolean;\n  @Input() data: any;\n  @Input() colorDisable: string;\n  @Input() typeOfData: string;\n  @Input() typeOfList: string;\n  @Input() dropdownToggleLabel: string;\n  @Input() dropdownToggleLabels: Array<any>;\n  @Output() presentData: EventEmitter<any> = new EventEmitter();\n  @Output() dataDeleted: EventEmitter<any> = new EventEmitter();\n  @Output() keyUpEvent: EventEmitter<any> = new EventEmitter();\n  @Output() checkEvent: EventEmitter<any> = new EventEmitter();\n\n  public isSubmitted: boolean;\n  private searchIsEmpty: Array<any> = [\n    {\n      typeOfData : 'data-entry',\n      field: '_Form_field_data_entry_empty_',\n    },\n    {\n      typeOfData : 'data-entry-admin',\n      field: '_Form_field_session_empty_',\n    },\n    {\n      typeOfData : 'session-dashboard',\n      field: '_Form_field_session_empty_',\n    },\n    {\n      typeOfData : 'dci',\n      field: '_Form_field_dci_empty_',\n    },\n    {\n      typeOfData : 'unit',\n      field: '_Form_field_unit_empty_',\n    },\n    {\n      typeOfData : 'user',\n      field: '_Form_field_user_empty_',\n    },\n    {\n      typeOfData : 'data-entry-not-matche',\n      field: '_Form_field_session_not_matche_',\n    },\n    {\n      typeOfData : 'user-not-matche',\n      field: '_Form_field_user_not_matche_',\n    },\n    {\n      typeOfData : 'dci-not-matche',\n      field: '_Form_field_dci_not_matche_',\n    },\n    {\n      typeOfData : 'unit-not-matche',\n      field: '_Form_field_unit_not_matche_',\n    }\n  ];\n  constructor(\n    public loader: LoaderService,\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n  }\n\n  public dropdownEmpty(s: string): string {\n    const field = this.searchIsEmpty.find(x => x.typeOfData === s).field;\n    return field;\n  }\n  public dropdownNotMatche(s: string): string {\n    let field: string;\n    let typeOfData: string;\n    switch (s) {\n      case 'data-entry':\n        typeOfData = 'data-entry-not-matche';\n        break;\n      case 'data-entry-admin':\n        typeOfData = 'data-entry-not-matche';\n        break;\n      case 'session-dashboard':\n        typeOfData = 'data-entry-not-matche';\n        break;\n      case 'user':\n        typeOfData = 'user-not-matche';\n        break;\n      case 'dci':\n        typeOfData = 'dci-not-matche';\n        break;\n      case 'unit':\n        typeOfData = 'unit-not-matche';\n    }\n    field = this.searchIsEmpty.find(x => x.typeOfData === typeOfData).field;\n    return field;\n  }\n  public onClickToggle() {\n    const search = this.searchElement;\n    if (search) {\n      setTimeout(() => {\n        this.searchElement.nativeElement.focus();\n      }, 300);\n    } else {\n      return;\n    }\n  }\n  public onClick(e, data: any) {\n    if (\n      this.typeOfData === 'data-entry-admin' || this.typeOfData === 'user' || this.typeOfData === 'session-dashboard' || this.typeOfData === 'group' || this.typeOfData === 'data-entry'\n    ) {\n      this.isSubmitted = true;\n    } else if (this.typeOfData === 'gran') {\n      this.dropdownToggleLabel = data.text;\n    } else if (this.typeOfData === 'dci' || this.typeOfData === 'unit') {\n      e.stopPropagation();\n    } else {\n      return;\n    }\n    this.presentData.emit(data);\n  }\n  public onChecked(e) {\n    this.isSubmitted = true;\n    this.checkEvent.emit(e);\n  }\n  public onCheckedUnit(e, item) {\n    const emit = {\n      checked: e.target.checked,\n      value: item\n    };\n    this.isSubmitted = true;\n    this.checkEvent.emit(emit);\n  }\n  public onClickDelete(e, data: Subst) {\n    e.stopPropagation();\n    this.dataDeleted.emit(data);\n  }\n  public onSearch(e) {\n    this.keyUpEvent.emit(e);\n  }\n  public isChecked(data: string): boolean {\n    if (this.dropdownToggleLabels.find(x => x.nm_subst === data)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  public unitIsChecked(item): boolean {\n    if (this.dropdownToggleLabels.find(x => x.cip === item.cip)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<div class=\"title\" [innerHTML]=\"title\"></div>\n<p *ngIf=\"text\">{{text | translate}}</p>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-highlight-title',\n  templateUrl: './highlightTitle.component.html',\n  styleUrls: ['./highlightTitle.component.scss']\n})\nexport class HighlightTitleComponent implements OnInit {\n  @Input() title: string;\n  @Input() text: string;\n  @Input() highlight: Array<string>;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.highlight.forEach(element => {\n      this.title = this.title.replace(element, '<span class=\"highlight\">' + element + '</span>');\n    });\n  }\n\n}\n","<div class=\"icon-container\" [ngClass]=\"{'no-margin': noMargin}\" >\n  <div *ngIf=\"!noIcon\" class=\"icon-image\">\n    <img width=\"34\" height=\"40\" [src]=\"active ? srcActive : srcInactive\" [alt]=\"altText\">\n  </div>\n  <div \n  *ngIf=\"!lblUrl\" class=\"icon-label\" [style.font-size]=\"fontSize\" [style.line-height]=\"fontLineHeight\" [ngClass]=\"{'disable-click': active === false, activeColor: active, inactiveWhite: !active && colorInactive === 'white', inactiveGrey: !active && colorInactive === 'grey'}\">\n    {{label}}\n    <span *ngIf='afterLabel'>{{afterLabel}}</span>\n  </div>\n  <div  \n  *ngIf=\"lblUrl\"\n  class=\"dropdown\">\n    <div \n    id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n    class=\"icon-label dropdown-toggle\" [style.font-size]=\"fontSize\" [style.line-height]=\"fontLineHeight\" [ngClass]=\"{'disable-click': active === false, activeColor: active, inactiveWhite: !active && colorInactive === 'white', inactiveGrey: !active && colorInactive === 'grey'}\">\n      {{label}}\n      <span *ngIf='afterLabel'>{{afterLabel}}</span>\n    </div>\n    <div \n    class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n      <a \n      *ngFor=\"let url of lblUrl\"\n      class=\"dropdown-item\" [routerLink]='url.url' [translate]=\"url.lbl\"></a>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-icon-text',\n  templateUrl: './iconText.component.html',\n  styleUrls: ['./iconText.component.scss']\n})\nexport class IconTextComponent implements OnInit {\n  @Input() fontLineHeight: string;\n  @Input() fontSize: string;\n  @Input() colorInactive: string;\n  @Input() active: boolean;\n  @Input() srcActive: string;\n  @Input() srcInactive: string;\n  @Input() altText: string;\n  @Input() label: string;\n  @Input() afterLabel: string;\n  @Input() lblUrl: Array<any>;\n  @Input() noIcon: boolean;\n  @Input() noMargin: boolean;\n\n  private baseDir: string = '../../../assets/images/';\n\n  constructor() { }\n\n  ngOnInit() {\n    this.srcActive = this.baseDir + this.srcActive;\n    this.srcInactive = this.baseDir + this.srcInactive;\n  }\n\n}\n","<div class=\"nav-block\">    \n    <img class=\"btn-navigate\" width=\"24\" height=\"24\" src=\"/assets/images/ansm_icons/Profil.svg\" alt=\"_Navbar_home_button_\" (click)=\"onClickProfil()\">\n    <img class=\"btn-navigate\" width=\"24\" height=\"24\" src=\"/assets/images/ansm_icons/Picto_accueil.svg\" alt=\"_Navbar_home_button_\" (click)=\"onClickHome()\">\n    <div *ngIf=\"true\" class=\"welcome\">{{\"_Navbar_welcoming_user_\" | translate}}{{currentUserValue['firstName']}} {{currentUserValue['lastName']}}</div>\n    <img class=\"logout\" width=\"24\" height=\"24\" src=\"/assets/images/ansm_icons/Picto_logout.svg\" alt=\"_Navbar_deconnection_\" (click)=\"onClick('logout')\">\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataEntryService } from 'src/app/services';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  public active = false;\n  currentUserValue = require('src/app/mocks/userMocks.app.json')\n  constructor(\n    private _router: Router,\n    private _dataEntryService: DataEntryService\n  ) {\n   }\n\n  ngOnInit(): void {\n  }\n  public activeToggle() {\n    if (this.active === false) {\n      this.active = true;\n    } else {\n      this.active = false;\n    }\n  }\n\n  public onClick(s: string) {\n    switch (s) {\n      case 'logout':\n        break;\n    }\n  }\n  public onClickHome() {\n    this._dataEntryService.changeIsAdmin = this._dataEntryService.isAdmin;\n    console.log(this._dataEntryService.isAdmin)\n    this._router.navigate(['/view/home']);\n  }\n  public onClickProfil() {\n    this._router.navigate(['/view/profil']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderUtils {\n  private _orderName;\n  public reverse = false;\n\n  constructor() { }\n\n  get getOrder(): string {\n    return this._orderName;\n  }\n  set setOrder(name: string) {\n    this._orderName = name;\n  }\n  // Ordonner les produits dans la vue\n  public setOrderName(value: string) {\n    if (this.getOrder === value) {\n      this.reverse = !this.reverse;\n    }\n    this.setOrder = value;\n  }\n}\n","<div class=\"row height-max-content\">\n  <div class=\"left-menu p-0 col-lg-1\">\n    <app-navbar class=\"navbar\"></app-navbar>\n  </div>\n\n\n  <div class=\"col-lg-11 right-content\">\n    <div class=\"header\">\n      <app-highlight-title [title]=\"'_Home_label_data_entry_' | translate\"\n        [highlight]=\"['_DataEntry_title__highlighted_' | translate]\" [text]=\"'_DataEntry_text_'\"></app-highlight-title>\n    </div>\n    <app-data-entry-form\n    [currentUser]=\"currentUser\"\n    [isAdmin]=\"isAdmin\"\n    [data]=\"data\"\n    [listDataFound]=\"data\"\n    [archive]=\"archivedData\"\n    (emitIsValidateOrSave)=\"handleIsValidateOrSave($event)\"></app-data-entry-form>\n  </div>\n</div>\n","import { DatePipe } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Data, DataBreak, DataEntry, DatesBySessionModel } from 'src/app/models';\nimport { DataEntryService } from 'src/app/services';\n\n@Component({\n  selector: 'app-data-entry',\n  templateUrl: './dataEntry.component.html',\n  styleUrls: ['./dataEntry.component.scss']\n})\nexport class DataEntryComponent implements OnInit {\n\n  private idHld: number;\n  public isAdmin: boolean;\n  public currentUser;\n  public data: Array<DataBreak>;\n  public archivedData: Array<DataBreak>;\n  public allDatesGrnlrBySession: Array<DatesBySessionModel>;\n  constructor(\n    private readonly _dataEntryService: DataEntryService,\n    private readonly _datePipe: DatePipe\n  ) {\n    this.isAdmin = this._dataEntryService.isAdmin;\n    if(this.isAdmin) {\n      this.currentUser = require('src/app/mocks/userMocks.app.json');\n    } else {\n      this.currentUser = require('src/app/mocks/userMocksAdmin.app.json');\n    }\n    this.idHld = this.currentUser.labo;\n    this.getDataEntry(this.idHld);\n  }\n\n  ngOnInit() {\n  }\n  public handleIsValidateOrSave(e) {\n    this.getDataEntry(this.idHld);\n  }\n  // recupere toutes les dataEntry à valider et archivé à mettre à jours avant de les trier\n  private getDataEntry(id: number) {\n    const callbacks = {\n        archived: this._getArchivedData.bind(this),\n        toValidated: this._getToValidatedData.bind(this)\n    };\n\n    let data: Array<DataEntry>;\n    data = require('src/app/mocks/dataMocks.app.json');\n    this.data = [];\n    this.archivedData = [];\n    if (this.isAdmin) {\n      data.forEach(element => callbacks['archived'](element, data)\n      );\n    } else {\n      data.forEach(element => callbacks[element.cd_stat_entry](element, data)\n      );\n    }\n    this._getAllDates(data);\n    if (this.isAdmin) {\n      this._checkedVueForAdmin(this.data, this.archivedData);\n    }\n  }\n\n  private _checkedVueForAdmin(lastToValidatedData: Array<DataBreak>, archivedData: Array<DataBreak>) {\n    archivedData.forEach( (x: DataBreak) => {\n      const newData: Data = x.archivedDataByDate[x.archivedDataByDate.length - 1];\n      const newDataBreak = new DataBreak;\n      newDataBreak.break = x.break;\n      newDataBreak.data = newData;\n      lastToValidatedData.push(\n        newDataBreak\n      );\n      x.archivedDataByDate = x.archivedDataByDate.filter((y, i) => i !== x.archivedDataByDate.length - 1);\n    });\n  }\n\n  private _calculeMinOrMaxGrnlr(data: Array<DataEntry>, id: number, s: string): string {\n    const allGrnlr: Array<string> = [];\n    const datesGrnlr: Array<Date> = [];\n    data.forEach( (grnlr: DataEntry) => {\n      if (\n        !allGrnlr.find(x => x === grnlr.dt_grnlr) &&\n        grnlr.id_break.id_break === id &&\n        grnlr.cd_stat_entry === 'toValidated'\n      ) {\n        allGrnlr.push(grnlr.dt_grnlr);\n      }\n    });\n    allGrnlr.forEach( (element: string) => {\n      const date: Date = new Date(element);\n      datesGrnlr.push(date);\n    });\n    datesGrnlr.sort((a, b) => {\n      if (s === 'min') {\n        return a.getTime() - b.getTime();\n      } else {\n        return b.getTime() - a.getTime();\n      }\n    });\n    if (datesGrnlr.length > 0) {\n      return this._datePipe.transform(new Date(datesGrnlr[0]), 'yyyy-MM-dd');\n    } else {\n      return;\n    }\n  }\n\n  private _getArchivedData(element: DataEntry, data: Array<DataEntry>) {\n    let archiveByBreakId: DataBreak = this.archivedData.find(x => x.break.id_break === element.id_break.id_break);\n    const date: string = element.dt_grnlr;\n    if (!archiveByBreakId) {\n      const dataBreak = new DataBreak;\n      dataBreak.break = element.id_break;\n      dataBreak.archivedDataByDate = [];\n      this.archivedData.push(\n        dataBreak\n      );\n      archiveByBreakId = this.archivedData.find(x => x.break.id_break === element.id_break.id_break);\n    }\n    if (!archiveByBreakId.archivedDataByDate.find(x => x.date === element.dt_grnlr)) {\n      const newData = new Data;\n      newData.date = element.dt_grnlr;\n      newData.startDate = element.start_periode;\n      newData.endDate = element.end_periode;\n      newData.nextDtGrnlr = element.next_dt_grnlr;\n      newData.recurrentData = data.filter(x =>\n        x.id_indc.cd_indc_faml.includes('IE') &&\n        x.id_break.id_break === element.id_break.id_break &&\n        x.dt_grnlr === date &&\n        (this.isAdmin || (!this.isAdmin && x.cd_stat_entry === element.cd_stat_entry))\n        );\n      newData.startingData = data.filter(x =>\n        x.id_indc.cd_indc_faml.includes('IR') &&\n        x.id_break.id_break === element.id_break.id_break &&\n        x.dt_grnlr === date &&\n        (this.isAdmin || (!this.isAdmin && x.cd_stat_entry === element.cd_stat_entry))\n        );\n      archiveByBreakId.archivedDataByDate.push(\n        newData\n      );\n    }\n  }\n\n  private _getToValidatedData(element: DataEntry, data: Array<DataEntry>) {\n    if (!this.data.find (x => x.break.id_break === element.id_break.id_break)) {\n      const newData = new Data;\n      newData.date = element.dt_grnlr;\n      newData.startDate = element.start_periode;\n      newData.endDate = element.end_periode;\n      newData.nextDtGrnlr = element.next_dt_grnlr;\n      newData.recurrentData = data.filter(x =>\n        x.id_indc.cd_indc_faml.includes('IE') &&\n        x.id_break.id_break === element.id_break.id_break &&\n        x.cd_stat_entry === 'toValidated' &&\n        x.dt_grnlr === this._calculeMinOrMaxGrnlr(data, element.id_break.id_break, 'min')\n        );\n      newData.startingData = data.filter(x =>\n        x.id_indc.cd_indc_faml.includes('IR') &&\n        x.id_break.id_break === element.id_break.id_break &&\n        x.cd_stat_entry === 'toValidated' &&\n        x.dt_grnlr === this._calculeMinOrMaxGrnlr(data, element.id_break.id_break, 'min')\n        );\n      const newDataBreak = new DataBreak;\n      newDataBreak.break = element.id_break;\n      newDataBreak.data = newData;\n      this.data.push(\n        newDataBreak\n      );\n    }\n  }\n\n  private _getAllDates(data: Array<DataEntry>) {\n    const datesGrnlr: Array<DatesBySessionModel> = [];\n    data.forEach( dataEntry => {\n      if (!datesGrnlr.find(x => x.id_break === dataEntry.id_break.id_break)) {\n        const newDatesBySession = new DatesBySessionModel;\n        newDatesBySession.id_break = dataEntry.id_break.id_break;\n        newDatesBySession.dates = [];\n        datesGrnlr.push(\n          newDatesBySession\n        );\n      }\n    });\n    datesGrnlr.forEach( (element: DatesBySessionModel) => {\n      const grnlrByIdBreak: DataBreak = this.archivedData.length > 0 ?\n        this.archivedData.find(x => x.break.id_break === element.id_break) : null;\n      let dateToValidate: string;\n      if (!this.isAdmin) {\n        dateToValidate = this._calculeMinOrMaxGrnlr(data, element.id_break, 'min');\n      }\n      if (grnlrByIdBreak) {\n        grnlrByIdBreak.archivedDataByDate.forEach(date => {\n          element.dates.push(date.date);\n        });\n        if (dateToValidate) {\n          element.dates.push(dateToValidate);\n        }\n      } else {\n        if (dateToValidate) {\n          element.dates.push(dateToValidate);\n        }\n      }\n    });\n    this.allDatesGrnlrBySession = datesGrnlr;\n  }\n}\n","<div class=\"dropdown row\">\n    <app-icon-text class=\"col-lg-3 p-0\" [active]=\"true\" [fontSize]=\"'21px'\" [fontLineHeight]=\"'28px'\" [srcActive]=\"'ansm_icons/Nom_session.svg'\" [altText]=\"'_SoldOut_form_field_session_name_' | translate\"\n        [label]=\"'_SoldOut_form_field_session_name_' | translate\">\n    </app-icon-text>\n    <app-dropdown\n    class=\"col-lg-5 p-0\"\n    [active]=\"true\"\n    [search]=\"true\"\n    [typeOfData]=\"'data-entry'\"\n    [dropdownToggleLabel]=\"label\"\n    [data]=\"listDataFound\"\n    [typeOfList]=\"'default'\"\n    (presentData)=\"initSelectSession($event)\"\n    (keyUpEvent)=\"handleOnSearch($event)\"></app-dropdown>\n    <div \n    *ngIf=\"dataBreak\"\n    class=\"btn-group-container col-lg-4 p-0\">\n        <div class=\"btn-group\">\n            <button\n            [class.active]=\"displayFlag === displayStyle.FORM\"\n            (click)=\"switchDisplayFlag()\"\n            [translate]=\"'_DataEntry_FormEntry_'\"></button>\n            <button\n            [class.active]=\"displayFlag === displayStyle.GRID\"\n            (click)=\"switchDisplayFlag()\"\n            [translate]=\"'_DataEntry_GridEntry_'\"></button>\n        </div>\n    </div>\n    <div\n    class=\"dialog-box\"\n    *ngIf=\"dialogDisplayViewChange\">\n        <label [translate]=\"'_DataEntry_ConfirmBeforeViewChange_'\"></label>\n        <div class=\"buttons\">\n            <button\n            class=\"button\"\n            [class.input-valid]=\"displayFlag === displayStyle.GRID || canSave\"\n            [class.input-error]=\"displayFlag === displayStyle.FORM && !canSave\"\n            (click)=\"save()\"\n            [translate]=\"'_DataEntry_form_save_'\"></button>\n            <button\n            class=\"button input-invalid\"\n            (click)=\"closeDisplayDialog(); toggleDisplayFlag()\"\n            [translate]=\"'_DataEntry_ContinueWithoutSave_'\"></button>\n            <button\n            class=\"button input-invalid\"\n            (click)=\"closeDisplayDialog()\"\n            [translate]=\"'_DataEntry_form_cancel_'\"></button>\n        </div>\n    </div>\n    <div\n    class=\"calendar-row row\"\n    *ngIf=\"dataBreak && dataEntryService.dateStart && dataEntryService.dateEnd\">\n        <app-icon-text\n        class=\"col-lg-3 p-0\"\n        [active]=\"true\"\n        [fontSize]=\"'21px'\"\n        [fontLineHeight]=\"'28px'\"\n        [srcActive]=\"'ansm_icons/Calendrier_valide.svg'\"\n        altText=\"{{'_DataEntry_periode_start_' | translate}}\"\n        label=\"{{'_DataEntry_periode_start_' | translate}}\"></app-icon-text>\n        <div class=\"date col-lg-5 p-0\">\n            <span\n            class=\"triangle i-triangle-left\"\n            [class.disabled]=\"!canPrevDate\"\n            (click)=\"prevDate()\"></span>\n            <label>{{dataEntryService.dateStart | date:'dd-MM-y' }} {{\"_DataEntry_periode_end_\" | translate}} {{dataEntryService.dateEnd | date:'dd-MM-y'}}</label>\n            <span\n            class=\"triangle i-triangle-right\"\n            [class.disabled]=\"!canNextDate\"\n            (click)=\"nextDate()\"></span>\n        </div>\n    </div>\n</div>\n<div\nclass=\"message success-msg\"\n*ngIf=\"validateSuccess\"\n[translate]=\"'_DataEntry_ValidateSuccess_'\"></div>\n<div\nclass=\"message error-msg\"\n*ngIf=\"controlError && controlError < 0\"\n[translate]=\"'_DataEntry_ControlError_Tech_'\"></div>\n<div\nclass=\"message error-msg\"\n*ngIf=\"controlError && controlError === 1\">{{\"_DataEntry_ControlError_Data_One_Error_\" | translate}}</div>\n<div\nclass=\"message error-msg\"\n*ngIf=\"controlError && controlError > 1\">{{controlError}} {{\"_DataEntry_ControlError_Data_Multiple_Errors_\" | translate}}</div>\n<div class=\"position-relative\">\n    <div class=\"loader-content\" *ngIf=\"(loader.showSpinner === true)\">\n        <mat-progress-spinner  mode=\"indeterminate\">\n        </mat-progress-spinner>\n    </div>\n    <div *ngIf=\"(loader.showSpinner === false)\">\n        <div\n        class=\"grid-container\"\n        *ngIf=\"displayFlag === displayStyle.GRID && presentationData\">\n            <app-data-entry-grid\n            [gridTitle]=\"'_DataEntry_type_starting_title_'\"\n            [dataType]=\"gridDataType.STARTING\"\n            [readOnly]=\"readOnly\"\n            [data]=\"presentationData\"></app-data-entry-grid>\n            <app-data-entry-grid\n            [gridTitle]=\"'_DataEntry_type_recurrent_title_'\"\n            [dataType]=\"gridDataType.RECURRENT\"\n            [readOnly]=\"readOnly\"\n            [data]=\"presentationData\"\n            [archivedData]=\"this.archivedData\"></app-data-entry-grid>\n            <div\n            class=\"message success-msg\"\n            *ngIf=\"gridData.saveSuccess\"\n            [translate]=\"'_DataEntry_SaveSuccess_'\"></div>\n            <div\n            class=\"message error-msg\"\n            *ngIf=\"gridData.error\"\n            [translate]=\"'_Common_UnkownError_'\"></div>\n            <footer *ngIf=\"areFooterButtonsShown\">\n                <button\n                class=\"button input-valid\"\n                (click)=\"gridData.save()\"\n                [translate]=\"'_DataEntry_form_save_'\"></button>\n                <button\n                *ngIf=\"isValidator\"\n                class=\"button valid-btn\"\n                [class.input-valid]=\"gridData.canValidate\"\n                [class.input-invalid]=\"!gridData.canValidate\"\n                (click)=\"dialogValidateGrid = true; warningStockError = gridData.controlStockError(this.archivedData); warningStockBiggest = gridData.controlStockBiggest(this.archivedData)\"\n                [translate]=\"'_DataEntry_form_submit_'\"></button>\n                <div\n                class=\"dialog-box\"\n                *ngIf=\"dialogValidateGrid\">\n                    <div \n                    class=\"consistency-check\" \n                    *ngIf=\"warningStockError\">\n                        {{'_Form_field_warning_message_control_stock_' | translate}}\n                    </div>\n                    <div \n                    class=\"consistency-check\" \n                    *ngIf=\"warningStockBiggest\">\n                        {{'_Form_field_warning_message_control_sended_' | translate}}\n                    </div>\n                    <label [translate]=\"'_DataEntry_ConfirmSubmit_'\"></label>\n                    <div class=\"buttons\">\n                        <button\n                        class=\"button input-valid\"\n                        (click)=\"gridData.validate(); dialogValidateGrid = false\"\n                        [translate]=\"'_DataEntry_form_submit_'\"></button>\n                        <button\n                        class=\"button input-invalid cancel\"\n                        (click)=\"dialogValidateGrid = false\"\n                        [translate]=\"'_DataEntry_form_cancel_'\"></button>\n                    </div>\n                </div>\n            </footer>\n        </div>\n        <form\n        *ngIf=\"formControls && formControls.session.valid && displayFlag === displayStyle.FORM\"\n        [formGroup]=\"dataEntryForm\"\n        (ngSubmit)=\"onClickSubmitSave()\">\n            <div\n            class=\"form-presentation\"\n            [class.error]=\"presentationHasError(presentation)\"\n            [class.active]=\"presentationIsValid(presentation)\"\n            *ngFor=\"let presentation of presentationData\">\n                <header (click)=\"presentation.collapsed = !presentation.collapsed\">\n                    <div class=\"presentation-title\">\n                        <strong>{{presentation.cd_cip13}}</strong>\n                        <span> - {{presentation.nm_medic}}</span>\n                    </div>\n                    <div\n                    class=\"icon-collapse\"\n                    [class.i-chevron-up]=\"!presentation.collapsed\"\n                    [class.i-chevron-down]=\"presentation.collapsed\"></div>\n                </header>\n                <body\n                [class.d-none]=\"presentation.collapsed\">\n                    <div class=\"presentation\">\n                        <strong>{{'_SoldOut_form_field_presentation_' | translate}} : </strong>\n                        <label>{{presentation.ll_prest}}</label>\n                    </div>\n                    <ng-container *ngFor=\"let dataType of ['starting', 'recurrent']\">\n                        <section *ngIf=\"presentation.data[dataType + 'Data'].length > 0\">\n                            <app-icon-text\n                            [active]=\"true\"\n                            [fontSize]=\"'21px'\"\n                            [fontLineHeight]=\"'28px'\"\n                            [srcActive]=\"'ansm_icons/' + dataType + '.svg'\"\n                            [altText]=\"'_DataEntry_type_' + dataType + '_title_' | translate\"\n                            [label]=\"'_DataEntry_type_' + dataType + '_title_' | translate\"></app-icon-text>\n                            <div\n                            class=\"entry\"\n                            *ngFor=\"let dataEntry of presentation.data[dataType + 'Data']\">\n                                <div\n                                class=\"tick\"\n                                [class.puce-error]=\"dataEntryHasError(dataEntry)\"\n                                [class.puce-actif]=\"dataEntryIsValid(dataEntry)\"></div>\n                                <div class=\"label-container\">\n                                    <label>{{dataEntry.id_indc.sl_indc}}</label>\n                                    <label\n                                    *ngIf=\"dataEntry.id_indc.lb_date.length > 0\"\n                                    class=\"indc-date\">{{dataEntry.id_indc.lb_date}}</label>\n                                </div>\n                                <div class=\"help\">\n                                    <div class=\"i-help\"></div>\n                                    <label class=\"help-text\">{{dataEntry.id_indc.ll_indc}}</label>\n                                </div>\n                                <div \n                                class=\"input-form\">\n                                    <app-data-entry-form-input\n                                    [disabled]=\"readOnly\"\n                                    [dataEntry]=\"dataEntry\"\n                                    [warningStockBiggest]=\"!readOnly && dataEntry.id_indc.cd_indc === 'IE-16' && controlSendedMoreThanStock(dataEntry)\"\n                                    [warningStockError]=\"!readOnly && dataEntry.id_indc.cd_indc === 'IE-1' && controlErreurStock(dataEntry)\"\n                                    (valueChanged)=\"handleResponse($event)\"></app-data-entry-form-input>\n                                </div>\n                            </div>\n                        </section>\n                    </ng-container>\n                </body>\n            </div>\n            <div\n            class=\"message success-msg\"\n            *ngIf=\"saveSuccess\"\n            [translate]=\"'_DataEntry_SaveSuccess_'\"></div>\n            <div\n            class=\"message error-msg\"\n            *ngIf=\"error\"\n            [translate]=\"'_Common_UnkownError_'\"></div>\n            <footer *ngIf=\"areFooterButtonsShown\">\n                <input\n                type=\"submit\"\n                class=\"button\"\n                [class.input-valid]=\"canSave\"\n                [class.input-invalid]=\"!canSave\"\n                value=\"{{'_DataEntry_form_save_' | translate}}\">\n                <div\n                class=\"button valid-btn\"\n                *ngIf=\"isValidator\"\n                [class.input-valid]=\"canValidate\"\n                [class.input-invalid]=\"!canValidate\"\n                (click)=\"dialogValidateForm = true; consistencyCheck(this.archivedData)\"\n                [translate]=\"'_DataEntry_form_submit_'\"></div>\n                <div\n                class=\"dialog-box\"\n                *ngIf=\"dialogValidateForm\">                    \n                    <div \n                    class=\"consistency-check\" \n                    *ngIf=\"warningStockError\">\n                        {{'_Form_field_warning_message_control_stock_' | translate}}\n                    </div>\n                    <div \n                    class=\"consistency-check\" \n                    *ngIf=\"warningStockBiggest\"\n                    >\n                        {{'_Form_field_warning_message_control_sended_' | translate}}\n                    </div>\n                    <label [translate]=\"'_DataEntry_ConfirmSubmit_'\"></label>\n                    <div class=\"buttons\">\n                        <button\n                        class=\"button input-valid\"\n                        (click)=\"onClickValidate(); dialogValidateForm = false\"\n                        [translate]=\"'_DataEntry_form_submit_'\"></button>\n                        <button\n                        class=\"button input-invalid cancel\"\n                        (click)=\"dialogValidateForm = false\"\n                        [translate]=\"'_DataEntry_form_cancel_'\"></button>\n                    </div>\n                </div>\n            </footer>\n        </form>\n    </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { first, map, switchMap, tap } from 'rxjs/operators';\nimport { Data, DataBreak, DataEntry, GridDataType, IndcTypes, PdctHldSubst } from 'src/app/models';\nimport { DataEntryService, GridDataService, LoaderService } from 'src/app/services';\n\nenum DisplayStyle {\n    FORM,\n    GRID\n}\n\ninterface DataEntryError {\n    cd_cip13: number;\n    indc: number;\n    error: boolean;\n}\n\n@Component({\n    selector: 'app-data-entry-form',\n    templateUrl: './dataEntryForm.component.html',\n    styleUrls: ['./dataEntryForm.component.scss']\n})\nexport class DataEntryFormComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input() data: Array<DataBreak>;\n    @Input() listDataFound: Array<DataBreak>;\n    @Input() archive: Array<DataBreak>;\n    @Input() isAdmin: boolean;\n    @Input() currentUser: any;\n\n    @Output() emitIsValidateOrSave: EventEmitter<boolean> = new EventEmitter();\n    public dataEntryForm: FormGroup;\n    public label: string;\n    public stratingData: boolean;\n    public presentationData: Array<PdctHldSubst>;\n    public saveSuccess: boolean;\n    public validateSuccess: boolean;\n    public controlError: number;\n    public isLabo = false;\n    public isValidator = false;\n    public errorData = [];\n    public gridDataType: typeof GridDataType = GridDataType;\n    public displayStyle: typeof DisplayStyle = DisplayStyle;\n    public displayFlag: DisplayStyle = DisplayStyle.GRID;\n    public dialogValidateGrid: boolean;\n    public dialogValidateForm: boolean;\n    public dialogDisplayViewChange: boolean;\n    public error: boolean;\n    public nullValueToSave = [];\n    public archiveIdx: number = 0;\n    public dataBreak: DataBreak;\n    public archivedData: DataBreak;\n    public warningStockBiggest: boolean = false;\n    public warningStockError: boolean = false;\n\n    private _subsriptions: Subscription = new Subscription();\n    private _subscriptionsSave: Subscription = new Subscription();\n    private nbChecked: number = 0;\n    private afterChecked: boolean;\n\n\n\n    constructor(\n        public loader: LoaderService,\n        public gridData: GridDataService,\n        public dataEntryService: DataEntryService,\n        private readonly _formBuilder: FormBuilder\n    ) {\n        if (!this.isAdmin) {\n            this.isValidator = true;\n        }\n        if (!this.isAdmin) {\n            this.isLabo = true;\n        }\n    }\n\n    ngOnInit(): void {\n        this.dataEntryForm = this._formBuilder.group({\n            session: ['', Validators.required],\n            dataToUpdate: this._formBuilder.array([], [Validators.required]),\n            dataToCreate: this._formBuilder.array([], [Validators.required]),\n        });\n        const sub: Subscription = this.gridData.validated.subscribe(this._afterValidate.bind(this));\n        const subSave: Subscription = this.gridData.saved.subscribe(this._afterSave.bind(this));\n        this._subsriptions.add(sub);\n        this._subscriptionsSave.add(subSave);\n    }\n\n    ngOnChanges(): void {\n        if (this.data && this.dataBreak) {\n            const dataBreak = this.data.find(x => x.break.id_break === this.dataBreak.break.id_break);\n            this._initSelectSessionAfterReloadData(dataBreak);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this._subsriptions.unsubscribe();\n        this._subscriptionsSave.unsubscribe();\n    }\n\n    get formControls(): {[key: string]: AbstractControl }  {\n        return this.dataEntryForm.controls;\n    }\n\n    get canSave(): boolean {\n        return (this.formControls.dataToUpdate.valid || this.nullValueToSave.length > 0)\n        && this.submitSaveIsActive\n        && !this.readOnly;\n    }\n\n    get canValidate(): boolean {\n        let canValidate = true;\n        const dataToUpdate = this.formControls.dataToUpdate.value;\n        const dataToCreate = this.formControls.dataToCreate.value;\n        this.presentationData.forEach(data => {\n            data.data.startingData.forEach(row => {\n                if (row.id_indc.fl_indc_mdty === 1\n                && !dataToUpdate.find(d => d.id_indc === row.id_indc.id_indc && d.cd_cip13 === row.cd_cip13)) {\n                    canValidate = false;\n                }\n            });\n            data.data.recurrentData.forEach(row => {\n                if (row.id_indc.fl_indc_mdty === 1\n                && (!dataToUpdate.find(d => d.id_indc === row.id_indc.id_indc && d.cd_cip13 === row.cd_cip13)\n                    || !dataToCreate.find(d => d.id_indc === row.id_indc.id_indc && d.cd_cip13 === row.cd_cip13))) {\n                    canValidate = false;\n                }\n            });\n        });\n        return canValidate && !this.hasPendingModif;\n    }\n\n    get submitSaveIsActive(): boolean {\n        return !this.errorData.find(x => x.error === true);\n    }\n\n    get readOnly(): boolean {\n        return !this.isLabo || (typeof this.archivedData !== 'undefined' && typeof this.archivedData.data !== 'undefined');\n    }\n\n    get areFooterButtonsShown(): boolean {\n        return !this.readOnly && this.presentationData && this.archiveIdx === 0;\n    }\n\n    get canPrevDate(): boolean {\n        return typeof this.archivedData !== 'undefined' && this.archiveIdx < this.archivedData.archivedDataByDate.length;\n    }\n\n    get canNextDate(): boolean {\n        return typeof this.archivedData !== 'undefined' && this.archiveIdx > 0;\n    }\n\n    get hasPendingModif(): boolean {\n        if (!this.dataBreak) {\n            return false;\n        }\n        let nbModif = this.dataBreak.data.recurrentData.filter(this._findModifs.bind(this)).length;\n        nbModif += this.dataBreak.data.startingData.filter(this._findModifs.bind(this)).length;\n        return nbModif > 0;\n    }\n\n    public switchDisplayFlag(): void {\n        const checkPendingModif: {[key: string]: boolean} = {\n            [DisplayStyle.FORM]: this.hasPendingModif,\n            [DisplayStyle.GRID]: this.gridData.hasPendingModif\n        };\n        if (!this.readOnly && checkPendingModif[this.displayFlag] && this.presentationData) {\n            this.dialogDisplayViewChange = true;\n        } else {\n            this.toggleDisplayFlag();\n        }\n    }\n\n    public toggleDisplayFlag(): void {\n        this.nbChecked = 0;\n        this.displayFlag = this.displayFlag === DisplayStyle.FORM ? DisplayStyle.GRID : DisplayStyle.FORM;\n    }\n\n    public closeDisplayDialog(): void {\n        this.dialogDisplayViewChange = false;\n    }\n\n    public presentationHasError(presentation: PdctHldSubst): boolean {\n        const error = this.errorData.find(x => x.cd_cip13 === presentation.cd_cip13 && x.error === true);\n        return typeof error !== 'undefined';\n    }\n\n    public presentationIsValid(presentation: PdctHldSubst): boolean {\n        const data = presentation.data;\n        const nbDataExpected = data.startingData.length + data.recurrentData.length;\n        const nbDataResponseFind = this.formControls.dataToUpdate.value.filter(x => x.cd_cip13 === presentation.cd_cip13).length;\n        return !this.presentationHasError(presentation) && (nbDataExpected === nbDataResponseFind);\n    }\n\n    public prevDate(): void {\n        this.archiveIdx++;\n        this.archivedData.data = this.archivedData.archivedDataByDate[this.archiveIdx - 1];\n        this.selectSession(this.archivedData);\n    }\n\n    public nextDate(): void {\n        this.archiveIdx--;\n        this.archivedData.data = this.archivedData.archivedDataByDate[this.archiveIdx - 1];\n        let dataBreak: DataBreak = this.archivedData;\n        if (this.archiveIdx === 0) {\n            delete this.archivedData.data;\n            dataBreak = this.dataBreak;\n        }\n        this.selectSession(dataBreak);\n    }\n\n    public dataEntryHasError(dataEntry: DataEntry): boolean {\n        const error: DataEntryError = this.errorData.find(err =>\n            (err.cd_cip13 === dataEntry.cd_cip13)\n            && (err.indc === dataEntry.id_indc.id_indc)\n            && (err.error === true)\n        );\n        return typeof error !== 'undefined';\n    }\n\n    public dataEntryIsValid(dataEntry: DataEntry): boolean {\n        const updated: DataEntry = this.formControls.dataToUpdate.value.find(updt =>\n            (updt.cd_cip13 === dataEntry.cd_cip13)\n            && (updt.id_indc === dataEntry.id_indc.id_indc)\n        );\n        return typeof updated !== 'undefined';\n    }\n\n    public handleOnSearch(e) {\n        const value = e.target.value.toUpperCase();\n        this.listDataFound = [];\n        if (!e.target.value) {\n          this.listDataFound = this.data;\n          return;\n        } else {\n          const listDataFound =\n            this.data.filter( x =>\n              x.break.nm_break.toUpperCase().includes(value)\n            );\n          listDataFound.forEach(element => {\n            if (!this.listDataFound.find(x => x.break.nm_break === element.break.nm_break)) {\n              this.listDataFound.push(element);\n            }\n          });\n        }\n    }\n    public save(): void {\n        if (this.displayFlag === this.displayStyle.FORM && !this.canSave) {\n            return;\n        }\n        const saveFuncs: {[key: string]: () => Observable<void>} = {\n            [DisplayStyle.FORM]: this.onClickSubmitSave.bind(this),\n            [DisplayStyle.GRID]: this.gridData.save.bind(this.gridData)\n        };\n        saveFuncs[this.displayFlag]()\n            .pipe(first())\n            .subscribe(this.toggleDisplayFlag.bind(this));\n        this.closeDisplayDialog();\n    }\n\n    public initSelectSession(dataBreak: DataBreak) {\n        this.archiveIdx = 0;\n        this.emitIsValidateOrSave.emit(true);\n        this.dataBreak = dataBreak;\n    }\n\n    public selectSession(dataBreak: DataBreak) {\n        this._resetData(dataBreak);\n        this._fetchProducts(dataBreak);\n        this.archivedData = this._initd(dataBreak);\n        this.dataEntryService.nextDtGrnlr = dataBreak.data.nextDtGrnlr;\n        this._setDateStart(dataBreak);\n        this.dataEntryService.dataBreak = dataBreak;\n    }\n\n    public handleResponse(e) {\n        this.nbChecked ++;\n        this._registerNullValueToUpdate(e);\n        this._handleErrorDataToActiveOrErrorClass(e);\n        let form: FormArray;\n        let dataCreate: DataEntry;\n        // Enregistrement des données pour dataUpdate et dataCreate\n        if (e.dataForm || e.dataForm === 0 || e.data.id_indc.fl_indc_mdty === 0) {\n            let dataUpdate = new DataEntry;\n            dataUpdate = {\n                id_break: e.data.id_break.id_break,\n                id_hld: e.data.id_hld,\n                cd_cip13: e.data.cd_cip13,\n                id_indc: e.data.id_indc.id_indc,\n                fl_indc_mdty: e.data.id_indc.fl_indc_mdty,\n                cd_stat_entry: e.data.cd_stat_entry,\n                id_usr_crt: e.data.id_usr_crt,\n                id_usr_vld: -1,\n                ts_crt: new Date(e.data.ts_crt),\n                ts_lst_upd: new Date(),\n                val_indc: e.data.id_indc.cd_indc_typ === IndcTypes.NUMBER ? parseInt(e.dataForm, 10) : e.dataForm,\n                dt_grnlr: e.data.dt_grnlr\n            };\n            if (e.data.id_indc.cd_indc_faml.includes('IE')) {\n                dataCreate = {\n                    id_break: e.data.id_break.id_break,\n                    id_hld: e.data.id_hld,\n                    cd_cip13: e.data.cd_cip13,\n                    id_indc: e.data.id_indc.id_indc,\n                    fl_indc_mdty: e.data.id_indc.fl_indc_mdty,\n                    cd_stat_entry: 'toValidated',\n                    id_usr_crt: -1,\n                    id_usr_vld: -1,\n                    ts_crt: new Date(),\n                    ts_lst_upd: new Date(),\n                    val_indc: -1,\n                    ts_vld: 'null',\n                    dt_grnlr: this.dataEntryService.nextDtGrnlr\n                };\n            }\n            // Enregistrement des data precedentes dans le formulaire\n            form = this.dataEntryForm.get('dataToUpdate') as FormArray;\n            let data = form.controls.find( x => (x.value.id_indc === dataUpdate.id_indc) && (x.value.cd_cip13 === dataUpdate.cd_cip13));\n            if (!data) {\n                form.push(new FormControl(dataUpdate));\n            } else {\n                form.controls.forEach((item: FormControl) => {\n                    if ((item.value.id_indc === dataUpdate.id_indc) && (item.value.cd_cip13 === dataUpdate.cd_cip13)) {\n                        item.value.val_indc = dataUpdate.val_indc;\n                    }\n                });\n            }\n            if (dataCreate) {\n                form = this.dataEntryForm.get('dataToCreate') as FormArray;\n                data = form.controls.find( x => (x.value.id_indc === dataCreate.id_indc) && (x.value.cd_cip13 === dataCreate.cd_cip13));\n                if (!data) {\n                    form.push(new FormControl(dataCreate));\n                } else {\n                    form.controls.forEach((item: FormControl) => {\n                        if ((item.value.id_indc === dataCreate.id_indc) && (item.value.cd_cip13 === dataCreate.cd_cip13)) {\n                            item.value.val_indc = dataCreate.val_indc;\n                        }\n                    });\n                }\n            }\n        // Si le input est vide alors suppression de la data déjà présente dans le formulaire\n        } else {\n            let i = 0;\n            form = this.dataEntryForm.get('dataToUpdate') as FormArray;\n            form.controls.forEach((item: FormControl) => {\n                if ((item.value.id_indc === e.data.id_indc.id_indc) && (item.value.cd_cip13 === e.data.cd_cip13)) {\n                    form.removeAt(i);\n                    return;\n                }\n                i++;\n            });\n            i = 0;\n            form = this.dataEntryForm.get('dataToCreate') as FormArray;\n            form.controls.forEach((item: FormControl) => {\n                if ((item.value.id_indc === e.data.id_indc.id_indc) && (item.value.cd_cip13 === e.data.cd_cip13)) {\n                    form.removeAt(i);\n                    return;\n                }\n                i++;\n            });\n        }\n    }\n\n    public controlSendedMoreThanStock(dataEntry: DataEntry): boolean {\n        this._checkedIfInputFieldUsePresentationOrUpdateData();\n        const prevData = this.archivedData ? this.archivedData.archivedDataByDate.find(x => x.nextDtGrnlr === dataEntry.dt_grnlr) : null;\n        let prevDataForIndcToVerifiesExiste: DataEntry;\n        if (prevData) {\n            prevDataForIndcToVerifiesExiste = prevData.recurrentData.find((x: DataEntry) =>\n            x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1');\n        }\n        const dataToUpdate = this.formControls.dataToUpdate.value.length > 0 ?\n        this.formControls.dataToUpdate.value.filter(x => x.cd_cip13 === dataEntry.cd_cip13) : null;\n        let valuesExistAndDataNotValidated;\n        if (this.afterChecked) {\n            valuesExistAndDataNotValidated = (\n                dataEntry.cd_stat_entry === 'toValidated'\n                && prevData !== null\n                && prevDataForIndcToVerifiesExiste\n                && dataToUpdate !== null\n                && dataToUpdate.find(x =>\n                    x.id_indc === 7\n                ) !== undefined\n                && dataToUpdate.find(x =>\n                    x.id_indc === 8\n                ) !== undefined\n                && dataToUpdate.find(x =>\n                    x.id_indc === 22\n                ) !== undefined\n            );\n        } else {\n            valuesExistAndDataNotValidated = (\n                dataEntry.cd_stat_entry === 'toValidated'\n                && prevData !== null\n                && prevDataForIndcToVerifiesExiste\n                && this.presentationData.find(x =>\n                    x.cd_cip13 === dataEntry.cd_cip13\n                ).data.recurrentData.find(el =>\n                    el.id_indc.cd_indc === 'IE-1'\n                ) !== undefined\n                && this.presentationData.find(x =>\n                    x.cd_cip13 === dataEntry.cd_cip13\n                ).data.recurrentData.find(el =>\n                    el.id_indc.cd_indc === 'IE-2'\n                ) !== undefined\n            );\n        }\n        if (valuesExistAndDataNotValidated && this.afterChecked) {\n            const valueSended: number = dataToUpdate.find(x =>\n                x.id_indc === 22\n            ).val_indc;\n            const valueSupply: number = dataToUpdate.find(x =>\n                x.id_indc === 8\n            ).val_indc;\n            const valuePrevStock: number = Number(prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            ).val_indc);\n            return (valueSended && valueSupply) !== null ? valueSended > (valuePrevStock + valueSupply) : false;\n        } else if (valuesExistAndDataNotValidated && !this.afterChecked) {\n            const valueSended = this.presentationData.find(x =>\n                x.cd_cip13 === dataEntry.cd_cip13\n            ).data.recurrentData.find(el =>\n                el.id_indc.cd_indc === 'IE-16'\n            ).val_indc;\n            const valueSupply = this.presentationData.find(x =>\n                x.cd_cip13 === dataEntry.cd_cip13\n            ).data.recurrentData.find(el =>\n                el.id_indc.cd_indc === 'IE-2'\n            ).val_indc;\n            const valuePrevStock: number = Number(prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            ).val_indc);\n            return (valueSended && valueSupply) !== null ? Number(valueSended) > (valuePrevStock + Number(valueSupply)) : false;\n        } else {\n            return false;\n        }\n    }\n\n    public controlErreurStock(dataEntry: DataEntry): boolean {\n        this._checkedIfInputFieldUsePresentationOrUpdateData();\n        const prevData = this.archivedData ? this.archivedData.archivedDataByDate.find(x => x.nextDtGrnlr === dataEntry.dt_grnlr) : null;\n        let prevDataForIndcToVerifiesExiste: DataEntry;\n        if (prevData) {\n            prevDataForIndcToVerifiesExiste = prevData.recurrentData.find((x: DataEntry) =>\n            x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1');\n        }\n        const dataToUpdate = this.formControls.dataToUpdate.value.length > 0 ?\n        this.formControls.dataToUpdate.value.filter(x => x.cd_cip13 === dataEntry.cd_cip13) : null;\n        let valuesExistAndDataNotValidated;\n        if (this.afterChecked) {\n            valuesExistAndDataNotValidated = (\n                dataEntry.cd_stat_entry === 'toValidated'\n                && prevData !== null\n                &&\n                prevDataForIndcToVerifiesExiste\n                && dataToUpdate !== null\n                && dataToUpdate.find(x =>\n                    x.id_indc === 7\n                ) !== undefined\n                && dataToUpdate.find(x =>\n                    x.id_indc === 8\n                ) !== undefined\n                && dataToUpdate.find(x =>\n                    x.id_indc === 22\n                ) !== undefined\n            );\n        } else {\n            valuesExistAndDataNotValidated = (\n                dataEntry.cd_stat_entry === 'toValidated'\n                && prevData !== null\n                && prevDataForIndcToVerifiesExiste\n                && this.presentationData.find(x =>\n                    x.cd_cip13 === dataEntry.cd_cip13\n                ).data.recurrentData.find(el =>\n                    el.id_indc.cd_indc === 'IE-2'\n                ) !== undefined\n                && this.presentationData.find(x =>\n                    x.cd_cip13 === dataEntry.cd_cip13\n                ).data.recurrentData.find(el =>\n                    el.id_indc.cd_indc === 'IE-16'\n                ) !== undefined\n            );\n        }\n        if (valuesExistAndDataNotValidated && this.afterChecked) {\n            const valueSended: number = dataToUpdate.find(x =>\n                x.id_indc === 22\n            ).val_indc;\n            const valueSupply: number = dataToUpdate.find(x =>\n                x.id_indc === 8\n            ).val_indc;\n            const valuePrevStock = Number(prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            ).val_indc);\n            const stockTotal = valuePrevStock - valueSended + valueSupply < 0 ? 0 : valuePrevStock - valueSended + valueSupply;\n            const valueStock: number = dataToUpdate.find(x =>\n                x.id_indc === 7\n            ).val_indc;\n            return (valueSended && valueSupply && valueStock) !== null ?\n                (stockTotal < (valueStock - (valueStock * 0.05)) || stockTotal > (valueStock * 1.05)) : false;\n        } else if (valuesExistAndDataNotValidated && !this.afterChecked) {\n            const valueSended = this.presentationData.find(x =>\n                x.cd_cip13 === dataEntry.cd_cip13\n            ).data.recurrentData.find(el =>\n                el.id_indc.cd_indc === 'IE-16'\n            ).val_indc;\n            const valueSupply = this.presentationData.find(x =>\n                x.cd_cip13 === dataEntry.cd_cip13\n            ).data.recurrentData.find(el =>\n                el.id_indc.cd_indc === 'IE-2'\n            ).val_indc;\n            const valuePrevStock: number = Number(prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataEntry.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            ).val_indc);\n            const stockTotal = (valueSended && valueSupply) !== null ? valuePrevStock - Number(valueSended) + Number(valueSupply) : null;\n            const stockMin = stockTotal - Math.abs(stockTotal * 0.05);\n            const stockMax = stockTotal + Math.abs(stockTotal * 0.05) < 0 ? 0 : stockTotal + Math.abs(stockTotal * 0.05);\n            const valueStock: number = dataEntry.val_indc;\n            return (stockTotal && valueStock) !== null ?\n                (valueStock < stockMin || valueStock > stockMax) : false;\n        } else {\n            return false;\n        }\n    }\n\n    public consistencyCheck(archives: DataBreak) {\n        let errorStock = false;\n        let errorSended = false;\n        const dataToValidate: Array<any> = this.formControls.dataToUpdate.value;\n        const prevData = archives ? archives.archivedDataByDate.find(x => x.nextDtGrnlr === dataToValidate[0].dt_grnlr) : null;\n        const originData = archives ? archives.archivedDataByDate.find(x => x.date === dataToValidate[0].dt_grnlr) : null;\n        let valuesPrevStock: Array<DataEntry>;\n        let valuesStockOrigin: Array<DataEntry> = new Array;\n        let valuesSupplyOrigin: Array<DataEntry> = new Array;\n        let valuesSendedOrigin: Array<DataEntry> = new Array;\n        if (prevData) {\n            valuesPrevStock = prevData.recurrentData.filter((x: DataEntry) =>\n            x.id_indc.cd_indc === 'IE-1');\n        }\n        if (originData) {\n            valuesStockOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 7);\n            valuesSupplyOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 8);\n            valuesSendedOrigin = originData.recurrentData.filter(x => x.id_indc.id_indc === 22);\n        }\n        const valuesStock = dataToValidate.filter(x => x.id_indc === 7).concat(valuesStockOrigin);\n        const valuesSupply = dataToValidate.filter(x => x.id_indc === 8).concat(valuesSupplyOrigin);\n        const valuesSended = dataToValidate.filter(x => x.id_indc === 22).concat(valuesSendedOrigin);\n        if (\n            valuesPrevStock\n            &&\n            valuesStock.length > 0\n            &&\n            valuesSupply.length > 0\n            &&\n            valuesSended.length > 0\n        ) {\n            valuesSended.forEach(element => {\n                const dataPrevStock = valuesPrevStock.find((x: DataEntry) =>\n                x.cd_cip13 === element.cd_cip13\n                );\n                const valuePrevStock = dataPrevStock ? Number(dataPrevStock.val_indc) : null;\n                const datavaluesSupply = valuesSupply.find(x =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valueSupply = datavaluesSupply ? Number(datavaluesSupply.val_indc) : null;\n                const dataStock = valuesStock.find((x: DataEntry) =>\n                    x.cd_cip13 === element.cd_cip13\n                );\n                const valueStock = dataStock ? Number(dataStock.val_indc) : null;\n                const stockTotal = valuePrevStock !== null && valueSupply !== null ?\n                    valuePrevStock - Number(element.val_indc) + valueSupply : null;\n                const stockMin = stockTotal !== null ? stockTotal - Math.abs(stockTotal * 0.05) : null;\n                const stockMax = stockTotal !== null ?\n                    stockTotal + Math.abs(stockTotal * 0.05) < 0 ? 0 : stockTotal + Math.abs(stockTotal * 0.05) : null;\n                errorStock = valueStock !== null && stockTotal !== null && (valueStock < stockMin || valueStock > stockMax) ?\n                    true : errorStock;\n                errorSended = valuePrevStock !== null && valueSupply !== null && Number(element.val_indc) > (valuePrevStock + valueSupply) ?\n                    true : errorSended;\n            });\n        }\n        this.warningStockError = errorStock;\n        this.warningStockBiggest = errorSended;\n    }\n\n    public onClickValidate() {\n        if (!this.canValidate || !this.isValidator) {\n            return;\n        }\n        this.formControls.dataToUpdate.value.forEach(element => {\n            if (element.id_usr_crt === null) {\n                element.id_usr_crt = this.currentUser.id;\n            }\n            element.id_usr_vld = this.currentUser.id;\n            element.cd_stat_entry = 'validated';\n            element.ts_vld = new Date();\n        });\n        this.dataEntryService.updateDataEntry(this.formControls.dataToUpdate.value).pipe(\n            first(),\n            switchMap(d =>\n                this._createDataEntry(this.formControls.dataToCreate.value)),\n            switchMap(d =>\n                this.dataEntryService.controlDataEntry(this.formControls.dataToUpdate.value[0])),\n        )\n        .subscribe(\n            (resp) => this._afterValidate(resp),\n            () => this._onError()\n        );\n    }\n\n    public onClickSubmitSave(): Observable<boolean> {\n        if (!this.canSave) {\n            return;\n        }\n        this.presentationData.forEach(x => {\n            x.data.startingData.forEach(startingData => {\n                const data = this.formControls.dataToUpdate.value.find(dataToUpdate =>\n                    dataToUpdate.cd_cip13 === startingData.cd_cip13 &&\n                    dataToUpdate.id_indc === startingData.id_indc.id_indc &&\n                    // tslint:disable-next-line: triple-equals\n                    dataToUpdate.val_indc != startingData.val_indc\n                );\n                if (data) {\n                    data.id_usr_crt = this.currentUser.id;\n                }\n            });\n            x.data.recurrentData.forEach(recurrentData => {\n                const data = this.formControls.dataToUpdate.value.find(dataToUpdate =>\n                    dataToUpdate.cd_cip13 === recurrentData.cd_cip13 &&\n                    dataToUpdate.id_indc === recurrentData.id_indc.id_indc &&\n                    // tslint:disable-next-line: triple-equals\n                    dataToUpdate.val_indc != recurrentData.val_indc\n                );\n                if (data) {\n                    data.id_usr_crt = this.currentUser.id;\n                }\n            });\n        });\n        this.formControls.dataToUpdate.value.forEach(element => {\n            if (element.id_usr_crt === null) {\n                element.id_usr_crt = -1;\n            }\n        });\n        // Si btn fonctionel\n        const dataToUpdateWithNullValue: DataEntry[] = [];\n        this.nullValueToSave.forEach(e => {\n            const dataUpdate = {\n                id_break: e.id_break.id_break,\n                id_hld: e.id_hld,\n                cd_cip13: e.cd_cip13,\n                id_indc: e.id_indc.id_indc,\n                cd_stat_entry: e.cd_stat_entry,\n                id_usr_crt: this.currentUser.id,\n                id_usr_vld: -1,\n                ts_crt: new Date(e.ts_crt),\n                ts_lst_upd: new Date(),\n                dt_grnlr: e.dt_grnlr\n            };\n            dataToUpdateWithNullValue.push(dataUpdate);\n        });\n        if (dataToUpdateWithNullValue.length > 0) {\n            this.formControls.dataToUpdate.value.forEach(element => dataToUpdateWithNullValue.push(element));\n            return this._saveDataEntries(dataToUpdateWithNullValue);\n        }\n        return this._saveDataEntries(this.formControls.dataToUpdate.value);\n    }\n\n    private _checkedIfInputFieldUsePresentationOrUpdateData() {\n        let nbCheked: number = 0;\n        this.presentationData.forEach(x => x.data.recurrentData.forEach(el => {\n            nbCheked ++;\n        }));\n        this.presentationData.forEach(x => x.data.startingData.forEach(el => {\n            nbCheked ++;\n        }));\n        if (this.nbChecked > nbCheked) {\n            this.afterChecked = true;\n        } else {\n            this.afterChecked = false;\n        }\n    }\n\n    private _initSelectSessionAfterReloadData(dataBreak: DataBreak) {\n        this.dataBreak = dataBreak;\n        this.selectSession(dataBreak);\n    }\n\n    private _saveDataEntries(dataToSave: Array<DataEntry>): Observable<boolean> {\n        let obs: Observable<boolean>;\n        obs = this._updateDataEntry(dataToSave).pipe(\n            first(),\n            tap(resp => this._applyData(dataToSave))\n        );\n        obs.subscribe(\n            resp => this._afterSave(resp),\n            this._onError.bind(this)\n        );\n        return obs;\n    }\n\n    private _resetData(data?: DataBreak) {\n        this.warningStockBiggest = false;\n        this.warningStockError = false;\n        this.nbChecked = 0;\n        this.nullValueToSave = [];\n        this.errorData = [];\n        this.label = undefined;\n        this.archivedData = undefined;\n        this.dataEntryService.dateStart = undefined;\n        this.dataEntryService.dateEnd = undefined;\n        this.presentationData = undefined;\n        if (data) {\n            this.dataEntryForm = this._formBuilder.group({\n                session: ['', Validators.required],\n                dataToUpdate: this._formBuilder.array([], [Validators.required]),\n                dataToCreate: this._formBuilder.array([], [Validators.required]),\n            });\n            this.formControls.session.setValue(data);\n            this.label = data.break.nm_break;\n        }\n    }\n\n    private _fetchProducts(dataBreak: DataBreak) {\n        const id: number[] = this._getUniqueCdCip13List(dataBreak);\n        const resp = require('src/app/mocks/pdctMocks.app.json')\n        this.presentationData = [];\n        resp.forEach(element => {\n            this.presentationData.push(element);\n        });\n        this._sortData();\n    }\n\n    private _getUniqueCdCip13List(dataBreak: DataBreak): Array<number> {\n        return [\n            ...new Set([\n                ...dataBreak.data.startingData.map(d => d.cd_cip13),\n                ...dataBreak.data.recurrentData.map(d => d.cd_cip13)\n            ])\n        ];\n    }\n\n    private _setDateStart(dataBreak: DataBreak): void {\n        this.dataEntryService.dateEnd = new Date(dataBreak.data.endDate);\n        this.dataEntryService.dateStart = new Date(dataBreak.data.startDate);\n    }\n\n    // Compte et trie les datas à afficher en fonction du produit\n    private _sortData() {\n        const startingData = this.formControls.session.value.data.startingData;\n        const recurrentData = this.formControls.session.value.data.recurrentData;\n        this.presentationData.forEach(elem => {\n            elem.data = new Data;\n            elem.data.startingData = startingData\n                .filter(x => (x.cd_cip13 === elem.cd_cip13))\n                .sort((a: DataEntry, b: DataEntry) => a.id_indc.nb_ord > b.id_indc.nb_ord ? 1 : -1);\n            elem.data.recurrentData = recurrentData\n                .filter(x => (x.cd_cip13 === elem.cd_cip13))\n                .sort((a: DataEntry, b: DataEntry) => a.id_indc.nb_ord > b.id_indc.nb_ord ? 1 : -1);\n        });\n        this.presentationData.sort(function(a: PdctHldSubst, b: PdctHldSubst) {\n            const cipA = a.cd_cip13;\n            const cipB = b.cd_cip13;\n            if (cipA < cipB) {\n                return -1;\n            } else if (cipA > cipB) {\n                return 1;\n            } else {\n                const nA = a.nm_medic.toLowerCase();\n                const nB = b.nm_medic.toLowerCase();\n                if (nA < nB) {\n                    return -1;\n                } else if (nA > nB) {\n                    return 1;\n                } else {\n                    const lA = a.ll_prest.toLowerCase();\n                    const lB = b.ll_prest.toLowerCase();\n                    if (lA < lB) {\n                        return -1;\n                    } else if (lA > lB) {\n                        return 1;\n                    } else {\n                        return 0;\n                    }\n                }\n            }\n        });\n        // this.presentationData.sort(function(a: PdctHldSubst, b: PdctHldSubst) {\n        //     const nA = a.ll_prest.toLowerCase();\n        //     const nB = b.ll_prest.toLowerCase();\n        //     if (nA < nB) {\n        //         return -1;\n        //     } else if (nA > nB) {\n        //         return 1;\n        //     } else {\n        //         return 0;\n        //     }\n        // });\n    }\n\n    private _updateDataEntry(results: Array<DataEntry>): Observable<boolean> {\n        return this.dataEntryService.updateDataEntry(results)\n        .pipe(map(\n          (resp) => {\n              return resp;\n            },\n          (err) => {\n            return err;\n          }\n        ));\n    }\n\n    private _createDataEntry(results: Array<any>): Observable<boolean> {\n        const newDataEntries = [];\n        results.forEach(element => {\n            newDataEntries.push(element);\n        });\n        if (newDataEntries.length < 1) {\n          return of(true);\n        } else {\n            return this.dataEntryService.createDataEntry(newDataEntries)\n            .pipe(map(\n              (resp) => {\n                return true;\n              },\n              (err) => {\n                return err;\n            }));\n        }\n    }\n\n    private _handleErrorDataToActiveOrErrorClass(e) {\n        const data = this.errorData.find(x => x.cd_cip13 === e.data.cd_cip13 && x.indc === e.data.id_indc.id_indc);\n        if (data) {\n            data.error = e.error;\n        } else {\n            this.errorData.push({\n                cd_cip13: e.data.cd_cip13,\n                indc: e.data.id_indc.id_indc,\n                error: e.error\n            });\n        }\n    }\n\n    // Si btn null fonctionel\n    private _registerNullValueToUpdate(data) {\n        const dataToRegister = data.data;\n        const dataAlreadyRegister = this.nullValueToSave.find(x =>\n            x.cd_cip13 === dataToRegister.cd_cip13 && x.id_indc.id_indc === dataToRegister.id_indc.id_indc\n        );\n        if (dataAlreadyRegister && !data.null) {\n            let i = 0;\n            this.nullValueToSave.forEach((element) => {\n                if (element.cd_cip13 === dataToRegister.cd_cip13 && element.id_indc.id_indc === dataToRegister.id_indc.id_indc) {\n                    this.nullValueToSave.splice(i, 1);\n                    return;\n                }\n                i++;\n            });\n        } else if (!dataAlreadyRegister && data.null) {\n            this.nullValueToSave.push(dataToRegister);\n        }\n    }\n\n    private _afterSave(response: boolean): void {\n        if (!response) {\n            return;\n        }\n        this.emitIsValidateOrSave.emit(true);\n        this.saveSuccess = true;\n        setTimeout(() => this.saveSuccess = false, 4000);\n    }\n\n    private _afterValidate(resp: number): void {\n        if (resp === 0) {\n          this.validateSuccess = true;\n          setTimeout(() => this.validateSuccess = false, 4000);\n        } else {\n          this.controlError = resp;\n          setTimeout(() => this.controlError = undefined, 4000);\n        }\n        this._resetData();\n        this.dataBreak = undefined;\n        this.emitIsValidateOrSave.emit(true);\n    }\n\n    private _onError(): void {\n        this.error = true;\n        setTimeout(() => this.error = false, 4000);\n    }\n\n    private _applyData(dataSaved: Array<DataEntry>): void {\n        dataSaved.forEach(d => {\n            const rowOrig: PdctHldSubst = this.presentationData.find(row => row.cd_cip13 === d.cd_cip13);\n            let indc: DataEntry = rowOrig.data.recurrentData.find(entry => entry.id_indc.id_indc === (d.id_indc as unknown));\n            if (typeof indc === 'undefined') {\n                indc = rowOrig.data.startingData.find(entry => entry.id_indc.id_indc === (d.id_indc as unknown));\n            }\n            if (typeof indc !== 'undefined') {\n                indc.val_indc = d.val_indc;\n            }\n        });\n    }\n\n    private _initd(dataBreak: DataBreak): DataBreak {\n        const archives: DataBreak =  this.archive.find(d => d.break.id_break === dataBreak.break.id_break);\n        if (archives) {\n            archives.archivedDataByDate.sort((a: Data, b: Data) => a.date < b.date ? 1 : -1);\n        }\n        return archives;\n    }\n\n    private _findModifs(valOrigin: DataEntry): boolean {\n\n        const getModifData = (data) => {\n            return data.value.find(row =>\n                row.id_indc === valOrigin.id_indc.id_indc\n                && row.cd_cip13 === valOrigin.cd_cip13\n            );\n        };\n\n        let modif = getModifData(this.formControls.dataToUpdate);\n        if (!modif) {\n            modif = getModifData(this.formControls.dataToCreate);\n        }\n        if (modif &&\n        (valOrigin.id_indc.cd_indc_typ === IndcTypes.TEXT\n        || valOrigin.val_indc === null\n        || modif.val_indc == null)) {\n            return valOrigin.val_indc !== modif.val_indc;\n        } else if (modif && valOrigin.id_indc.cd_indc_typ === IndcTypes.NUMBER) {\n            return parseInt(valOrigin.val_indc.toString(), 10) !== modif.val_indc;\n        }\n        return !modif && valOrigin.val_indc !== null;\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { DataEntry, IndcTypes } from 'src/app/models';\n\ntype InputValueType = string | number;\ninterface FormOptions {\n    displayValue: (InputValueType | ValidatorFn)[];\n    dataForm: (InputValueType | ValidatorFn)[];\n    data: DataEntry;\n    type: string;\n    error: boolean;\n    null: boolean;\n}\n\n@Component({\n    selector: 'app-data-entry-form-input',\n    templateUrl: './dataEntryFormInput.component.html',\n    styleUrls: ['./dataEntryFormInput.component.scss']\n})\nexport class DataEntryFormInputComponent implements OnInit {\n\n    @Input() disabled: boolean;\n    @Input() dataEntry: DataEntry;\n    @Input() warningStockBiggest: boolean;\n    @Input() warningStockError: boolean;\n\n    @Output() valueChanged: EventEmitter<string|number> = new EventEmitter();\n\n    _validateNumberPattern: RegExp = /(?=^.{0,12}$)^\\d*$/;\n    public form: FormGroup;\n\n    constructor(\n        private readonly _formBuilder: FormBuilder) {}\n\n    ngOnInit(): void {\n        this._init();\n    }\n\n    get isValid(): boolean { return !this.form.controls.dataForm.invalid; }\n    get value(): InputValueType { return this.form.controls.displayValue.value; }\n    get dataEntryType(): string { return this.dataEntry.id_indc.cd_indc_typ; }\n    get lowerType(): string { return this.dataEntryType.toLocaleLowerCase(); }\n    get placeholder(): string { return `_Form_field_${this.lowerType}_placeholder_`; }\n\n    public emitChangedValue() {\n        const emitFuncs: {[type: string]: () => void} = {\n            [IndcTypes.NUMBER]: this._emitNumber.bind(this),\n            [IndcTypes.TEXT]: this._emitText.bind(this)\n        };\n        emitFuncs[this.dataEntryType]();\n    }\n\n    private _init() {\n        const formGroupOptions: FormOptions = {\n            displayValue: [this._separateThousands(this.dataEntry.val_indc)],\n            dataForm: [this.dataEntry.val_indc],\n            data: this.dataEntry,\n            type: 'text',\n            error: false,\n            null: false\n        };\n        if (this.dataEntryType === IndcTypes.NUMBER) {\n            formGroupOptions.dataForm.push(Validators.pattern(this._validateNumberPattern));\n        }\n        this.form = this._formBuilder.group(formGroupOptions);\n        this.valueChanged.emit(this.form.value);\n    }\n\n    private _emitText() {\n        this.form.value.null = false;\n        this.form.controls.dataForm.setValue(this.value);\n        if (!this.value) {\n            this.form.value.null = true;\n        }\n        this.valueChanged.emit(this.form.value);\n    }\n\n    private _separateThousands(value: number|string): number|string {\n        if (['string', 'number'].includes(typeof value)) {\n            value = value.toString();\n            const thousandSeparatorPattern: RegExp = /(\\d)(?=(\\d{3})+(?!\\d))/g;\n            const split: string[] = value.split('.');\n            value = split[0].replace(thousandSeparatorPattern, '$1 ');\n            if (split.length === 2) {\n                value += `.${split[1]}`;\n            }\n        }\n        return value;\n    }\n\n    private _emitNumber() {\n        this.form.value.null = false;\n        this.form.value.error = false;\n        let formattedValue: string = '';\n        if (this.form.value.displayValue) {\n            formattedValue = this.form.value.displayValue\n                .toString()\n                .replace(/[,\\.\\s]/g, '');\n        }\n        this.form.controls.dataForm.setValue(formattedValue);\n        this.form.controls.displayValue.setValue(this._separateThousands(formattedValue));\n        if (this.isValid && !this.value) {\n            this.form.value.dataForm = '';\n            this.form.value.null = true;\n        } else if (!this.isValid) {\n            this.form.value.dataForm = '';\n            this.form.value.displayValue = '';\n            this.form.value.error = true;\n        }\n        this.valueChanged.emit(this.form.value);\n    }\n}\n","<div\n[id]=\"containerId\"\nclass=\"data-entry-grid-container\"\n*ngIf=\"hasData\">\n    <app-icon-text\n    class=\"grid-title\"\n    [active]=\"true\"\n    [fontSize]=\"'21px'\"\n    [fontLineHeight]=\"'28px'\"\n    [srcActive]=\"gridIcons[dataType]\"\n    [altText]=\"gridTitle | translate\"\n    [label]=\"gridTitle | translate\"></app-icon-text>\n    <angular-slickgrid\n    gridId=\"data-entry-grid-{{dataType}}\"\n    [columnDefinitions]=\"columnDefinitions\"\n    [gridOptions]=\"gridOptions\"\n    [dataset]=\"gridData.getData(dataType)\"\n    [gridHeight]=\"gridHeight\"\n    (onAngularGridCreated)=\"gridReady($event)\"\n    (sgOnClick)=\"cellClicked()\"></angular-slickgrid>\n    <div\n    class=\"grid-error\"\n    *ngIf=\"error === gridErrors.INVALID_NUMBER_VALUE\"\n    [translate]=\"'_Form_field_error_value_number_'\"></div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AngularGridInstance, Column, Editors, EditorValidatorOutput, FieldType, GridOption, HeaderButtonItem, OnEventArgs } from 'angular-slickgrid';\nimport { DataBreak, DataEntry, GridCallbackArgs, GridDataRow, GridDataType, GridIconsRef, IndcTypes, PdctHldSubst } from 'src/app/models';\nimport { GridDataService } from 'src/app/services';\nimport { v4 as uuid } from 'uuid';\n\nenum GridError {\n    INVALID_NUMBER_VALUE\n}\n\n@Component({\n    selector: 'app-data-entry-grid',\n    templateUrl: './dataEntryGrid.component.html',\n    styleUrls: ['./dataEntryGrid.component.scss']\n})\nexport class DataEntryGridComponent implements OnInit {\n    @Input() data: Array<PdctHldSubst>;\n    // DIFF\n    @Input() archivedData: DataBreak;\n    // DIFF\n    @Input() dataType: GridDataType;\n    @Input() gridTitle: string;\n    @Input() readOnly: boolean;\n\n    public containerId: string = uuid();\n    public columnDefinitions: Column[];\n    public gridOptions: GridOption;\n    public grid: AngularGridInstance;\n    public gridIcons: GridIconsRef = new GridIconsRef();\n    public error: GridError;\n    public gridErrors: typeof GridError = GridError;\n    _validateNumberPattern: RegExp = /(?=^.{0,12}$)^\\d*$/;\n\n    private _rowHeight: number = 100;\n    private _collapsable: Array<string> = ['nm_medic', 'll_prest'];\n    private _nbFrozenCol: number = 2;\n\n    constructor(\n        public gridData: GridDataService,\n        private _transalte: TranslateService) {}\n\n    get hasData(): boolean { return this.data.find(x => x.data[this.dataType].length > 0) ? true : false; }\n\n    get gridHeight(): number {\n        const bodyHeight = this._rowHeight * this.gridData.getData(this.dataType).length;\n        const headerPadding = 5;\n        const scrollbarSize = 20;\n        const headerHeight = this._rowHeight + (2 * headerPadding);\n        return bodyHeight + headerHeight + scrollbarSize;\n    }\n\n    ngOnInit(): void {\n        this._initGridData();\n        this._initColumnDefinitions();\n        this._initGridOptions();\n\n    }\n\n    // DIFF\n    private _controlSendedMoreThanStock(dataContext: any): boolean {\n        // si indc 22 de data > (indc 7 de prevData + indc 8 de data)\n        // alors warning \"Unités expédiée par le laboratoire trop importantes\"\n        // Unités expédiées supérieur à : Stock indiqué lors de la dernière saisie + Approvisionnement sur la periode de saisie\n        const DataToDtGrnlr = dataContext['_rowOrigin'].data[GridDataType.RECURRENT][0];\n        const prevData = this.archivedData && DataToDtGrnlr ?\n            this.archivedData.archivedDataByDate.find(x => x.nextDtGrnlr === DataToDtGrnlr.dt_grnlr) : null;\n        let prevDataForIndcToVerifiesExiste: DataEntry;\n        if (prevData) {\n            prevDataForIndcToVerifiesExiste = prevData.recurrentData.find((x: DataEntry) =>\n            x.cd_cip13 === dataContext.cd_cip13 && x.id_indc.cd_indc === 'IE-1');\n        }\n        const valuesExistAndDataNotValidated: boolean = (\n            this.data[0].data.recurrentData[0].cd_stat_entry === 'toValidated'\n            && !this.readOnly\n            && prevDataForIndcToVerifiesExiste\n            && dataContext['IE-1'] !== undefined\n            && dataContext['IE-2'] !== undefined\n        );\n        if (valuesExistAndDataNotValidated) {\n            const valueSended: number = dataContext['IE-16'] !== null ? Number(dataContext['IE-16']) : null;\n            const valueSupply: number = dataContext['IE-2'] !== null ? Number(dataContext['IE-2']) : null;\n            const valuePrevStock = Number(prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataContext.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            ).val_indc);\n            return (valueSended && valueSupply) !== null ? valueSended > (valuePrevStock + valueSupply) : false;\n        } else {\n            return false;\n        }\n    }\n\n    private _controlErreurStock(dataContext: any) {\n        // si\n        // indc 7 de prevData - indc 22 de data + indc 8 de data < indc 7 de data - 5% de indc 7 de data\n        // ||\n        // indc 7 de prevData - indc 22 de data + indc 8 de data > indc 7 de data + 5% de indc 7 de data\n        // alors warning \"Stock à date incohérent\"\n        // Le stock ne correspond pas à : Stock indiqué à la dernière saisie + Appro sur la periode de saisie - Unités expédiées\n        const DataToDtGrnlr = dataContext['_rowOrigin'].data[GridDataType.RECURRENT][0];\n        const prevData = this.archivedData && DataToDtGrnlr ?\n            this.archivedData.archivedDataByDate.find(x => x.nextDtGrnlr === DataToDtGrnlr.dt_grnlr) : null;\n        let prevDataForIndcToVerifiesExiste: DataEntry;\n        if (prevData) {\n            prevDataForIndcToVerifiesExiste = prevData.recurrentData.find((x: DataEntry) =>\n            x.cd_cip13 === dataContext.cd_cip13 && x.id_indc.cd_indc === 'IE-1');\n        }\n        const valuesExistAndDataNotValidated: boolean = (\n            this.data[0].data.recurrentData[0].cd_stat_entry === 'toValidated'\n            && !this.readOnly\n            && prevDataForIndcToVerifiesExiste\n            && dataContext['IE-2'] !== undefined\n            && dataContext['IE-16'] !== undefined\n        );\n        if (valuesExistAndDataNotValidated) {\n            const valueSended: number = dataContext['IE-16'] !== null ? Number(dataContext['IE-16']) : null;\n            const valueSupply: number = dataContext['IE-2'] !== null ? Number(dataContext['IE-2']) : null;\n            const prevNumber = prevData.recurrentData.find((x: DataEntry) =>\n                x.cd_cip13 === dataContext.cd_cip13 && x.id_indc.cd_indc === 'IE-1'\n            );\n            const valuePrevStock = prevNumber && prevNumber.val_indc ? Number(prevNumber.val_indc) : 0;\n            const stockTotal = valuePrevStock - valueSended + valueSupply;\n            const stockMin = stockTotal - Math.abs(stockTotal * 0.05);\n            const stockMax = stockTotal + Math.abs(stockTotal * 0.05) < 0 ? 0 : stockTotal + Math.abs(stockTotal * 0.05);\n            const valueStock: number = dataContext['IE-1'] !== null ? Number(dataContext['IE-1']) : null;\n            return (valueSended && valueSupply && valueStock) !== null ?\n                (valueStock < stockMin || valueStock > stockMax) : false;\n        } else {\n            return false;\n        }\n    }\n    // DIFF\n\n    public gridReady(angularGrid: AngularGridInstance): void {\n        console.log('GRID IS READY', angularGrid);\n        this.grid = angularGrid;\n        this.grid.dataView.fastSort('cd_cip13', true);\n        window.onresize = () => this.grid.resizerService.resizeGrid();\n        this.grid.slickGrid.onActiveCellChanged.subscribe(function(e, args) {\n            console.log('ON CELL ACTIVED HAS CHANGED !!!!!');\n            console.log('args', args);\n            console.log('cellActive', args.grid.getActiveCell());\n            console.log('selection rows', args.grid.getSelectedRows());\n            console.log('selection model ranges', args.grid.getSelectionModel().getSelectedRanges());\n        });\n    }\n\n    public cellClicked(): void {\n        console.log('CELL CLICKED !!!!!');\n        this.grid.slickGrid.getEditorLock().commitCurrentEdit();\n    }\n\n    private _makeEditable(column: Column): void {\n        column.editor = { model: Editors.text };\n        // console.log('column !!!!!!', column);\n        column.onCellClick = (e: Event, args: OnEventArgs) => {\n            console.log('ARGS ON CLICK', args);\n            const row = args.row;\n            const cell = args.cell;\n            const cellActive = this.grid.slickGrid.getActiveCell();\n            if (cellActive.row !== row && cellActive.cell !== cell) {\n                this.grid.slickGrid.setActiveCell(row, cell);\n            }\n        };\n        if (column.type === FieldType.number) {\n            column.onCellChange = (e: Event, args: OnEventArgs) => this._trimValue(args);\n            column.editor.validator = this._validateCellValue.bind(this);\n        }\n    }\n\n    private _initColumnDefinitions(): void {\n        this.columnDefinitions = [\n            this._buildColDef('CIP 13', 'cd_cip13', 130),\n            this._buildColDef('_DataEntry_specialy_', 'nm_medic', 350),\n            this._buildColDef('_DataEntry_presentation_', 'll_prest', 260)\n        ];\n        this._fixWidth(this.columnDefinitions[0]);\n        this._collapsable.forEach(this._makeCollapsable.bind(this));\n        this._protectFrozenColCells();\n        this.data\n        .sort((a: PdctHldSubst, b: PdctHldSubst) => a.data[this.dataType].length > b.data[this.dataType].length ? -1 : 1)\n        .forEach(row =>\n            row.data[this.dataType]\n                .sort((a: DataEntry, b: DataEntry) => a.id_indc.nb_ord > b.id_indc.nb_ord ? 1 : -1)\n                .forEach(this._addColDef.bind(this))\n        );\n    }\n\n    private _fixWidth(col: Column): void {\n        col.width = col.minWidth;\n        col.maxWidth = col.minWidth;\n        col.resizable = false;\n    }\n\n    private _protectFrozenColCells(): void {\n        for (let i = 0; i <= this._nbFrozenCol; i++) {\n            this._makeNonEditable(this.columnDefinitions[i]);\n        }\n    }\n\n    private _initGridData(): void {\n        this.gridData.setData(this.data, this.dataType);\n    }\n\n    private _initGridOptions(): void {\n        this.gridOptions = {\n            rowHeight: this._rowHeight,\n            frozenColumn: this._nbFrozenCol,\n            alwaysShowVerticalScroll: false,\n            enableAutoResize: true,\n            autoResize: {\n                containerId: this.containerId,\n            },\n            enableSorting: false,\n            enableGridMenu: false,\n            enableColumnReorder: false,\n            enableColumnPicker: false,\n            enableHeaderMenu: false,\n            enableHeaderButton: true,\n            enableCellNavigation: true\n        };\n        if (!this.readOnly) {\n            this._editableGridOptions();\n        }\n    }\n\n    private _editableGridOptions(): void {\n        this.gridOptions.enableExcelCopyBuffer = true;\n        this.gridOptions.excelCopyBufferOptions = {\n            newRowCreator: count => {}\n        };\n        this.gridOptions.editable = true;\n        this.gridOptions.autoCommitEdit = true;\n    }\n\n    private _addColDef(entry: DataEntry): void {\n        if (!this.columnDefinitions.find(col => col.id === entry.id_indc.cd_indc)) {\n            const newCol: Column = this._buildColDef(entry.id_indc.sl_indc, entry.id_indc.cd_indc, 200);\n            newCol.formatter = this._formatter.bind(this);\n            if (entry.id_indc['lb_date'] && entry.id_indc['lb_date'].length > 0) {\n                newCol.name = `<p class=\"col-name\">${this._transalte.instant(entry.id_indc.sl_indc)}</p><p class=\"indc-date\">${entry.id_indc['lb_date']}</p>`;\n            }\n            this._setColumnType(newCol, entry);\n            this._makeEditable(newCol);\n            this._addHelp(newCol, entry);\n            this.columnDefinitions.push(newCol);\n        }\n    }\n\n    private _buildColDef(name: string, field: string, minWidth: number): Column {\n        const colDef: Column = {\n            id: field,\n            name: this._transalte.instant(name),\n            field: field,\n            sortable: false,\n            minWidth: minWidth\n        };\n        return colDef;\n    }\n\n    private _setColumnType(newCol: Column, entry: DataEntry): void {\n        const slickTypes = {\n            [IndcTypes.TEXT]: FieldType.string,\n            [IndcTypes.NUMBER]: FieldType.number\n        };\n        newCol.type = slickTypes[entry.id_indc.cd_indc_typ];\n    }\n\n    private _addHelp(newCol: Column, entry: DataEntry): void {\n        this._addButtonToColumnHeader(newCol, {\n            cssClass: 'i-help',\n            command: 'help',\n            tooltip: entry.id_indc.ll_indc\n        });\n    }\n\n    private _makeCollapsable(columnId: string): void {\n        this._addButtonToColumnHeader(columnId, {\n            cssClass: 'i-hide',\n            command: 'collapse',\n            itemVisibilityOverride: (args) => (args.column.cssClass !== 'collapsed'),\n            action: this._expandCollapseColumn.bind(this)\n        });\n        this._addButtonToColumnHeader(columnId, {\n            cssClass: 'i-show',\n            command: 'expand',\n            itemVisibilityOverride: (args) => (args.column.cssClass === 'collapsed'),\n            action: this._expandCollapseColumn.bind(this)\n        });\n    }\n\n    private _makeNonEditable(column: Column): void {\n        column.onCellChange = this._rollbackCellChange.bind(this);\n        column.cannotTriggerInsert = true;\n    }\n\n    private _validateCellValue(value: string): EditorValidatorOutput {\n        value = value.replace(/[,\\.\\s]/g, '');\n        const isValid: boolean = (this._validateNumberPattern.test(value) || value.length === 0);\n        if (!isValid) {\n            this._setError(GridError.INVALID_NUMBER_VALUE);\n        }\n        return {valid: isValid};\n    }\n\n    private _addButtonToColumnHeader(column: string|Column, button: HeaderButtonItem): void {\n        if (typeof column === 'string') {\n            column = this.columnDefinitions.find(c => c.id === column);\n        }\n        if (typeof column.header === 'undefined') {\n            column.header = {};\n        }\n        if (typeof column.header.buttons === 'undefined') {\n            column.header.buttons = [];\n        }\n        column.header.buttons.push(button);\n    }\n\n    private _expandCollapseColumn(e: Event, args: GridCallbackArgs): void {\n        const column: Column = this.columnDefinitions.find(c => c.id === args.column.id);\n        const callbacks: {[cmd: string]: (Column) => void} = {\n            collapse: this._collapseColumn.bind(this),\n            expand: this._expandColumn.bind(this)\n        };\n        callbacks[args.command](column);\n        this._refreshColumnDefinitions();\n        this.grid.resizerService.resizeGrid();\n    }\n\n    private _collapseColumn(column: Column): void {\n        column.maxWidth = 30;\n        column.cssClass = 'collapsed';\n        column.headerCssClass = 'collapsed';\n    }\n\n    private _expandColumn(column: Column): void {\n        delete column.maxWidth;\n        delete column.cssClass;\n        delete column.headerCssClass;\n    }\n\n    private _rollbackCellChange(e: Event, args: OnEventArgs): void {\n        const dataRowOrig = this.data.find(d => d.cd_cip13 === args.dataContext.id);\n        if (typeof dataRowOrig !== 'undefined') {\n            this.gridData.getData(this.dataType)[args.row][args.columnDef.field] = dataRowOrig[args.columnDef.field];\n            this.grid.gridService.renderGrid();\n        }\n    }\n\n    private _refreshColumnDefinitions(): void {\n        this.columnDefinitions = [...this.columnDefinitions];\n    }\n\n    private _trimValue(args: OnEventArgs): void {\n        const gridData: GridDataRow[] = this.gridData.getData(this.dataType);\n        const newValue: string = args.dataContext[args.columnDef.field].replace(/[,\\.\\s]/g, '');\n        gridData[args.row][args.columnDef.field] = newValue.length > 0 ? parseInt(newValue, 10) : newValue;\n        this.grid.gridService.renderGrid();\n    }\n\n    private _setError(err: GridError): void {\n        this.error = err;\n        setTimeout(() => this.error = undefined, 4000);\n    }\n\n    private _formatter(row: number, cell: number, value: number|string, columnDef, dataContext): number|string {\n        const notExpected = this._controlIndcExpected(columnDef.field, dataContext['_rowOrigin']);\n        if (notExpected) {\n            return notExpected;\n        }\n        const valueToReturn = this._separateThousands(value);\n        if ( columnDef.field === 'IE-16' ) {\n            return this._controlSendedMoreThanStock(dataContext) ? `<span class='warning-control'> ${valueToReturn} </span> <small class='warning-control'>Unités expédiées supérieur au stock indiqué lors de la dernière saisie.</small>` : valueToReturn;\n        } else if (columnDef.field === 'IE-1') {\n            return this._controlErreurStock(dataContext) ? `<span class='warning-control'> ${valueToReturn} </span> <small class='warning-control'>Le stock ne correspond pas avec les unités expédiées et l'approvisionnement.</small>` : valueToReturn;\n        } else {\n            return valueToReturn;\n        }\n    }\n\n    private _controlIndcExpected(indc: string, entry: PdctHldSubst): string {\n        const existe = entry.data[this.dataType].find((x: DataEntry) => x.id_indc.cd_indc === indc);\n        let value: string;\n        if (!existe) {\n            value = `<span class='archive-value'>Déjà Validé</span>`;\n            const archives = this.archivedData['archivedDataByDate'].find( x => x.date === entry.data[this.dataType][0].dt_grnlr);\n            const archive = archives ?\n                archives[this.dataType].find((x: DataEntry) => x.cd_cip13 === entry.cd_cip13 && x.id_indc.cd_indc === indc) : null;\n            value = archive && archive.val_indc !== null ?\n                `<span class='archive-value'> ${archive.val_indc}</span> <small class='archive-value'>Déjà Validé</small>` : value;\n        }\n        return value;\n    }\n\n    private _separateThousands(value: number|string): number|string {\n        if (['number', 'string'].includes(typeof value)) {\n            value = value.toString();\n            const thousandSeparatorPattern: RegExp = /(\\d)(?=(\\d{3})+(?!\\d))/g;\n            const split: string[] = value.split('.');\n            value = split[0].replace(thousandSeparatorPattern, '$1 ');\n            if (split.length === 2) {\n                value += `.${split[1]}`;\n            }\n        }\n        return value;\n    }\n}\n","<div class=\"row\">\n  <div class=\"left-menu col-lg-5\">\n    <h1>{{'_Home_main_title_' | translate}}</h1>\n  </div>\n\n  <app-navbar class=\"navbar\"></app-navbar>\n\n  <div class=\"col-lg-7 right-content\">\n    <div\n      class=\"message success-msg\"\n      *ngIf=\"home.sessionSucces === true\"\n      [translate]=\"'_Create_Success_'\">\n    </div>\n    <div class=\"navigation\" *ngFor=\"let link of menuLinks\">\n        <app-icon-text \n        (click)=\"onClick(link)\" \n        [ngClass]=\"{'disable-click': link.active === false}\" \n        [fontSize]=\"'21px'\" \n        [fontLineHeight]=\"'28px'\" \n        [colorInactive]=\"'grey'\" \n        [active]=\"link.active\"\n        [srcActive]=\"link.srcActive\" \n        [srcInactive]=\"link.srcInactive\"\n        [altText]=\"link.altText | translate\" \n        [label]=\"link.label | translate\"\n        [lblUrl]=\"link.lblUrl\">\n        </app-icon-text>\n      </div>\n    </div>\n\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { noop } from 'rxjs';\nimport { User } from 'src/app/models';\nimport { HomeService } from 'src/app/services';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  public menuLinks: Array<any> = [\n\n    {\n      'url' : '/view/dashboard',\n      'active': true,\n      'srcActive': 'ansm_icons/Picto_tableau_de_bord.svg',\n      'srcInactive': 'ansm_icons/Picto_tableau_de_bord.svg',\n      'altText': '_Home_label_dashboards_',\n      'label': '_Home_label_dashboards_',\n      'roles': []\n    },\n    {\n      'url' : '/view/dataEntry',\n      'active': true,\n      'srcActive': 'ansm_icons/Picto_saisie_donnees.svg',\n      'srcInactive': 'ansm_icons/Picto_saisie_donnees.svg',\n      'altText': '_Home_label_data_entry_',\n      'label': '_Home_label_data_entry_',\n      'roles': []\n\n    },\n    {\n      'dropdown': true,\n      'lblUrl': [\n        {\n          url: '/view/soldOut/create',\n          lbl: '_Home_label_sold_out_create_'\n        },\n        {\n          url: '/view/users',\n          lbl: '_Home_label_user_update_'\n        },\n        {\n          url: '/view/soldOut/update',\n          lbl: '_Home_label_sold_out_update_'\n        },\n        {\n          url: '/view/unit',\n          lbl: '_Home_label_unit_'\n        },\n        {\n          url: '/view/dataEntryTracking',\n          lbl: '_Home_label_data_entry_tracking_'\n        },\n        {\n          url: '/view/laboratoire',\n          lbl: '_Home_label_data_laboratoire_'\n        }\n      ],\n      'active': true,\n      'srcActive': 'ansm_icons/Picto_modifier_session.svg',\n      'srcInactive': 'ansm_icons/Picto_modifier_session.svg',\n      'altText': '_Home_label_admin_',\n      'label': '_Home_label_admin_',\n      'roles': []\n    }\n  ];\n  private _currentUser: User = new User();\n\n  constructor(\n    public home: HomeService,\n    private router: Router\n    ) {\n      this._currentUser = require('src/app/mocks/userMocks.app.json');\n     }\n\n  ngOnInit() {\n    this._checkRoles();\n  }\n  public onClick(link: any) {\n    if (link.active === false) {\n      return;\n    } else {\n      link.dropdown ? noop() : this.router.navigate([link.url]);\n    }\n  }\n  private _checkRoles() {\n    const newMenuLinks = [];\n    this.menuLinks.forEach((element, i) => {\n      const isValid = true;\n      if (isValid && isValid === true) {\n        newMenuLinks.push(element);\n      }\n    });\n    this.menuLinks = newMenuLinks;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","var map = {\n\t\"./en.json\": \"./src/i18n/en.json\",\n\t\"./fr.json\": \"./src/i18n/fr.json\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/i18n sync recursive ^\\\\.\\\\/.*\\\\.json$\";","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch((err) => console.log('[LEEM-TECH] - [leem-front] - ' + new Date().toTimeString() + ' - ' + err));\n"]}